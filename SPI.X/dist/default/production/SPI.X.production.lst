

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jul  4 15:53:03 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F8722 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	idataCOMRAM
    80  0012BE                     __pidataCOMRAM:
    81                           	callstack 0
    82                           
    83                           ;initializer for buttonDebounce@counter
    84  0012BE  00FF               	dw	255
    85                           
    86                           	psect	smallconst
    87  001000                     __psmallconst:
    88                           	callstack 0
    89  001000  00                 	db	0
    90  001001                     main@F4616:
    91                           	callstack 0
    92  001001  73                 	db	115
    93  001002  73                 	db	115
    94  001003  73                 	db	115
    95  001004  64                 	db	100
    96  001005  64                 	db	100
    97  001006  64                 	db	100
    98  001007  64                 	db	100
    99  001008  00                 	db	0
   100  001009  00                 	db	0
   101  00100A  00                 	db	0
   102  00100B  00                 	db	0
   103  00100C  00                 	db	0
   104  00100D  00                 	db	0
   105  00100E  00                 	db	0
   106  00100F  00                 	db	0
   107  001010  00                 	db	0
   108  001011  00                 	db	0
   109  001012  00                 	db	0
   110  001013  00                 	db	0
   111  001014  00                 	db	0
   112  001015  00                 	db	0
   113  001016  00                 	db	0
   114  001017  00                 	db	0
   115  001018  00                 	db	0
   116  001019  00                 	db	0
   117  00101A  00                 	db	0
   118  00101B  00                 	db	0
   119  00101C  00                 	db	0
   120  00101D  00                 	db	0
   121  00101E  00                 	db	0
   122  00101F  00                 	db	0
   123  001020  00                 	db	0
   124  001021  00                 	db	0
   125  001022  00                 	db	0
   126  001023  00                 	db	0
   127  001024  00                 	db	0
   128  001025  00                 	db	0
   129  001026  00                 	db	0
   130  001027  00                 	db	0
   131  001028  00                 	db	0
   132  001029  00                 	db	0
   133  00102A  00                 	db	0
   134  00102B  00                 	db	0
   135  00102C  00                 	db	0
   136  00102D  00                 	db	0
   137  00102E  00                 	db	0
   138  00102F  00                 	db	0
   139  001030  00                 	db	0
   140  001031  00                 	db	0
   141  001032  00                 	db	0
   142  001033  00                 	db	0
   143  001034  00                 	db	0
   144  001035  00                 	db	0
   145  001036  00                 	db	0
   146  001037  00                 	db	0
   147  001038  00                 	db	0
   148  001039  00                 	db	0
   149  00103A  00                 	db	0
   150  00103B  00                 	db	0
   151  00103C  00                 	db	0
   152  00103D  00                 	db	0
   153  00103E  00                 	db	0
   154  00103F  00                 	db	0
   155  001040  00                 	db	0
   156  001041  00                 	db	0
   157  001042  00                 	db	0
   158  001043  00                 	db	0
   159  001044  00                 	db	0
   160  001045  00                 	db	0
   161  001046  00                 	db	0
   162  001047  00                 	db	0
   163  001048  00                 	db	0
   164  001049  00                 	db	0
   165  00104A  00                 	db	0
   166  00104B  00                 	db	0
   167  00104C  00                 	db	0
   168  00104D  00                 	db	0
   169  00104E  00                 	db	0
   170  00104F  00                 	db	0
   171  001050  00                 	db	0
   172  001051                     __end_ofmain@F4616:
   173                           	callstack 0
   174  0000                     _PORTD	set	3971
   175  0000                     _TRISD	set	3989
   176  0000                     _TXREG1	set	4013
   177  0000                     _RCREG1	set	4014
   178  0000                     _SPBRG	set	4015
   179  0000                     _SSPBUF	set	4041
   180  0000                     _SSPSTATbits	set	4039
   181  0000                     _SSP1CON1	set	4038
   182  0000                     _SSPSTAT	set	4039
   183  0000                     _TRISB0	set	31896
   184  0000                     _TRISC6	set	31910
   185  0000                     _TRISC7	set	31911
   186  0000                     _TXEN1	set	32101
   187  0000                     _CREN1	set	32092
   188  0000                     _SPEN1	set	32095
   189  0000                     _SYNC1	set	32100
   190  0000                     _BRGH1	set	32098
   191  0000                     _INT0IF	set	32657
   192  0000                     _RC1IF	set	31989
   193  0000                     _RC1IE	set	31981
   194  0000                     _INT0IE	set	32660
   195  0000                     _INTEDG0	set	32654
   196  0000                     _PEIE	set	32662
   197  0000                     _GIE	set	32663
   198  0000                     _LATC0	set	31832
   199  0000                     _TRISC2	set	31906
   200  0000                     _TRISC3	set	31907
   201  0000                     _TRISC4	set	31908
   202  0000                     _TRISC5	set	31909
   203  0000                     _SSPIE	set	31979
   204  0000                     _SSPIF	set	31987
   205  001051  00                 	db	0	; dummy byte at the end
   206  0000                     
   207                           ; #config settings
   208                           
   209                           	psect	cinit
   210  001156                     __pcinit:
   211                           	callstack 0
   212  001156                     start_initialization:
   213                           	callstack 0
   214  001156                     __initialization:
   215                           	callstack 0
   216                           
   217                           ; Initialize objects allocated to COMRAM (2 bytes)
   218                           ; load TBLPTR registers with __pidataCOMRAM
   219  001156  0EBE               	movlw	low __pidataCOMRAM
   220  001158  6EF6               	movwf	tblptrl,c
   221  00115A  0E12               	movlw	high __pidataCOMRAM
   222  00115C  6EF7               	movwf	tblptrh,c
   223  00115E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   224  001160  6EF8               	movwf	tblptru,c
   225  001162  0009               	tblrd		*+	;fetch initializer
   226  001164  CFF5 F055          	movff	tablat,__pdataCOMRAM
   227  001168  0009               	tblrd		*+	;fetch initializer
   228  00116A  CFF5 F056          	movff	tablat,__pdataCOMRAM+1
   229                           
   230                           ; Clear objects allocated to COMRAM (4 bytes)
   231  00116E  6A54               	clrf	(__pbssCOMRAM+3)& (0+255),c
   232  001170  6A53               	clrf	(__pbssCOMRAM+2)& (0+255),c
   233  001172  6A52               	clrf	(__pbssCOMRAM+1)& (0+255),c
   234  001174  6A51               	clrf	__pbssCOMRAM& (0+255),c
   235  001176                     end_of_initialization:
   236                           	callstack 0
   237  001176                     __end_of__initialization:
   238                           	callstack 0
   239  001176  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   240  001178  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   241  00117A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   242  00117C  6EF8               	movwf	tblptru,c
   243  00117E  0E10               	movlw	high __Lsmallconst
   244  001180  6EF7               	movwf	tblptrh,c
   245  001182  0100               	movlb	0
   246  001184  EF29  F008         	goto	_main	;jump to C main() function
   247                           
   248                           	psect	bssCOMRAM
   249  000051                     __pbssCOMRAM:
   250                           	callstack 0
   251  000051                     _outValue:
   252                           	callstack 0
   253  000051                     	ds	1
   254  000052                     _readSerialValue:
   255                           	callstack 0
   256  000052                     	ds	1
   257  000053                     _FLAGS:
   258                           	callstack 0
   259  000053                     	ds	1
   260  000054                     _readSPIValue:
   261                           	callstack 0
   262  000054                     	ds	1
   263                           
   264                           	psect	dataCOMRAM
   265  000055                     __pdataCOMRAM:
   266                           	callstack 0
   267  000055                     buttonDebounce@counter:
   268                           	callstack 0
   269  000055                     	ds	2
   270                           
   271                           	psect	cstackCOMRAM
   272  000001                     __pcstackCOMRAM:
   273                           	callstack 0
   274  000001                     main@test:
   275                           	callstack 0
   276                           
   277                           ; 80 bytes @ 0x0
   278  000001                     	ds	80
   279                           
   280 ;;
   281 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   282 ;;
   283 ;; *************** function _main *****************
   284 ;; Defined at:
   285 ;;		line 22 in file "newmain.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;  test           80    0[COMRAM] const unsigned char [80]
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   294 ;; Tracked objects:
   295 ;;		On entry : 0/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   300 ;;      Locals:        80       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   302 ;;      Totals:        80       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   303 ;;Total ram usage:       80 bytes
   304 ;; Hardware stack levels required when called: 9
   305 ;; This function calls:
   306 ;;		_buttonCallback
   307 ;;		_buttonDebounce
   308 ;;		_displayRequestHandle
   309 ;;		_initialiseButton
   310 ;;		_serialCallback
   311 ;;		_setButtonInterrput
   312 ;;		_setButtonIo
   313 ;;		_setInterrupts
   314 ;;		_setIo
   315 ;;		_setSPIInterrupt
   316 ;;		_setSerial
   317 ;;		_setSerialIo
   318 ;;		_setupDisplayIo
   319 ;; This function is called by:
   320 ;;		Startup code after reset
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324                           	psect	text0
   325  001052                     __ptext0:
   326                           	callstack 0
   327  001052                     _main:
   328                           	callstack 22
   329  001052                     
   330                           ;newmain.c: 23:     setIo();
   331  001052  EC60  F009         	call	_setIo	;wreg free
   332                           
   333                           ;newmain.c: 24:     setSPIInterrupt();
   334  001056  EC46  F009         	call	_setSPIInterrupt	;wreg free
   335                           
   336                           ;newmain.c: 25:     setSerialIo();
   337  00105A  EC43  F009         	call	_setSerialIo	;wreg free
   338  00105E                     
   339                           ;newmain.c: 26:     setSerial();
   340  00105E  EC0E  F009         	call	_setSerial	;wreg free
   341  001062                     
   342                           ;newmain.c: 27:     setupDisplayIo();
   343  001062  EC22  F009         	call	_setupDisplayIo	;wreg free
   344                           
   345                           ;newmain.c: 28:     initialiseButton();
   346  001066  EC52  F009         	call	_initialiseButton	;wreg free
   347                           
   348                           ;newmain.c: 29:     setButtonInterrput();
   349  00106A  EC4C  F009         	call	_setButtonInterrput	;wreg free
   350                           
   351                           ;newmain.c: 30:     setButtonIo();
   352  00106E  EC5B  F009         	call	_setButtonIo	;wreg free
   353                           
   354                           ;newmain.c: 31:     setInterrupts();
   355  001072  EC49  F009         	call	_setInterrupts	;wreg free
   356  001076                     
   357                           ;newmain.c: 35:     const unsigned char test[80] = "sssdddd";
   358  001076  0E01               	movlw	low main@F4616
   359  001078  6EF6               	movwf	tblptrl,c
   360  00107A                     	if	0	;There is only one active tblptr byte
   361  00107A                     	endif
   362  00107A                     	if	0	;There are less than 3 active tblptr bytes
   363  00107A                     	endif
   364  00107A  EE20  F001         	lfsr	2,main@test
   365  00107E  0E4F               	movlw	79
   366  001080                     u160:
   367  001080  0009               	tblrd		*+
   368  001082  CFF5 FFDE          	movff	tablat,postinc2
   369  001086  06E8               	decf	wreg,f,c
   370  001088  E2FB               	bc	u160
   371  00108A                     l1077:
   372                           
   373                           ;newmain.c: 38:         if (FLAGS.bits.DISPLAY_READING) {
   374  00108A  A853               	btfss	_FLAGS^0,4,c
   375  00108C  EF4A  F008         	goto	u171
   376  001090  EF4C  F008         	goto	u170
   377  001094                     u171:
   378  001094  EF4F  F008         	goto	l1083
   379  001098                     u170:
   380  001098                     
   381                           ;newmain.c: 39:             displayRequestHandle();
   382  001098  ECC4  F008         	call	_displayRequestHandle	;wreg free
   383  00109C                     
   384                           ;newmain.c: 40:             FLAGS.bits.DISPLAY_READING = 0;
   385  00109C  9853               	bcf	_FLAGS^0,4,c
   386  00109E                     l1083:
   387                           
   388                           ;newmain.c: 42:         if (FLAGS.bits.UART_RECEIVED) {
   389  00109E  A253               	btfss	_FLAGS^0,1,c
   390  0010A0  EF54  F008         	goto	u181
   391  0010A4  EF56  F008         	goto	u180
   392  0010A8                     u181:
   393  0010A8  EF59  F008         	goto	l1089
   394  0010AC                     u180:
   395  0010AC                     
   396                           ;newmain.c: 43:             serialCallback();
   397  0010AC  EC4F  F009         	call	_serialCallback	;wreg free
   398  0010B0                     
   399                           ;newmain.c: 44:             FLAGS.bits.UART_RECEIVED = 0;
   400  0010B0  9253               	bcf	_FLAGS^0,1,c
   401  0010B2                     l1089:
   402                           
   403                           ;newmain.c: 46:         if (FLAGS.bits.PUSHED_BUTTON) {
   404  0010B2  A653               	btfss	_FLAGS^0,3,c
   405  0010B4  EF5E  F008         	goto	u191
   406  0010B8  EF60  F008         	goto	u190
   407  0010BC                     u191:
   408  0010BC  EF63  F008         	goto	l1095
   409  0010C0                     u190:
   410  0010C0                     
   411                           ;newmain.c: 47:             FLAGS.bits.SERVICED = 0;
   412  0010C0  9453               	bcf	_FLAGS^0,2,c
   413  0010C2                     
   414                           ;newmain.c: 48:             buttonCallback();
   415  0010C2  ECDB  F008         	call	_buttonCallback	;wreg free
   416  0010C6                     l1095:
   417                           
   418                           ;newmain.c: 50:         if(FLAGS.bits.SERVICED==0){
   419  0010C6  B453               	btfsc	_FLAGS^0,2,c
   420  0010C8  EF68  F008         	goto	u201
   421  0010CC  EF6A  F008         	goto	u200
   422  0010D0                     u201:
   423  0010D0  EF45  F008         	goto	l1077
   424  0010D4                     u200:
   425  0010D4                     
   426                           ;newmain.c: 51:             buttonDebounce();
   427  0010D4  ECED  F008         	call	_buttonDebounce	;wreg free
   428  0010D8  EF45  F008         	goto	l1077
   429  0010DC  EF07  F000         	goto	start
   430  0010E0                     __end_of_main:
   431                           	callstack 0
   432                           
   433 ;; *************** function _setupDisplayIo *****************
   434 ;; Defined at:
   435 ;;		line 6 in file "display.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;		None
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		wreg, status,2
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   453 ;;Total ram usage:        0 bytes
   454 ;; Hardware stack levels used: 1
   455 ;; Hardware stack levels required when called: 6
   456 ;; This function calls:
   457 ;;		Nothing
   458 ;; This function is called by:
   459 ;;		_main
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463                           	psect	text1
   464  001244                     __ptext1:
   465                           	callstack 0
   466  001244                     _setupDisplayIo:
   467                           	callstack 24
   468  001244                     
   469                           ;display.c: 7:     TRISD = 0x00;
   470  001244  0E00               	movlw	0
   471  001246  6E95               	movwf	149,c	;volatile
   472                           
   473                           ;display.c: 8:     PORTD = 0x00;
   474  001248  0E00               	movlw	0
   475  00124A  6E83               	movwf	131,c	;volatile
   476  00124C  0012               	return		;funcret
   477  00124E                     __end_of_setupDisplayIo:
   478                           	callstack 0
   479                           
   480 ;; *************** function _setSerialIo *****************
   481 ;; Defined at:
   482 ;;		line 17 in file "serial.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		None
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   500 ;;Total ram usage:        0 bytes
   501 ;; Hardware stack levels used: 1
   502 ;; Hardware stack levels required when called: 6
   503 ;; This function calls:
   504 ;;		Nothing
   505 ;; This function is called by:
   506 ;;		_main
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510                           	psect	text2
   511  001286                     __ptext2:
   512                           	callstack 0
   513  001286                     _setSerialIo:
   514                           	callstack 24
   515  001286                     
   516                           ;serial.c: 18:     TRISC7 = 1;
   517  001286  8E94               	bsf	3988,7,c	;volatile
   518                           
   519                           ;serial.c: 19:     TRISC6 = 0;
   520  001288  9C94               	bcf	3988,6,c	;volatile
   521  00128A  0012               	return		;funcret
   522  00128C                     __end_of_setSerialIo:
   523                           	callstack 0
   524                           
   525 ;; *************** function _setSerial *****************
   526 ;; Defined at:
   527 ;;		line 5 in file "serial.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;		None
   530 ;; Auto vars:     Size  Location     Type
   531 ;;		None
   532 ;; Return value:  Size  Location     Type
   533 ;;                  1    wreg      void 
   534 ;; Registers used:
   535 ;;		wreg, status,2
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   545 ;;Total ram usage:        0 bytes
   546 ;; Hardware stack levels used: 1
   547 ;; Hardware stack levels required when called: 6
   548 ;; This function calls:
   549 ;;		Nothing
   550 ;; This function is called by:
   551 ;;		_main
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           	psect	text3
   556  00121C                     __ptext3:
   557                           	callstack 0
   558  00121C                     _setSerial:
   559                           	callstack 24
   560  00121C                     
   561                           ;serial.c: 6:     BRGH1 = 0;
   562  00121C  94AC               	bcf	4012,2,c	;volatile
   563  00121E                     
   564                           ;serial.c: 7:     SPBRG = 15;
   565  00121E  0E0F               	movlw	15
   566  001220  6EAF               	movwf	175,c	;volatile
   567  001222                     
   568                           ;serial.c: 8:     SYNC1 = 0;
   569  001222  98AC               	bcf	4012,4,c	;volatile
   570  001224                     
   571                           ;serial.c: 9:     SPEN1 = 1;
   572  001224  8EAB               	bsf	4011,7,c	;volatile
   573  001226                     
   574                           ;serial.c: 10:     RC1IE = 1;
   575  001226  8A9D               	bsf	3997,5,c	;volatile
   576  001228                     
   577                           ;serial.c: 11:     CREN1 = 1;
   578  001228  88AB               	bsf	4011,4,c	;volatile
   579  00122A                     
   580                           ;serial.c: 12:     RC1IF = 0;
   581  00122A  9A9E               	bcf	3998,5,c	;volatile
   582  00122C                     
   583                           ;serial.c: 13:     TXEN1 = 1;
   584  00122C  8AAC               	bsf	4012,5,c	;volatile
   585                           
   586                           ;serial.c: 14:     RCREG1 = 0;
   587  00122E  0E00               	movlw	0
   588  001230  6EAE               	movwf	174,c	;volatile
   589  001232  0012               	return		;funcret
   590  001234                     __end_of_setSerial:
   591                           	callstack 0
   592                           
   593 ;; *************** function _setSPIInterrupt *****************
   594 ;; Defined at:
   595 ;;		line 8 in file "spi.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;		None
   598 ;; Auto vars:     Size  Location     Type
   599 ;;		None
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      void 
   602 ;; Registers used:
   603 ;;		None
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   613 ;;Total ram usage:        0 bytes
   614 ;; Hardware stack levels used: 1
   615 ;; Hardware stack levels required when called: 6
   616 ;; This function calls:
   617 ;;		Nothing
   618 ;; This function is called by:
   619 ;;		_main
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           	psect	text4
   624  00128C                     __ptext4:
   625                           	callstack 0
   626  00128C                     _setSPIInterrupt:
   627                           	callstack 24
   628  00128C                     
   629                           ;spi.c: 9:     SSPIF = 0;
   630  00128C  969E               	bcf	3998,3,c	;volatile
   631                           
   632                           ;spi.c: 10:     SSPIE = 1;
   633  00128E  869D               	bsf	3997,3,c	;volatile
   634  001290  0012               	return		;funcret
   635  001292                     __end_of_setSPIInterrupt:
   636                           	callstack 0
   637                           
   638 ;; *************** function _setIo *****************
   639 ;; Defined at:
   640 ;;		line 9 in file "init.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;                  1    wreg      void 
   647 ;; Registers used:
   648 ;;		None
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;Total ram usage:        0 bytes
   659 ;; Hardware stack levels used: 1
   660 ;; Hardware stack levels required when called: 6
   661 ;; This function calls:
   662 ;;		Nothing
   663 ;; This function is called by:
   664 ;;		_main
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           	psect	text5
   669  0012C0                     __ptext5:
   670                           	callstack 0
   671  0012C0                     _setIo:
   672                           	callstack 24
   673  0012C0  0012               	return		;funcret
   674  0012C2                     __end_of_setIo:
   675                           	callstack 0
   676                           
   677 ;; *************** function _setInterrupts *****************
   678 ;; Defined at:
   679 ;;		line 13 in file "init.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;		None
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		None
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;Total ram usage:        0 bytes
   698 ;; Hardware stack levels used: 1
   699 ;; Hardware stack levels required when called: 6
   700 ;; This function calls:
   701 ;;		Nothing
   702 ;; This function is called by:
   703 ;;		_main
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           	psect	text6
   708  001292                     __ptext6:
   709                           	callstack 0
   710  001292                     _setInterrupts:
   711                           	callstack 24
   712  001292                     
   713                           ;init.c: 14:     GIE = 1;
   714  001292  8EF2               	bsf	4082,7,c	;volatile
   715                           
   716                           ;init.c: 15:     PEIE = 1;
   717  001294  8CF2               	bsf	4082,6,c	;volatile
   718  001296  0012               	return		;funcret
   719  001298                     __end_of_setInterrupts:
   720                           	callstack 0
   721                           
   722 ;; *************** function _setButtonIo *****************
   723 ;; Defined at:
   724 ;;		line 4 in file "button.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;		None
   727 ;; Auto vars:     Size  Location     Type
   728 ;;		None
   729 ;; Return value:  Size  Location     Type
   730 ;;                  1    wreg      void 
   731 ;; Registers used:
   732 ;;		None
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;Total ram usage:        0 bytes
   743 ;; Hardware stack levels used: 1
   744 ;; Hardware stack levels required when called: 6
   745 ;; This function calls:
   746 ;;		Nothing
   747 ;; This function is called by:
   748 ;;		_main
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text7
   753  0012B6                     __ptext7:
   754                           	callstack 0
   755  0012B6                     _setButtonIo:
   756                           	callstack 24
   757  0012B6                     
   758                           ;button.c: 5:     TRISB0 = 1;
   759  0012B6  8093               	bsf	3987,0,c	;volatile
   760  0012B8  0012               	return		;funcret
   761  0012BA                     __end_of_setButtonIo:
   762                           	callstack 0
   763                           
   764 ;; *************** function _setButtonInterrput *****************
   765 ;; Defined at:
   766 ;;		line 19 in file "init.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;		None
   769 ;; Auto vars:     Size  Location     Type
   770 ;;		None
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		None
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   784 ;;Total ram usage:        0 bytes
   785 ;; Hardware stack levels used: 1
   786 ;; Hardware stack levels required when called: 6
   787 ;; This function calls:
   788 ;;		Nothing
   789 ;; This function is called by:
   790 ;;		_main
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           	psect	text8
   795  001298                     __ptext8:
   796                           	callstack 0
   797  001298                     _setButtonInterrput:
   798                           	callstack 24
   799  001298                     
   800                           ;init.c: 20:     INTEDG0 = 1;
   801  001298  8CF1               	bsf	4081,6,c	;volatile
   802                           
   803                           ;init.c: 21:     INT0IE = 1;
   804  00129A  88F2               	bsf	4082,4,c	;volatile
   805  00129C  0012               	return		;funcret
   806  00129E                     __end_of_setButtonInterrput:
   807                           	callstack 0
   808                           
   809 ;; *************** function _serialCallback *****************
   810 ;; Defined at:
   811 ;;		line 22 in file "serial.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		None
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   829 ;;Total ram usage:        0 bytes
   830 ;; Hardware stack levels used: 1
   831 ;; Hardware stack levels required when called: 6
   832 ;; This function calls:
   833 ;;		Nothing
   834 ;; This function is called by:
   835 ;;		_main
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text9
   840  00129E                     __ptext9:
   841                           	callstack 0
   842  00129E                     _serialCallback:
   843                           	callstack 24
   844  00129E                     
   845                           ;serial.c: 23:     FLAGS.bits.DISPLAY_READING = 1;
   846  00129E  8853               	bsf	_FLAGS^0,4,c
   847                           
   848                           ;serial.c: 24:     FLAGS.bits.DISPLAY_SERIAL_READING = 1;
   849  0012A0  8C53               	bsf	_FLAGS^0,6,c
   850  0012A2  0012               	return		;funcret
   851  0012A4                     __end_of_serialCallback:
   852                           	callstack 0
   853                           
   854 ;; *************** function _initialiseButton *****************
   855 ;; Defined at:
   856 ;;		line 8 in file "button.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;		None
   859 ;; Auto vars:     Size  Location     Type
   860 ;;		None
   861 ;; Return value:  Size  Location     Type
   862 ;;                  1    wreg      void 
   863 ;; Registers used:
   864 ;;		None
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   874 ;;Total ram usage:        0 bytes
   875 ;; Hardware stack levels used: 1
   876 ;; Hardware stack levels required when called: 6
   877 ;; This function calls:
   878 ;;		Nothing
   879 ;; This function is called by:
   880 ;;		_main
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           	psect	text10
   885  0012A4                     __ptext10:
   886                           	callstack 0
   887  0012A4                     _initialiseButton:
   888                           	callstack 24
   889  0012A4                     
   890                           ;button.c: 9:     FLAGS.bits.PUSHED_BUTTON = 0;
   891  0012A4  9653               	bcf	_FLAGS^0,3,c
   892                           
   893                           ;button.c: 10:     FLAGS.bits.SERVICED = 1;
   894  0012A6  8453               	bsf	_FLAGS^0,2,c
   895  0012A8  0012               	return		;funcret
   896  0012AA                     __end_of_initialiseButton:
   897                           	callstack 0
   898                           
   899 ;; *************** function _displayRequestHandle *****************
   900 ;; Defined at:
   901 ;;		line 21 in file "display.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		cstack
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   919 ;;Total ram usage:        0 bytes
   920 ;; Hardware stack levels used: 1
   921 ;; Hardware stack levels required when called: 8
   922 ;; This function calls:
   923 ;;		_displaySPI
   924 ;;		_displaySerial
   925 ;; This function is called by:
   926 ;;		_main
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text11
   931  001188                     __ptext11:
   932                           	callstack 0
   933  001188                     _displayRequestHandle:
   934                           	callstack 22
   935  001188                     
   936                           ;display.c: 22:     if (FLAGS.bits.DISPLAY_SERIAL_READING) {
   937  001188  AC53               	btfss	_FLAGS^0,6,c
   938  00118A  EFC9  F008         	goto	u111
   939  00118E  EFCB  F008         	goto	u110
   940  001192                     u111:
   941  001192  EFD0  F008         	goto	l265
   942  001196                     u110:
   943  001196                     
   944                           ;display.c: 23:         displaySerial();
   945  001196  EC27  F009         	call	_displaySerial	;wreg free
   946  00119A                     
   947                           ;display.c: 24:         FLAGS.bits.DISPLAY_SERIAL_READING = 0;
   948  00119A  9C53               	bcf	_FLAGS^0,6,c
   949                           
   950                           ;display.c: 25:     } else {
   951  00119C  EFDA  F008         	goto	l268
   952  0011A0                     l265:
   953                           
   954                           ;display.c: 26:         if (FLAGS.bits.DISPLAY_SPI_READING) {
   955  0011A0  AA53               	btfss	_FLAGS^0,5,c
   956  0011A2  EFD5  F008         	goto	u121
   957  0011A6  EFD7  F008         	goto	u120
   958  0011AA                     u121:
   959  0011AA  EFDA  F008         	goto	l268
   960  0011AE                     u120:
   961  0011AE                     
   962                           ;display.c: 27:             displaySPI();
   963  0011AE  EC2C  F009         	call	_displaySPI	;wreg free
   964  0011B2                     
   965                           ;display.c: 28:             FLAGS.bits.DISPLAY_SPI_READING = 0;
   966  0011B2  9A53               	bcf	_FLAGS^0,5,c
   967  0011B4                     l268:
   968  0011B4  0012               	return		;funcret
   969  0011B6                     __end_of_displayRequestHandle:
   970                           	callstack 0
   971                           
   972 ;; *************** function _displaySerial *****************
   973 ;; Defined at:
   974 ;;		line 11 in file "display.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;		None
   977 ;; Auto vars:     Size  Location     Type
   978 ;;		None
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		cstack
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   992 ;;Total ram usage:        0 bytes
   993 ;; Hardware stack levels used: 1
   994 ;; Hardware stack levels required when called: 7
   995 ;; This function calls:
   996 ;;		_displayCallback
   997 ;; This function is called by:
   998 ;;		_displayRequestHandle
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           	psect	text12
  1003  00124E                     __ptext12:
  1004                           	callstack 0
  1005  00124E                     _displaySerial:
  1006                           	callstack 22
  1007  00124E                     
  1008                           ;display.c: 12:     outValue = readSerialValue;
  1009  00124E  C052  F051         	movff	_readSerialValue,_outValue
  1010  001252                     
  1011                           ;display.c: 13:     displayCallback();
  1012  001252  EC55  F009         	call	_displayCallback	;wreg free
  1013  001256  0012               	return		;funcret
  1014  001258                     __end_of_displaySerial:
  1015                           	callstack 0
  1016                           
  1017 ;; *************** function _displaySPI *****************
  1018 ;; Defined at:
  1019 ;;		line 16 in file "display.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1037 ;;Total ram usage:        0 bytes
  1038 ;; Hardware stack levels used: 1
  1039 ;; Hardware stack levels required when called: 7
  1040 ;; This function calls:
  1041 ;;		_displayCallback
  1042 ;; This function is called by:
  1043 ;;		_displayRequestHandle
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           	psect	text13
  1048  001258                     __ptext13:
  1049                           	callstack 0
  1050  001258                     _displaySPI:
  1051                           	callstack 22
  1052  001258                     
  1053                           ;display.c: 17:     outValue = readSPIValue;
  1054  001258  C054  F051         	movff	_readSPIValue,_outValue
  1055  00125C                     
  1056                           ;display.c: 18:     displayCallback();
  1057  00125C  EC55  F009         	call	_displayCallback	;wreg free
  1058  001260  0012               	return		;funcret
  1059  001262                     __end_of_displaySPI:
  1060                           	callstack 0
  1061                           
  1062 ;; *************** function _displayCallback *****************
  1063 ;; Defined at:
  1064 ;;		line 33 in file "display.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		None
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1082 ;;Total ram usage:        0 bytes
  1083 ;; Hardware stack levels used: 1
  1084 ;; Hardware stack levels required when called: 6
  1085 ;; This function calls:
  1086 ;;		Nothing
  1087 ;; This function is called by:
  1088 ;;		_displaySerial
  1089 ;;		_displaySPI
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text14
  1094  0012AA                     __ptext14:
  1095                           	callstack 0
  1096  0012AA                     _displayCallback:
  1097                           	callstack 22
  1098  0012AA                     
  1099                           ;display.c: 34:     PORTD = outValue;
  1100  0012AA  C051  FF83         	movff	_outValue,3971	;volatile
  1101  0012AE  0012               	return		;funcret
  1102  0012B0                     __end_of_displayCallback:
  1103                           	callstack 0
  1104                           
  1105 ;; *************** function _buttonDebounce *****************
  1106 ;; Defined at:
  1107 ;;		line 26 in file "button.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;		None
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;		None
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		wreg, status,2, status,0
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1125 ;;Total ram usage:        0 bytes
  1126 ;; Hardware stack levels used: 1
  1127 ;; Hardware stack levels required when called: 6
  1128 ;; This function calls:
  1129 ;;		Nothing
  1130 ;; This function is called by:
  1131 ;;		_main
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text15
  1136  0011DA                     __ptext15:
  1137                           	callstack 0
  1138  0011DA                     _buttonDebounce:
  1139                           	callstack 24
  1140  0011DA                     
  1141                           ;button.c: 27:     static int counter = 255;;button.c: 28:     counter--;
  1142  0011DA  0655               	decf	buttonDebounce@counter^0,f,c
  1143  0011DC  A0D8               	btfss	status,0,c
  1144  0011DE  0656               	decf	(buttonDebounce@counter+1)^0,f,c
  1145  0011E0                     
  1146                           ;button.c: 29:     if (counter == 0) {
  1147  0011E0  5055               	movf	buttonDebounce@counter^0,w,c
  1148  0011E2  1056               	iorwf	(buttonDebounce@counter+1)^0,w,c
  1149  0011E4  A4D8               	btfss	status,2,c
  1150  0011E6  EFF7  F008         	goto	u151
  1151  0011EA  EFF9  F008         	goto	u150
  1152  0011EE                     u151:
  1153  0011EE  EFFD  F008         	goto	l239
  1154  0011F2                     u150:
  1155  0011F2                     
  1156                           ;button.c: 30:         FLAGS.bits.SERVICED = 1;
  1157  0011F2  8453               	bsf	_FLAGS^0,2,c
  1158  0011F4                     
  1159                           ;button.c: 31:         counter = 255;
  1160  0011F4  0E00               	movlw	0
  1161  0011F6  6E56               	movwf	(buttonDebounce@counter+1)^0,c
  1162  0011F8  6855               	setf	buttonDebounce@counter^0,c
  1163  0011FA                     l239:
  1164  0011FA  0012               	return		;funcret
  1165  0011FC                     __end_of_buttonDebounce:
  1166                           	callstack 0
  1167                           
  1168 ;; *************** function _buttonCallback *****************
  1169 ;; Defined at:
  1170 ;;		line 13 in file "button.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;		None
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;		None
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      void 
  1177 ;; Registers used:
  1178 ;;		wreg, status,2
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;Total ram usage:        0 bytes
  1189 ;; Hardware stack levels used: 1
  1190 ;; Hardware stack levels required when called: 6
  1191 ;; This function calls:
  1192 ;;		Nothing
  1193 ;; This function is called by:
  1194 ;;		_main
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text16
  1199  0011B6                     __ptext16:
  1200                           	callstack 0
  1201  0011B6                     _buttonCallback:
  1202                           	callstack 24
  1203  0011B6                     
  1204                           ;button.c: 14:     if (FLAGS.bits.SERVICED == 0 && FLAGS.bits.PUSHED_BUTTON == 1) {
  1205  0011B6  B453               	btfsc	_FLAGS^0,2,c
  1206  0011B8  EFE0  F008         	goto	u131
  1207  0011BC  EFE2  F008         	goto	u130
  1208  0011C0                     u131:
  1209  0011C0  EFEB  F008         	goto	l1057
  1210  0011C4                     u130:
  1211  0011C4  A653               	btfss	_FLAGS^0,3,c
  1212  0011C6  EFE7  F008         	goto	u141
  1213  0011CA  EFE9  F008         	goto	u140
  1214  0011CE                     u141:
  1215  0011CE  EFEB  F008         	goto	l1057
  1216  0011D2                     u140:
  1217  0011D2                     
  1218                           ;button.c: 15:         TXREG1 = 'a';
  1219  0011D2  0E61               	movlw	97
  1220  0011D4  6EAD               	movwf	173,c	;volatile
  1221  0011D6                     l1057:
  1222                           
  1223                           ;button.c: 17:     FLAGS.bits.PUSHED_BUTTON = 0;
  1224  0011D6  9653               	bcf	_FLAGS^0,3,c
  1225  0011D8  0012               	return		;funcret
  1226  0011DA                     __end_of_buttonCallback:
  1227                           	callstack 0
  1228                           
  1229 ;; *************** function _service *****************
  1230 ;; Defined at:
  1231 ;;		line 18 in file "newmain.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;		None
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;		None
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      void 
  1238 ;; Registers used:
  1239 ;;		wreg, status,2, cstack
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1249 ;;Total ram usage:        0 bytes
  1250 ;; Hardware stack levels used: 1
  1251 ;; Hardware stack levels required when called: 5
  1252 ;; This function calls:
  1253 ;;		_interruptService
  1254 ;; This function is called by:
  1255 ;;		Interrupt level 2
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           	psect	intcode
  1260  000008                     __pintcode:
  1261                           	callstack 0
  1262  000008                     _service:
  1263                           	callstack 22
  1264                           
  1265                           ;incstack = 0
  1266  000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1267  00000A  ED31  F009         	call	int_func,f	;refresh shadow registers
  1268                           
  1269                           	psect	intcode_body
  1270  001262                     __pintcode_body:
  1271                           	callstack 22
  1272  001262                     int_func:
  1273                           	callstack 22
  1274  001262  0006               	pop		; remove dummy address from shadow register refresh
  1275  001264                     
  1276                           ;newmain.c: 19:     interruptService();
  1277  001264  EC58  F009         	call	_interruptService	;wreg free
  1278  001268  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1279  00126A  0011               	retfie		f
  1280  00126C                     __end_of_service:
  1281                           	callstack 0
  1282                           
  1283 ;; *************** function _interruptService *****************
  1284 ;; Defined at:
  1285 ;;		line 28 in file "interruptService.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      void 
  1292 ;; Registers used:
  1293 ;;		wreg, status,2, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;Total ram usage:        0 bytes
  1304 ;; Hardware stack levels used: 1
  1305 ;; Hardware stack levels required when called: 4
  1306 ;; This function calls:
  1307 ;;		_processInterruptService
  1308 ;; This function is called by:
  1309 ;;		_service
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text18
  1314  0012B0                     __ptext18:
  1315                           	callstack 0
  1316  0012B0                     _interruptService:
  1317                           	callstack 22
  1318  0012B0                     
  1319                           ;interruptService.c: 29:     processInterruptService();
  1320  0012B0  EC70  F008         	call	_processInterruptService	;wreg free
  1321  0012B4  0012               	return		;funcret
  1322  0012B6                     __end_of_interruptService:
  1323                           	callstack 0
  1324                           
  1325 ;; *************** function _processInterruptService *****************
  1326 ;; Defined at:
  1327 ;;		line 13 in file "interruptService.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;		None
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;Total ram usage:        0 bytes
  1346 ;; Hardware stack levels used: 1
  1347 ;; Hardware stack levels required when called: 3
  1348 ;; This function calls:
  1349 ;;		_SPIHandle
  1350 ;;		_buttonHandle
  1351 ;;		_serialHandle
  1352 ;; This function is called by:
  1353 ;;		_interruptService
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text19
  1358  0010E0                     __ptext19:
  1359                           	callstack 0
  1360  0010E0                     _processInterruptService:
  1361                           	callstack 22
  1362  0010E0                     
  1363                           ;interruptService.c: 14:     if (SSPIE == 1 && SSPIF == 1) {
  1364  0010E0  A69D               	btfss	3997,3,c	;volatile
  1365  0010E2  EF75  F008         	goto	i2u4_41
  1366  0010E6  EF77  F008         	goto	i2u4_40
  1367  0010EA                     i2u4_41:
  1368  0010EA  EF81  F008         	goto	i2l981
  1369  0010EE                     i2u4_40:
  1370  0010EE  A69E               	btfss	3998,3,c	;volatile
  1371  0010F0  EF7C  F008         	goto	i2u5_41
  1372  0010F4  EF7E  F008         	goto	i2u5_40
  1373  0010F8                     i2u5_41:
  1374  0010F8  EF81  F008         	goto	i2l981
  1375  0010FC                     i2u5_40:
  1376  0010FC                     
  1377                           ;interruptService.c: 15:         SPIHandle();
  1378  0010FC  EC3B  F009         	call	_SPIHandle	;wreg free
  1379  001100                     
  1380                           ;interruptService.c: 16:         SSPIF = 0;
  1381  001100  969E               	bcf	3998,3,c	;volatile
  1382  001102                     i2l981:
  1383                           
  1384                           ;interruptService.c: 18:     if (RC1IE == 1 && RC1IF == 1 && FLAGS.bits.UART_RECEIVED ==
      +                           0) {
  1385  001102  AA9D               	btfss	3997,5,c	;volatile
  1386  001104  EF86  F008         	goto	i2u6_41
  1387  001108  EF88  F008         	goto	i2u6_40
  1388  00110C                     i2u6_41:
  1389  00110C  EF99  F008         	goto	i2l991
  1390  001110                     i2u6_40:
  1391  001110  AA9E               	btfss	3998,5,c	;volatile
  1392  001112  EF8D  F008         	goto	i2u7_41
  1393  001116  EF8F  F008         	goto	i2u7_40
  1394  00111A                     i2u7_41:
  1395  00111A  EF99  F008         	goto	i2l991
  1396  00111E                     i2u7_40:
  1397  00111E  B253               	btfsc	_FLAGS^0,1,c
  1398  001120  EF94  F008         	goto	i2u8_41
  1399  001124  EF96  F008         	goto	i2u8_40
  1400  001128                     i2u8_41:
  1401  001128  EF99  F008         	goto	i2l991
  1402  00112C                     i2u8_40:
  1403  00112C                     
  1404                           ;interruptService.c: 19:         serialHandle();
  1405  00112C  EC36  F009         	call	_serialHandle	;wreg free
  1406  001130                     
  1407                           ;interruptService.c: 20:         RC1IF = 0;
  1408  001130  9A9E               	bcf	3998,5,c	;volatile
  1409  001132                     i2l991:
  1410                           
  1411                           ;interruptService.c: 22:     if (INTEDG0 == 1 && INT0IF == 1) {
  1412  001132  ACF1               	btfss	4081,6,c	;volatile
  1413  001134  EF9E  F008         	goto	i2u9_41
  1414  001138  EFA0  F008         	goto	i2u9_40
  1415  00113C                     i2u9_41:
  1416  00113C  EFAA  F008         	goto	i2l157
  1417  001140                     i2u9_40:
  1418  001140  A2F2               	btfss	4082,1,c	;volatile
  1419  001142  EFA5  F008         	goto	i2u10_41
  1420  001146  EFA7  F008         	goto	i2u10_40
  1421  00114A                     i2u10_41:
  1422  00114A  EFAA  F008         	goto	i2l157
  1423  00114E                     i2u10_40:
  1424  00114E                     
  1425                           ;interruptService.c: 23:         buttonHandle();
  1426  00114E  ECFE  F008         	call	_buttonHandle	;wreg free
  1427  001152                     
  1428                           ;interruptService.c: 24:         INT0IF = 0;
  1429  001152  92F2               	bcf	4082,1,c	;volatile
  1430  001154                     i2l157:
  1431  001154  0012               	return		;funcret
  1432  001156                     __end_of_processInterruptService:
  1433                           	callstack 0
  1434                           
  1435 ;; *************** function _serialHandle *****************
  1436 ;; Defined at:
  1437 ;;		line 28 in file "serial.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;		None
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		wreg, status,2, cstack
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;Total ram usage:        0 bytes
  1456 ;; Hardware stack levels used: 1
  1457 ;; Hardware stack levels required when called: 1
  1458 ;; This function calls:
  1459 ;;		_readSerial
  1460 ;; This function is called by:
  1461 ;;		_processInterruptService
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           	psect	text20
  1466  00126C                     __ptext20:
  1467                           	callstack 0
  1468  00126C                     _serialHandle:
  1469                           	callstack 23
  1470  00126C                     
  1471                           ;serial.c: 29:     FLAGS.bits.UART_RECEIVED = 1;
  1472  00126C  8253               	bsf	_FLAGS^0,1,c
  1473  00126E                     
  1474                           ;serial.c: 30:     readSerialValue = readSerial();
  1475  00126E  EC5D  F009         	call	_readSerial	;wreg free
  1476  001272  6E52               	movwf	_readSerialValue^0,c
  1477  001274  0012               	return		;funcret
  1478  001276                     __end_of_serialHandle:
  1479                           	callstack 0
  1480                           
  1481 ;; *************** function _readSerial *****************
  1482 ;; Defined at:
  1483 ;;		line 41 in file "serial.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;		None
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;		None
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      unsigned char 
  1490 ;; Registers used:
  1491 ;;		wreg, status,2
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;Total ram usage:        0 bytes
  1502 ;; Hardware stack levels used: 1
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_serialHandle
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text21
  1511  0012BA                     __ptext21:
  1512                           	callstack 0
  1513  0012BA                     _readSerial:
  1514                           	callstack 23
  1515  0012BA                     
  1516                           ;serial.c: 42:     return RCREG1;
  1517  0012BA  50AE               	movf	174,w,c	;volatile
  1518  0012BC  0012               	return		;funcret
  1519  0012BE                     __end_of_readSerial:
  1520                           	callstack 0
  1521                           
  1522 ;; *************** function _buttonHandle *****************
  1523 ;; Defined at:
  1524 ;;		line 20 in file "button.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;		None
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;		None
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		None
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1542 ;;Total ram usage:        0 bytes
  1543 ;; Hardware stack levels used: 1
  1544 ;; This function calls:
  1545 ;;		Nothing
  1546 ;; This function is called by:
  1547 ;;		_processInterruptService
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text22
  1552  0011FC                     __ptext22:
  1553                           	callstack 0
  1554  0011FC                     _buttonHandle:
  1555                           	callstack 24
  1556  0011FC                     
  1557                           ;button.c: 21:     if (FLAGS.bits.SERVICED == 1 && FLAGS.bits.PUSHED_BUTTON == 0) {
  1558  0011FC  A453               	btfss	_FLAGS^0,2,c
  1559  0011FE  EF03  F009         	goto	i2u2_41
  1560  001202  EF05  F009         	goto	i2u2_40
  1561  001206                     i2u2_41:
  1562  001206  EF0D  F009         	goto	i2l233
  1563  00120A                     i2u2_40:
  1564  00120A  B653               	btfsc	_FLAGS^0,3,c
  1565  00120C  EF0A  F009         	goto	i2u3_41
  1566  001210  EF0C  F009         	goto	i2u3_40
  1567  001214                     i2u3_41:
  1568  001214  EF0D  F009         	goto	i2l233
  1569  001218                     i2u3_40:
  1570  001218                     
  1571                           ;button.c: 22:         FLAGS.bits.PUSHED_BUTTON = 1;
  1572  001218  8653               	bsf	_FLAGS^0,3,c
  1573  00121A                     i2l233:
  1574  00121A  0012               	return		;funcret
  1575  00121C                     __end_of_buttonHandle:
  1576                           	callstack 0
  1577                           
  1578 ;; *************** function _SPIHandle *****************
  1579 ;; Defined at:
  1580 ;;		line 54 in file "spi.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg, status,2, cstack
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1598 ;;Total ram usage:        0 bytes
  1599 ;; Hardware stack levels used: 1
  1600 ;; Hardware stack levels required when called: 2
  1601 ;; This function calls:
  1602 ;;		_spiRead
  1603 ;; This function is called by:
  1604 ;;		_processInterruptService
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text23
  1609  001276                     __ptext23:
  1610                           	callstack 0
  1611  001276                     _SPIHandle:
  1612                           	callstack 22
  1613  001276                     
  1614                           ;spi.c: 55:     readSPIValue = spiRead();
  1615  001276  EC3F  F009         	call	_spiRead	;wreg free
  1616  00127A  6E54               	movwf	_readSPIValue^0,c
  1617  00127C  0012               	return		;funcret
  1618  00127E                     __end_of_SPIHandle:
  1619                           	callstack 0
  1620                           
  1621 ;; *************** function _spiRead *****************
  1622 ;; Defined at:
  1623 ;;		line 48 in file "spi.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;		None
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;		None
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      unsigned char 
  1630 ;; Registers used:
  1631 ;;		wreg, status,2, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;Total ram usage:        0 bytes
  1642 ;; Hardware stack levels used: 1
  1643 ;; Hardware stack levels required when called: 1
  1644 ;; This function calls:
  1645 ;;		_spiReceiveWait
  1646 ;; This function is called by:
  1647 ;;		_SPIHandle
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651                           	psect	text24
  1652  00127E                     __ptext24:
  1653                           	callstack 0
  1654  00127E                     _spiRead:
  1655                           	callstack 22
  1656  00127E                     
  1657                           ;spi.c: 50:     spiReceiveWait();
  1658  00127E  EC1A  F009         	call	_spiReceiveWait	;wreg free
  1659  001282                     
  1660                           ;spi.c: 51:     return (SSPBUF);
  1661  001282  50C9               	movf	201,w,c	;volatile
  1662  001284  0012               	return		;funcret
  1663  001286                     __end_of_spiRead:
  1664                           	callstack 0
  1665                           
  1666 ;; *************** function _spiReceiveWait *****************
  1667 ;; Defined at:
  1668 ;;		line 31 in file "spi.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;		None
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;		None
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  1    wreg      void 
  1675 ;; Registers used:
  1676 ;;		None
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;Total ram usage:        0 bytes
  1687 ;; Hardware stack levels used: 1
  1688 ;; This function calls:
  1689 ;;		Nothing
  1690 ;; This function is called by:
  1691 ;;		_spiRead
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           	psect	text25
  1696  001234                     __ptext25:
  1697                           	callstack 0
  1698  001234                     _spiReceiveWait:
  1699                           	callstack 22
  1700  001234                     i2l90:
  1701  001234  A0C7               	btfss	199,0,c	;volatile
  1702  001236  EF1F  F009         	goto	i2u1_41
  1703  00123A  EF21  F009         	goto	i2u1_40
  1704  00123E                     i2u1_41:
  1705  00123E  EF1A  F009         	goto	i2l90
  1706  001242                     i2u1_40:
  1707  001242  0012               	return		;funcret
  1708  001244                     __end_of_spiReceiveWait:
  1709                           	callstack 0
  1710                           
  1711                           	psect	rparam
  1712  0000                     
  1713                           	psect	temp
  1714  000057                     btemp:
  1715                           	callstack 0
  1716  000057                     	ds	1
  1717  0000                     int$flags	set	btemp
  1718  0000                     wtemp8	set	btemp+1
  1719  0000                     ttemp5	set	btemp+1
  1720  0000                     ttemp6	set	btemp+4
  1721  0000                     ttemp7	set	btemp+8
  1722                           
  1723                           	psect	idloc
  1724                           
  1725                           ;Config register IDLOC0 @ 0x200000
  1726                           ;	unspecified, using default values
  1727  200000                     	org	2097152
  1728  200000  FF                 	db	255
  1729                           
  1730                           ;Config register IDLOC1 @ 0x200001
  1731                           ;	unspecified, using default values
  1732  200001                     	org	2097153
  1733  200001  FF                 	db	255
  1734                           
  1735                           ;Config register IDLOC2 @ 0x200002
  1736                           ;	unspecified, using default values
  1737  200002                     	org	2097154
  1738  200002  FF                 	db	255
  1739                           
  1740                           ;Config register IDLOC3 @ 0x200003
  1741                           ;	unspecified, using default values
  1742  200003                     	org	2097155
  1743  200003  FF                 	db	255
  1744                           
  1745                           ;Config register IDLOC4 @ 0x200004
  1746                           ;	unspecified, using default values
  1747  200004                     	org	2097156
  1748  200004  FF                 	db	255
  1749                           
  1750                           ;Config register IDLOC5 @ 0x200005
  1751                           ;	unspecified, using default values
  1752  200005                     	org	2097157
  1753  200005  FF                 	db	255
  1754                           
  1755                           ;Config register IDLOC6 @ 0x200006
  1756                           ;	unspecified, using default values
  1757  200006                     	org	2097158
  1758  200006  FF                 	db	255
  1759                           
  1760                           ;Config register IDLOC7 @ 0x200007
  1761                           ;	unspecified, using default values
  1762  200007                     	org	2097159
  1763  200007  FF                 	db	255
  1764                           
  1765                           	psect	config
  1766                           
  1767                           ; Padding undefined space
  1768  300000                     	org	3145728
  1769  300000  FF                 	db	255
  1770                           
  1771                           ;Config register CONFIG1H @ 0x300001
  1772                           ;	Oscillator Selection bits
  1773                           ;	OSC = XT, XT oscillator
  1774                           ;	Fail-Safe Clock Monitor Enable bit
  1775                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1776                           ;	Internal/External Oscillator Switchover bit
  1777                           ;	IESO = OFF, Two-Speed Start-up disabled
  1778  300001                     	org	3145729
  1779  300001  01                 	db	1
  1780                           
  1781                           ;Config register CONFIG2L @ 0x300002
  1782                           ;	Power-up Timer Enable bit
  1783                           ;	PWRT = OFF, PWRT disabled
  1784                           ;	Brown-out Reset Enable bits
  1785                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1786                           ;	Brown-out Voltage bits
  1787                           ;	BORV = 3, Minimum setting
  1788  300002                     	org	3145730
  1789  300002  19                 	db	25
  1790                           
  1791                           ;Config register CONFIG2H @ 0x300003
  1792                           ;	Watchdog Timer
  1793                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1794                           ;	Watchdog Timer Postscale Select bits
  1795                           ;	WDTPS = 32768, 1:32768
  1796  300003                     	org	3145731
  1797  300003  1E                 	db	30
  1798                           
  1799                           ;Config register CONFIG3L @ 0x300004
  1800                           ;	Processor Data Memory Mode Select bits
  1801                           ;	MODE = MC, Microcontroller mode
  1802                           ;	Address Bus Width Select bits
  1803                           ;	ADDRBW = ADDR20BIT, 20-bit Address Bus
  1804                           ;	Data Bus Width Select bit
  1805                           ;	DATABW = DATA16BIT, 16-bit External Bus mode
  1806                           ;	External Bus Data Wait Enable bit
  1807                           ;	WAIT = OFF, Wait selections are unavailable for table reads and table writes
  1808  300004                     	org	3145732
  1809  300004  F3                 	db	243
  1810                           
  1811                           ;Config register CONFIG3H @ 0x300005
  1812                           ;	CCP2 MUX bit
  1813                           ;	CCP2MX = PORTC, ECCP2 input/output is multiplexed with RC1
  1814                           ;	ECCP MUX bit
  1815                           ;	ECCPMX = PORTE, ECCP1/3 (P1B/P1C/P3B/P3C) are multiplexed onto RE6, RE5, RE4 and RE3 r
      +                          espectively
  1816                           ;	Low-Power Timer1 Oscillator Enable bit
  1817                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1818                           ;	MCLR Pin Enable bit
  1819                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
  1820  300005                     	org	3145733
  1821  300005  83                 	db	131
  1822                           
  1823                           ;Config register CONFIG4L @ 0x300006
  1824                           ;	Stack Full/Underflow Reset Enable bit
  1825                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1826                           ;	Single-Supply ICSP Enable bit
  1827                           ;	LVP = OFF, Single-Supply ICSP disabled
  1828                           ;	Boot Block Size Select bits
  1829                           ;	BBSIZ = BB2K, 1K word (2 Kbytes) Boot Block size
  1830                           ;	Extended Instruction Set Enable bit
  1831                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1832                           ;	Background Debugger Enable bit
  1833                           ;	DEBUG = 0x1, unprogrammed default
  1834  300006                     	org	3145734
  1835  300006  81                 	db	129
  1836                           
  1837                           ; Padding undefined space
  1838  300007                     	org	3145735
  1839  300007  FF                 	db	255
  1840                           
  1841                           ;Config register CONFIG5L @ 0x300008
  1842                           ;	Code Protection bit Block 0
  1843                           ;	CP0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not code-protected
  1844                           ;	Code Protection bit Block 1
  1845                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1846                           ;	Code Protection bit Block 2
  1847                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1848                           ;	Code Protection bit Block 3
  1849                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1850                           ;	Code Protection bit Block 4
  1851                           ;	CP4 = OFF, Block 4 (010000-013FFFh) not code-protected
  1852                           ;	Code Protection bit Block 5
  1853                           ;	CP5 = OFF, Block 5 (014000-017FFFh) not code-protected
  1854                           ;	Code Protection bit Block 6
  1855                           ;	CP6 = OFF, Block 6 (01BFFF-018000h) not code-protected
  1856                           ;	Code Protection bit Block 7
  1857                           ;	CP7 = OFF, Block 7 (01C000-01FFFFh) not code-protected
  1858  300008                     	org	3145736
  1859  300008  FF                 	db	255
  1860                           
  1861                           ;Config register CONFIG5H @ 0x300009
  1862                           ;	Boot Block Code Protection bit
  1863                           ;	CPB = OFF, Boot Block (000000-0007FFh) not code-protected
  1864                           ;	Data EEPROM Code Protection bit
  1865                           ;	CPD = OFF, Data EEPROM not code-protected
  1866  300009                     	org	3145737
  1867  300009  C0                 	db	192
  1868                           
  1869                           ;Config register CONFIG6L @ 0x30000A
  1870                           ;	Write Protection bit Block 0
  1871                           ;	WRT0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not write-protected
  1872                           ;	Write Protection bit Block 1
  1873                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1874                           ;	Write Protection bit Block 2
  1875                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1876                           ;	Write Protection bit Block 3
  1877                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1878                           ;	Write Protection bit Block 4
  1879                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  1880                           ;	Write Protection bit Block 5
  1881                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  1882                           ;	Write Protection bit Block 6
  1883                           ;	WRT6 = OFF, Block 6 (01BFFF-018000h) not write-protected
  1884                           ;	Write Protection bit Block 7
  1885                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  1886  30000A                     	org	3145738
  1887  30000A  FF                 	db	255
  1888                           
  1889                           ;Config register CONFIG6H @ 0x30000B
  1890                           ;	Configuration Register Write Protection bit
  1891                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1892                           ;	Boot Block Write Protection bit
  1893                           ;	WRTB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not write-protected
  1894                           ;	Data EEPROM Write Protection bit
  1895                           ;	WRTD = OFF, Data EEPROM not write-protected
  1896  30000B                     	org	3145739
  1897  30000B  E0                 	db	224
  1898                           
  1899                           ;Config register CONFIG7L @ 0x30000C
  1900                           ;	Table Read Protection bit Block 0
  1901                           ;	EBTR0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not protected from table reads
      +                           executed in other blocks
  1902                           ;	Table Read Protection bit Block 1
  1903                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1904                           ;	Table Read Protection bit Block 2
  1905                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1906                           ;	Table Read Protection bit Block 3
  1907                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1908                           ;	Table Read Protection bit Block 4
  1909                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  1910                           ;	Table Read Protection bit Block 5
  1911                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  1912                           ;	Table Read Protection bit Block 6
  1913                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  1914                           ;	Table Read Protection bit Block 7
  1915                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  1916  30000C                     	org	3145740
  1917  30000C  FF                 	db	255
  1918                           
  1919                           ;Config register CONFIG7H @ 0x30000D
  1920                           ;	Boot Block Table Read Protection bit
  1921                           ;	EBTRB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not protected from table re
      +                          ads executed in other blocks
  1922  30000D                     	org	3145741
  1923  30000D  40                 	db	64
  1924                           tosu	equ	0xFFF
  1925                           tosh	equ	0xFFE
  1926                           tosl	equ	0xFFD
  1927                           stkptr	equ	0xFFC
  1928                           pclatu	equ	0xFFB
  1929                           pclath	equ	0xFFA
  1930                           pcl	equ	0xFF9
  1931                           tblptru	equ	0xFF8
  1932                           tblptrh	equ	0xFF7
  1933                           tblptrl	equ	0xFF6
  1934                           tablat	equ	0xFF5
  1935                           prodh	equ	0xFF4
  1936                           prodl	equ	0xFF3
  1937                           indf0	equ	0xFEF
  1938                           postinc0	equ	0xFEE
  1939                           postdec0	equ	0xFED
  1940                           preinc0	equ	0xFEC
  1941                           plusw0	equ	0xFEB
  1942                           fsr0h	equ	0xFEA
  1943                           fsr0l	equ	0xFE9
  1944                           wreg	equ	0xFE8
  1945                           indf1	equ	0xFE7
  1946                           postinc1	equ	0xFE6
  1947                           postdec1	equ	0xFE5
  1948                           preinc1	equ	0xFE4
  1949                           plusw1	equ	0xFE3
  1950                           fsr1h	equ	0xFE2
  1951                           fsr1l	equ	0xFE1
  1952                           bsr	equ	0xFE0
  1953                           indf2	equ	0xFDF
  1954                           postinc2	equ	0xFDE
  1955                           postdec2	equ	0xFDD
  1956                           preinc2	equ	0xFDC
  1957                           plusw2	equ	0xFDB
  1958                           fsr2h	equ	0xFDA
  1959                           fsr2l	equ	0xFD9
  1960                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    80
    Data        2
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     80      86
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _service in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _service in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _service in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _service in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _service in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _service in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _service in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _service in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _service in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _service in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _service in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _service in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _service in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _service in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _service in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _service in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _service in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                80    80      0       0
                                              0 COMRAM    80    80      0
                     _buttonCallback
                     _buttonDebounce
               _displayRequestHandle
                   _initialiseButton
                     _serialCallback
                 _setButtonInterrput
                        _setButtonIo
                      _setInterrupts
                              _setIo
                    _setSPIInterrupt
                          _setSerial
                        _setSerialIo
                     _setupDisplayIo
 ---------------------------------------------------------------------------------
 (1) _setupDisplayIo                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSerialIo                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSerial                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSPIInterrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setIo                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setInterrupts                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setButtonIo                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setButtonInterrput                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _serialCallback                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialiseButton                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displayRequestHandle                                 0     0      0       0
                         _displaySPI
                      _displaySerial
 ---------------------------------------------------------------------------------
 (2) _displaySerial                                        0     0      0       0
                    _displayCallback
 ---------------------------------------------------------------------------------
 (2) _displaySPI                                           0     0      0       0
                    _displayCallback
 ---------------------------------------------------------------------------------
 (3) _displayCallback                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttonDebounce                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttonCallback                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _service                                              0     0      0       0
                   _interruptService
 ---------------------------------------------------------------------------------
 (5) _interruptService                                     0     0      0       0
            _processInterruptService
 ---------------------------------------------------------------------------------
 (6) _processInterruptService                              0     0      0       0
                          _SPIHandle
                       _buttonHandle
                       _serialHandle
 ---------------------------------------------------------------------------------
 (7) _serialHandle                                         0     0      0       0
                         _readSerial
 ---------------------------------------------------------------------------------
 (8) _readSerial                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _buttonHandle                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _SPIHandle                                            0     0      0       0
                            _spiRead
 ---------------------------------------------------------------------------------
 (8) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (9) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _buttonCallback
   _buttonDebounce
   _displayRequestHandle
     _displaySPI
       _displayCallback
     _displaySerial
       _displayCallback
   _initialiseButton
   _serialCallback
   _setButtonInterrput
   _setButtonIo
   _setInterrupts
   _setIo
   _setSPIInterrupt
   _setSerial
   _setSerialIo
   _setupDisplayIo

 _service (ROOT)
   _interruptService
     _processInterruptService
       _SPIHandle
         _spiRead
           _spiReceiveWait
       _buttonHandle
       _serialHandle
         _readSerial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     50      56       1       91.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      56      32        0.0%
DATA                 0      0      56       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jul  4 15:53:03 2021

        ?_processInterruptService 0001                       _SSPSTATbits 000FC7  
                              l82 1290                               l201 12A2  
                             l121 12C0                               l124 1296  
                             l222 12B8                               l127 129C  
                             l225 12A8                               l229 11D8  
                             l262 1260                               l239 11FA  
                             l271 12AE                               l256 124C  
                             l265 11A0                               l259 1256  
                             l195 1232                               l268 11B4  
                             l198 128A                               l971 12AA  
                             _GIE 007F97                               l999 124E  
                             u110 1196                               u111 1192  
                             u120 11AE                               u200 10D4  
                             u121 11AA                               u201 10D0  
                             u130 11C4                               u131 11C0  
                             u140 11D2                               u141 11CE  
                             u150 11F2                               u151 11EE  
                             u160 1080                               u170 1098  
                             u171 1094                               u180 10AC  
                             u181 10A8                               u190 10C0  
                             u191 10BC                               wreg 000FE8  
                  ?_displaySerial 0001            ??_displayRequestHandle 0001  
                            l1001 1252                              l1003 1258  
                            l1011 1286                              l1005 125C  
                            l1021 1226                              l1013 121C  
                            l1031 12A4                              l1023 1228  
                            l1015 121E                              l1041 1196  
                            l1033 1298                              l1009 128C  
                            l1025 122A                              l1017 1222  
                            l1051 11B6                              l1043 119A  
                            l1035 12B6                              l1027 122C  
                            l1019 1224                              l1053 11C4  
                            l1061 11E0                              l1045 11AE  
                            l1037 1292                              l1029 1244  
                            l1055 11D2                              l1063 11F2  
                            l1047 11B2                              l1039 1188  
                            l1071 105E                              l1057 11D6  
                            l1065 11F4                              l1049 129E  
                            l1081 109C                              l1073 1062  
                            l1059 11DA                              l1091 10C0  
                            l1083 109E                              l1075 1076  
                            l1093 10C2                              l1085 10AC  
                            l1077 108A                              l1069 1052  
                            l1095 10C6                              l1087 10B0  
                            l1079 1098                              l1097 10D4  
                            l1089 10B2                              _PEIE 007F96  
                            i2l41 1268                              i2l90 1234  
                            i2l93 1242                              _main 1052  
                            btemp 0057                              start 000E  
                    ___param_bank 000000          __end_of_interruptService 12B6  
                           ?_main 0001                             _BRGH1 007D62  
                           _CREN1 007D5C                             _FLAGS 0053  
                           _LATC0 007C58                             _RC1IE 007CED  
                           _RC1IF 007CF5                             i2l104 1284  
                           i2l107 127C                             i2l204 1274  
                           i2l213 12BC                             i2l160 12B4  
                           i2l233 121A                             i2l157 1154  
                           i2l951 1282                             i2l961 126C  
                           i2l947 1234                             i2l955 12BA  
                           i2l963 126E                             i2l949 127E  
                           i2l965 11FC                             i2l981 1102  
                           i2l973 10E0                             i2l959 1276  
                           i2l967 120A                             i2l983 1110  
                           i2l991 1132                             i2l975 10EE  
                           i2l969 1218                             i2l993 1140  
                           i2l985 111E                             i2l977 10FC  
                           i2l995 114E                             i2l987 112C  
                           i2l979 1100                             i2l997 1152  
                           i2l989 1130                             _SPEN1 007D5F  
                           _SPBRG 000FAF                             _PORTD 000F83  
                           _TRISD 000F95                             _SSPIE 007CEB  
                           _SSPIF 007CF3                             _TXEN1 007D65  
                           _SYNC1 007D64                             _setIo 12C0  
                ?_displayCallback 0001                __size_of_SPIHandle 0008  
                 __end_of_spiRead 1286                             tablat 000FF5  
                 __end_of_service 126C                             ttemp5 0058  
                           ttemp6 005B                             ttemp7 005F  
                           status 000FD8             __end_of_setInterrupts 1298  
                           wtemp8 0058                  ??_setupDisplayIo 0001  
                 __initialization 1156                      __end_of_main 10E0  
                 _readSerialValue 0052                            ??_main 0001  
                   __activetblptr 000001                      ?_setButtonIo 0001  
                 ??_displaySerial 0001                 ?_initialiseButton 0001  
                    ?_setSerialIo 0001                            ?_setIo 0001  
              ??_initialiseButton 0001                     ?_buttonHandle 0001  
                          _INT0IE 007F94                            _INT0IF 007F91  
                          i2l1007 12B0                            i2l1067 1264  
                          _RCREG1 000FAE                            i2u1_40 1242  
                          i2u1_41 123E                            i2u2_40 120A  
                          i2u2_41 1206                            i2u3_40 1218  
                          i2u3_41 1214                            i2u4_40 10EE  
                          i2u4_41 10EA                            i2u5_40 10FC  
                          i2u5_41 10F8                            i2u6_40 1110  
                          i2u6_41 110C                            i2u7_40 111E  
                          i2u7_41 111A                            i2u8_40 112C  
                          i2u8_41 1128                            _TRISB0 007C98  
                          i2u9_40 1140                            _TRISC2 007CA2  
                          i2u9_41 113C                            _TRISC3 007CA3  
                          _TRISC4 007CA4                            _TRISC5 007CA5  
                          _TRISC6 007CA6                            _TRISC7 007CA7  
                          _SSPBUF 000FC9                            _TXREG1 000FAD  
              _setButtonInterrput 1298               ?_setButtonInterrput 0001  
               __end_of_SPIHandle 127E           __size_of_serialCallback 0006  
                          isa$std 000001                      __pdataCOMRAM 0055  
                    __mediumconst 0000                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                       ??_spiRead 0001                         ??_service 0001  
                  ??_buttonHandle 0001              ??_setButtonInterrput 0001  
                      __accesstop 0060           __end_of__initialization 1176  
                   ___rparam_used 000001                    __pcstackCOMRAM 0001  
                   __end_of_setIo 12C2          __size_of_setSPIInterrupt 0006  
__size_of_processInterruptService 0076                           ??_setIo 0001  
               ?_interruptService 0001           __size_of_spiReceiveWait 0010  
              __size_of_setSerial 0018                ??_interruptService 0001  
                         _INTEDG0 007F8E                           i2u10_40 114E  
                         i2u10_41 114A              __size_of_setButtonIo 0004  
                      _displaySPI 1258                           _SSPSTAT 000FC7  
         __size_of_buttonCallback 0024              __size_of_setSerialIo 0006  
         __size_of_buttonDebounce 0022     __size_of_displayRequestHandle 002E  
                   ?_serialHandle 0001                           __Hparam 0000  
                         __Lparam 0000                        _readSerial 12BA  
            __end_of_buttonHandle 121C                      __psmallconst 1000  
                  _serialCallback 129E                           __pcinit 1156  
                         __ramtop 1000                           __ptext0 1052  
                         __ptext1 1244                           __ptext2 1286  
                         __ptext3 121C                           __ptext4 128C  
                         __ptext5 12C0                           __ptext6 1292  
                         __ptext7 12B6                           __ptext8 1298  
                         __ptext9 129E                           _spiRead 127E  
                         _service 0008                    __pintcode_body 1262  
            end_of_initialization 1176                 __end_of_setSerial 1234  
                  ??_serialHandle 0001                           int_func 1262  
               ??_setSPIInterrupt 0001                 __end_ofmain@F4616 1051  
        __size_of_displayCallback 0006         __size_of_initialiseButton 0006  
          __end_of_serialCallback 12A4                           postinc2 000FDE  
          __size_of_setInterrupts 0006                         _SPIHandle 1276  
         _processInterruptService 10E0                       ?_displaySPI 0001  
           __end_of_displaySerial 1258                   ?_serialCallback 0001  
                  _spiReceiveWait 1234                       ?_readSerial 0001  
         __size_of_setupDisplayIo 000A                     __pidataCOMRAM 12BE  
                      ?_SPIHandle 0001               start_initialization 1156  
                  _buttonCallback 11B6       __size_of_setButtonInterrput 0006  
                  _buttonDebounce 11DA                     _setInterrupts 1292  
                    _readSPIValue 0054             __size_of_buttonHandle 0020  
          __end_of_spiReceiveWait 1244               __size_of_displaySPI 000A  
               ??_displayCallback 0001              __end_of_serialHandle 1276  
       ??_processInterruptService 0001                       __pbssCOMRAM 0051  
          __end_of_buttonCallback 11DA         __size_of_interruptService 0006  
           buttonDebounce@counter 0055            __end_of_buttonDebounce 11FC  
                    _buttonHandle 11FC               __size_of_readSerial 0004  
                  ?_setInterrupts 0001                  _initialiseButton 12A4  
                 ?_spiReceiveWait 0001                         __pintcode 0008  
    __end_of_displayRequestHandle 11B6                     ??_setButtonIo 0001  
                     __smallconst 1000                       ??_SPIHandle 0001  
                 _setSPIInterrupt 128C                          ?_spiRead 0001  
                 ?_buttonCallback 0001                          ?_service 0001  
                   ??_setSerialIo 0001                   ?_buttonDebounce 0001  
                  __size_of_setIo 0002   __end_of_processInterruptService 1156  
                       _setSerial 121C                         main@F4616 1001  
                        _SSP1CON1 000FC6                    _setupDisplayIo 1244  
                    ??_displaySPI 0001               __end_of_setButtonIo 12BA  
                 ??_setInterrupts 0001               __end_of_setSerialIo 128C  
                ??_serialCallback 0001                        ?_setSerial 0001  
                        __Hrparam 0000                          __Lrparam 0000  
                    __Lsmallconst 1000            __end_of_setupDisplayIo 124E  
           __size_of_serialHandle 000A                      ??_readSerial 0001  
              __end_of_displaySPI 1262           __end_of_setSPIInterrupt 1292  
                _interruptService 12B0                          __ptext10 12A4  
                        __ptext11 1188                          __ptext20 126C  
                        __ptext12 124E                          __ptext21 12BA  
                        __ptext13 1258                          __ptext22 11FC  
                        __ptext14 12AA                          __ptext23 1276  
                        __ptext15 11DA                          __ptext24 127E  
                        __ptext16 11B6                          __ptext25 1234  
                        __ptext18 12B0                          __ptext19 10E0  
                __size_of_spiRead 0008                  __size_of_service 1264  
            _displayRequestHandle 1188                __end_of_readSerial 12BE  
                   __size_of_main 008E                      _serialHandle 126C  
                 _displayCallback 12AA                          isa$xinst 000000  
                 ?_setupDisplayIo 0001                          _outValue 0051  
                        int$flags 0057            __size_of_displaySerial 000A  
                        main@test 0001                       _setButtonIo 12B6  
        __end_of_initialiseButton 12AA        __end_of_setButtonInterrput 129E  
                     _setSerialIo 1286                          intlevel2 0000  
           ?_displayRequestHandle 0001                  ??_spiReceiveWait 0001  
                     ??_setSerial 0001                  ?_setSPIInterrupt 0001  
                ??_buttonCallback 0001                  ??_buttonDebounce 0001  
                   _displaySerial 124E           __end_of_displayCallback 12B0  
