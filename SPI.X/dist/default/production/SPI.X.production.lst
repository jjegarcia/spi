

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jul  4 13:05:06 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F8722 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	smallconst
    76  001000                     __psmallconst:
    77                           	callstack 0
    78  001000  00                 	db	0
    79  001001                     main@F4614:
    80                           	callstack 0
    81  001001  73                 	db	115
    82  001002  73                 	db	115
    83  001003  73                 	db	115
    84  001004  64                 	db	100
    85  001005  64                 	db	100
    86  001006  64                 	db	100
    87  001007  64                 	db	100
    88  001008  00                 	db	0
    89  001009  00                 	db	0
    90  00100A  00                 	db	0
    91  00100B  00                 	db	0
    92  00100C  00                 	db	0
    93  00100D  00                 	db	0
    94  00100E  00                 	db	0
    95  00100F  00                 	db	0
    96  001010  00                 	db	0
    97  001011  00                 	db	0
    98  001012  00                 	db	0
    99  001013  00                 	db	0
   100  001014  00                 	db	0
   101  001015  00                 	db	0
   102  001016  00                 	db	0
   103  001017  00                 	db	0
   104  001018  00                 	db	0
   105  001019  00                 	db	0
   106  00101A  00                 	db	0
   107  00101B  00                 	db	0
   108  00101C  00                 	db	0
   109  00101D  00                 	db	0
   110  00101E  00                 	db	0
   111  00101F  00                 	db	0
   112  001020  00                 	db	0
   113  001021  00                 	db	0
   114  001022  00                 	db	0
   115  001023  00                 	db	0
   116  001024  00                 	db	0
   117  001025  00                 	db	0
   118  001026  00                 	db	0
   119  001027  00                 	db	0
   120  001028  00                 	db	0
   121  001029  00                 	db	0
   122  00102A  00                 	db	0
   123  00102B  00                 	db	0
   124  00102C  00                 	db	0
   125  00102D  00                 	db	0
   126  00102E  00                 	db	0
   127  00102F  00                 	db	0
   128  001030  00                 	db	0
   129  001031  00                 	db	0
   130  001032  00                 	db	0
   131  001033  00                 	db	0
   132  001034  00                 	db	0
   133  001035  00                 	db	0
   134  001036  00                 	db	0
   135  001037  00                 	db	0
   136  001038  00                 	db	0
   137  001039  00                 	db	0
   138  00103A  00                 	db	0
   139  00103B  00                 	db	0
   140  00103C  00                 	db	0
   141  00103D  00                 	db	0
   142  00103E  00                 	db	0
   143  00103F  00                 	db	0
   144  001040  00                 	db	0
   145  001041  00                 	db	0
   146  001042  00                 	db	0
   147  001043  00                 	db	0
   148  001044  00                 	db	0
   149  001045  00                 	db	0
   150  001046  00                 	db	0
   151  001047  00                 	db	0
   152  001048  00                 	db	0
   153  001049  00                 	db	0
   154  00104A  00                 	db	0
   155  00104B  00                 	db	0
   156  00104C  00                 	db	0
   157  00104D  00                 	db	0
   158  00104E  00                 	db	0
   159  00104F  00                 	db	0
   160  001050  00                 	db	0
   161  001051                     __end_ofmain@F4614:
   162                           	callstack 0
   163  0000                     _PORTD	set	3971
   164  0000                     _TRISD	set	3989
   165  0000                     _TXREG1	set	4013
   166  0000                     _RCREG1	set	4014
   167  0000                     _SPBRG	set	4015
   168  0000                     _SSPBUF	set	4041
   169  0000                     _SSPSTATbits	set	4039
   170  0000                     _SSP1CON1	set	4038
   171  0000                     _SSPSTAT	set	4039
   172  0000                     _TRISB0	set	31896
   173  0000                     _TRISC6	set	31910
   174  0000                     _TRISC7	set	31911
   175  0000                     _TXEN1	set	32101
   176  0000                     _CREN1	set	32092
   177  0000                     _SPEN1	set	32095
   178  0000                     _SYNC1	set	32100
   179  0000                     _BRGH1	set	32098
   180  0000                     _INT0IF	set	32657
   181  0000                     _RC1IF	set	31989
   182  0000                     _RC1IE	set	31981
   183  0000                     _INT0IE	set	32660
   184  0000                     _INTEDG0	set	32654
   185  0000                     _PEIE	set	32662
   186  0000                     _GIE	set	32663
   187  0000                     _LATC0	set	31832
   188  0000                     _TRISC2	set	31906
   189  0000                     _TRISC3	set	31907
   190  0000                     _TRISC4	set	31908
   191  0000                     _TRISC5	set	31909
   192  0000                     _SSPIE	set	31979
   193  0000                     _SSPIF	set	31987
   194  001051  00                 	db	0	; dummy byte at the end
   195  0000                     
   196                           ; #config settings
   197                           
   198                           	psect	cinit
   199  0011B4                     __pcinit:
   200                           	callstack 0
   201  0011B4                     start_initialization:
   202                           	callstack 0
   203  0011B4                     __initialization:
   204                           	callstack 0
   205                           
   206                           ; Clear objects allocated to COMRAM (4 bytes)
   207  0011B4  6A55               	clrf	(__pbssCOMRAM+3)& (0+255),c
   208  0011B6  6A54               	clrf	(__pbssCOMRAM+2)& (0+255),c
   209  0011B8  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
   210  0011BA  6A52               	clrf	__pbssCOMRAM& (0+255),c
   211  0011BC                     end_of_initialization:
   212                           	callstack 0
   213  0011BC                     __end_of__initialization:
   214                           	callstack 0
   215  0011BC  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   216  0011BE  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   217  0011C0  0E00               	movlw	low (__Lsmallconst shr (0+16))
   218  0011C2  6EF8               	movwf	tblptru,c
   219  0011C4  0E10               	movlw	high __Lsmallconst
   220  0011C6  6EF7               	movwf	tblptrh,c
   221  0011C8  0100               	movlb	0
   222  0011CA  EF29  F008         	goto	_main	;jump to C main() function
   223                           
   224                           	psect	bssCOMRAM
   225  000052                     __pbssCOMRAM:
   226                           	callstack 0
   227  000052                     _outValue:
   228                           	callstack 0
   229  000052                     	ds	1
   230  000053                     _readSerialValue:
   231                           	callstack 0
   232  000053                     	ds	1
   233  000054                     _FLAGS:
   234                           	callstack 0
   235  000054                     	ds	1
   236  000055                     _readSPIValue:
   237                           	callstack 0
   238  000055                     	ds	1
   239                           
   240                           	psect	cstackCOMRAM
   241  000001                     __pcstackCOMRAM:
   242                           	callstack 0
   243  000001                     ??_buttonCallback:
   244  000001                     
   245                           ; 1 bytes @ 0x0
   246  000001                     	ds	1
   247  000002                     main@test:
   248                           	callstack 0
   249                           
   250                           ; 80 bytes @ 0x1
   251  000002                     	ds	80
   252                           
   253 ;;
   254 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   255 ;;
   256 ;; *************** function _main *****************
   257 ;; Defined at:
   258 ;;		line 22 in file "newmain.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;		None
   261 ;; Auto vars:     Size  Location     Type
   262 ;;  test           80    1[COMRAM] const unsigned char [80]
   263 ;; Return value:  Size  Location     Type
   264 ;;                  1    wreg      void 
   265 ;; Registers used:
   266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   267 ;; Tracked objects:
   268 ;;		On entry : 0/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   273 ;;      Locals:        80       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   275 ;;      Totals:        80       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   276 ;;Total ram usage:       80 bytes
   277 ;; Hardware stack levels required when called: 9
   278 ;; This function calls:
   279 ;;		_buttonCallback
   280 ;;		_displayRequestHandle
   281 ;;		_serialCallback
   282 ;;		_setButtonInterrput
   283 ;;		_setButtonIo
   284 ;;		_setInterrupts
   285 ;;		_setIo
   286 ;;		_setSPIInterrupt
   287 ;;		_setSerial
   288 ;;		_setSerialIo
   289 ;;		_setupDisplayIo
   290 ;; This function is called by:
   291 ;;		Startup code after reset
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295                           	psect	text0
   296  001052                     __ptext0:
   297                           	callstack 0
   298  001052                     _main:
   299                           	callstack 22
   300  001052                     
   301                           ;newmain.c: 23:     setIo();
   302  001052  EC37  F009         	call	_setIo	;wreg free
   303                           
   304                           ;newmain.c: 24:     setSPIInterrupt();
   305  001056  EC1F  F009         	call	_setSPIInterrupt	;wreg free
   306                           
   307                           ;newmain.c: 25:     setSerialIo();
   308  00105A  EC1C  F009         	call	_setSerialIo	;wreg free
   309  00105E                     
   310                           ;newmain.c: 26:     setSerial();
   311  00105E  ECE7  F008         	call	_setSerial	;wreg free
   312  001062                     
   313                           ;newmain.c: 27:     setupDisplayIo();
   314  001062  ECFB  F008         	call	_setupDisplayIo	;wreg free
   315                           
   316                           ;newmain.c: 28:     setButtonInterrput();
   317  001066  EC25  F009         	call	_setButtonInterrput	;wreg free
   318                           
   319                           ;newmain.c: 29:     setButtonIo();
   320  00106A  EC31  F009         	call	_setButtonIo	;wreg free
   321                           
   322                           ;newmain.c: 30:     setInterrupts();
   323  00106E  EC22  F009         	call	_setInterrupts	;wreg free
   324  001072                     
   325                           ;newmain.c: 34:     const unsigned char test[80] = "sssdddd";
   326  001072  0E01               	movlw	low main@F4614
   327  001074  6EF6               	movwf	tblptrl,c
   328  001076                     	if	0	;There is only one active tblptr byte
   329  001076                     	endif
   330  001076                     	if	0	;There are less than 3 active tblptr bytes
   331  001076                     	endif
   332  001076  EE20  F002         	lfsr	2,main@test
   333  00107A  0E4F               	movlw	79
   334  00107C                     u150:
   335  00107C  0009               	tblrd		*+
   336  00107E  CFF5 FFDE          	movff	tablat,postinc2
   337  001082  06E8               	decf	wreg,f,c
   338  001084  E2FB               	bc	u150
   339  001086                     l1046:
   340                           
   341                           ;newmain.c: 37:         if (FLAGS.bits.DISPLAY_READING) {
   342  001086  A854               	btfss	_FLAGS^0,4,c
   343  001088  EF48  F008         	goto	u161
   344  00108C  EF4A  F008         	goto	u160
   345  001090                     u161:
   346  001090  EF4D  F008         	goto	l1052
   347  001094                     u160:
   348  001094                     
   349                           ;newmain.c: 38:             displayRequestHandle();
   350  001094  ECC3  F008         	call	_displayRequestHandle	;wreg free
   351  001098                     
   352                           ;newmain.c: 39:             FLAGS.bits.DISPLAY_READING = 0;
   353  001098  9854               	bcf	_FLAGS^0,4,c
   354  00109A                     l1052:
   355                           
   356                           ;newmain.c: 41:         if (FLAGS.bits.UART_RECEIVED) {
   357  00109A  A254               	btfss	_FLAGS^0,1,c
   358  00109C  EF52  F008         	goto	u171
   359  0010A0  EF54  F008         	goto	u170
   360  0010A4                     u171:
   361  0010A4  EF57  F008         	goto	l1058
   362  0010A8                     u170:
   363  0010A8                     
   364                           ;newmain.c: 42:             serialCallback();
   365  0010A8  EC28  F009         	call	_serialCallback	;wreg free
   366  0010AC                     
   367                           ;newmain.c: 43:             FLAGS.bits.UART_RECEIVED = 0;
   368  0010AC  9254               	bcf	_FLAGS^0,1,c
   369  0010AE                     l1058:
   370                           
   371                           ;newmain.c: 45:         if (FLAGS.bits.PUSHED_BUTTON) {
   372  0010AE  A654               	btfss	_FLAGS^0,3,c
   373  0010B0  EF5C  F008         	goto	u181
   374  0010B4  EF5E  F008         	goto	u180
   375  0010B8                     u181:
   376  0010B8  EF43  F008         	goto	l1046
   377  0010BC                     u180:
   378  0010BC                     
   379                           ;newmain.c: 46:             buttonCallback();
   380  0010BC  ECA0  F008         	call	_buttonCallback	;wreg free
   381  0010C0                     
   382                           ;newmain.c: 47:             FLAGS.bits.PUSHED_BUTTON = 0;
   383  0010C0  9654               	bcf	_FLAGS^0,3,c
   384  0010C2  EF43  F008         	goto	l1046
   385  0010C6  EF07  F000         	goto	start
   386  0010CA                     __end_of_main:
   387                           	callstack 0
   388                           
   389 ;; *************** function _setupDisplayIo *****************
   390 ;; Defined at:
   391 ;;		line 6 in file "display.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, status,2
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   409 ;;Total ram usage:        0 bytes
   410 ;; Hardware stack levels used: 1
   411 ;; Hardware stack levels required when called: 6
   412 ;; This function calls:
   413 ;;		Nothing
   414 ;; This function is called by:
   415 ;;		_main
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           	psect	text1
   420  0011F6                     __ptext1:
   421                           	callstack 0
   422  0011F6                     _setupDisplayIo:
   423                           	callstack 24
   424  0011F6                     
   425                           ;display.c: 7:     TRISD = 0x00;
   426  0011F6  0E00               	movlw	0
   427  0011F8  6E95               	movwf	149,c	;volatile
   428                           
   429                           ;display.c: 8:     PORTD = 0x00;
   430  0011FA  0E00               	movlw	0
   431  0011FC  6E83               	movwf	131,c	;volatile
   432  0011FE  0012               	return		;funcret
   433  001200                     __end_of_setupDisplayIo:
   434                           	callstack 0
   435                           
   436 ;; *************** function _setSerialIo *****************
   437 ;; Defined at:
   438 ;;		line 17 in file "serial.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;		None
   441 ;; Auto vars:     Size  Location     Type
   442 ;;		None
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1    wreg      void 
   445 ;; Registers used:
   446 ;;		None
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   456 ;;Total ram usage:        0 bytes
   457 ;; Hardware stack levels used: 1
   458 ;; Hardware stack levels required when called: 6
   459 ;; This function calls:
   460 ;;		Nothing
   461 ;; This function is called by:
   462 ;;		_main
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           	psect	text2
   467  001238                     __ptext2:
   468                           	callstack 0
   469  001238                     _setSerialIo:
   470                           	callstack 24
   471  001238                     
   472                           ;serial.c: 18:     TRISC7 = 1;
   473  001238  8E94               	bsf	3988,7,c	;volatile
   474                           
   475                           ;serial.c: 19:     TRISC6 = 0;
   476  00123A  9C94               	bcf	3988,6,c	;volatile
   477  00123C  0012               	return		;funcret
   478  00123E                     __end_of_setSerialIo:
   479                           	callstack 0
   480                           
   481 ;; *************** function _setSerial *****************
   482 ;; Defined at:
   483 ;;		line 5 in file "serial.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;		None
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, status,2
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   501 ;;Total ram usage:        0 bytes
   502 ;; Hardware stack levels used: 1
   503 ;; Hardware stack levels required when called: 6
   504 ;; This function calls:
   505 ;;		Nothing
   506 ;; This function is called by:
   507 ;;		_main
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           	psect	text3
   512  0011CE                     __ptext3:
   513                           	callstack 0
   514  0011CE                     _setSerial:
   515                           	callstack 24
   516  0011CE                     
   517                           ;serial.c: 6:     BRGH1 = 0;
   518  0011CE  94AC               	bcf	4012,2,c	;volatile
   519  0011D0                     
   520                           ;serial.c: 7:     SPBRG = 15;
   521  0011D0  0E0F               	movlw	15
   522  0011D2  6EAF               	movwf	175,c	;volatile
   523  0011D4                     
   524                           ;serial.c: 8:     SYNC1 = 0;
   525  0011D4  98AC               	bcf	4012,4,c	;volatile
   526  0011D6                     
   527                           ;serial.c: 9:     SPEN1 = 1;
   528  0011D6  8EAB               	bsf	4011,7,c	;volatile
   529  0011D8                     
   530                           ;serial.c: 10:     RC1IE = 1;
   531  0011D8  8A9D               	bsf	3997,5,c	;volatile
   532  0011DA                     
   533                           ;serial.c: 11:     CREN1 = 1;
   534  0011DA  88AB               	bsf	4011,4,c	;volatile
   535  0011DC                     
   536                           ;serial.c: 12:     RC1IF = 0;
   537  0011DC  9A9E               	bcf	3998,5,c	;volatile
   538  0011DE                     
   539                           ;serial.c: 13:     TXEN1 = 1;
   540  0011DE  8AAC               	bsf	4012,5,c	;volatile
   541                           
   542                           ;serial.c: 14:     RCREG1 = 0;
   543  0011E0  0E00               	movlw	0
   544  0011E2  6EAE               	movwf	174,c	;volatile
   545  0011E4  0012               	return		;funcret
   546  0011E6                     __end_of_setSerial:
   547                           	callstack 0
   548                           
   549 ;; *************** function _setSPIInterrupt *****************
   550 ;; Defined at:
   551 ;;		line 8 in file "spi.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;		None
   554 ;; Auto vars:     Size  Location     Type
   555 ;;		None
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		None
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;Total ram usage:        0 bytes
   570 ;; Hardware stack levels used: 1
   571 ;; Hardware stack levels required when called: 6
   572 ;; This function calls:
   573 ;;		Nothing
   574 ;; This function is called by:
   575 ;;		_main
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           	psect	text4
   580  00123E                     __ptext4:
   581                           	callstack 0
   582  00123E                     _setSPIInterrupt:
   583                           	callstack 24
   584  00123E                     
   585                           ;spi.c: 9:     SSPIF = 0;
   586  00123E  969E               	bcf	3998,3,c	;volatile
   587                           
   588                           ;spi.c: 10:     SSPIE = 1;
   589  001240  869D               	bsf	3997,3,c	;volatile
   590  001242  0012               	return		;funcret
   591  001244                     __end_of_setSPIInterrupt:
   592                           	callstack 0
   593                           
   594 ;; *************** function _setIo *****************
   595 ;; Defined at:
   596 ;;		line 9 in file "init.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		None
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   614 ;;Total ram usage:        0 bytes
   615 ;; Hardware stack levels used: 1
   616 ;; Hardware stack levels required when called: 6
   617 ;; This function calls:
   618 ;;		Nothing
   619 ;; This function is called by:
   620 ;;		_main
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           	psect	text5
   625  00126E                     __ptext5:
   626                           	callstack 0
   627  00126E                     _setIo:
   628                           	callstack 24
   629  00126E  0012               	return		;funcret
   630  001270                     __end_of_setIo:
   631                           	callstack 0
   632                           
   633 ;; *************** function _setInterrupts *****************
   634 ;; Defined at:
   635 ;;		line 13 in file "init.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		None
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   653 ;;Total ram usage:        0 bytes
   654 ;; Hardware stack levels used: 1
   655 ;; Hardware stack levels required when called: 6
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_main
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           	psect	text6
   664  001244                     __ptext6:
   665                           	callstack 0
   666  001244                     _setInterrupts:
   667                           	callstack 24
   668  001244                     
   669                           ;init.c: 14:     GIE = 1;
   670  001244  8EF2               	bsf	4082,7,c	;volatile
   671                           
   672                           ;init.c: 15:     PEIE = 1;
   673  001246  8CF2               	bsf	4082,6,c	;volatile
   674  001248  0012               	return		;funcret
   675  00124A                     __end_of_setInterrupts:
   676                           	callstack 0
   677                           
   678 ;; *************** function _setButtonIo *****************
   679 ;; Defined at:
   680 ;;		line 4 in file "button.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		None
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   698 ;;Total ram usage:        0 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; Hardware stack levels required when called: 6
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_main
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           	psect	text7
   709  001262                     __ptext7:
   710                           	callstack 0
   711  001262                     _setButtonIo:
   712                           	callstack 24
   713  001262                     
   714                           ;button.c: 5:         TRISB0 = 1;
   715  001262  8093               	bsf	3987,0,c	;volatile
   716  001264  0012               	return		;funcret
   717  001266                     __end_of_setButtonIo:
   718                           	callstack 0
   719                           
   720 ;; *************** function _setButtonInterrput *****************
   721 ;; Defined at:
   722 ;;		line 19 in file "init.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		None
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;Total ram usage:        0 bytes
   741 ;; Hardware stack levels used: 1
   742 ;; Hardware stack levels required when called: 6
   743 ;; This function calls:
   744 ;;		Nothing
   745 ;; This function is called by:
   746 ;;		_main
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           	psect	text8
   751  00124A                     __ptext8:
   752                           	callstack 0
   753  00124A                     _setButtonInterrput:
   754                           	callstack 24
   755  00124A                     
   756                           ;init.c: 20:     INTEDG0 = 1;
   757  00124A  8CF1               	bsf	4081,6,c	;volatile
   758                           
   759                           ;init.c: 21:     INT0IE = 1;
   760  00124C  88F2               	bsf	4082,4,c	;volatile
   761  00124E  0012               	return		;funcret
   762  001250                     __end_of_setButtonInterrput:
   763                           	callstack 0
   764                           
   765 ;; *************** function _serialCallback *****************
   766 ;; Defined at:
   767 ;;		line 22 in file "serial.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		None
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   785 ;;Total ram usage:        0 bytes
   786 ;; Hardware stack levels used: 1
   787 ;; Hardware stack levels required when called: 6
   788 ;; This function calls:
   789 ;;		Nothing
   790 ;; This function is called by:
   791 ;;		_main
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text9
   796  001250                     __ptext9:
   797                           	callstack 0
   798  001250                     _serialCallback:
   799                           	callstack 24
   800  001250                     
   801                           ;serial.c: 23:     FLAGS.bits.DISPLAY_READING = 1;
   802  001250  8854               	bsf	_FLAGS^0,4,c
   803                           
   804                           ;serial.c: 24:     FLAGS.bits.DISPLAY_SERIAL_READING = 1;
   805  001252  8C54               	bsf	_FLAGS^0,6,c
   806  001254  0012               	return		;funcret
   807  001256                     __end_of_serialCallback:
   808                           	callstack 0
   809                           
   810 ;; *************** function _displayRequestHandle *****************
   811 ;; Defined at:
   812 ;;		line 21 in file "display.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;		None
   815 ;; Auto vars:     Size  Location     Type
   816 ;;		None
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		cstack
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   830 ;;Total ram usage:        0 bytes
   831 ;; Hardware stack levels used: 1
   832 ;; Hardware stack levels required when called: 8
   833 ;; This function calls:
   834 ;;		_displaySPI
   835 ;;		_displaySerial
   836 ;; This function is called by:
   837 ;;		_main
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           	psect	text10
   842  001186                     __ptext10:
   843                           	callstack 0
   844  001186                     _displayRequestHandle:
   845                           	callstack 22
   846  001186                     
   847                           ;display.c: 22:     if (FLAGS.bits.DISPLAY_SERIAL_READING) {
   848  001186  AC54               	btfss	_FLAGS^0,6,c
   849  001188  EFC8  F008         	goto	u91
   850  00118C  EFCA  F008         	goto	u90
   851  001190                     u91:
   852  001190  EFCF  F008         	goto	l250
   853  001194                     u90:
   854  001194                     
   855                           ;display.c: 23:         displaySerial();
   856  001194  EC00  F009         	call	_displaySerial	;wreg free
   857  001198                     
   858                           ;display.c: 24:         FLAGS.bits.DISPLAY_SERIAL_READING = 0;
   859  001198  9C54               	bcf	_FLAGS^0,6,c
   860                           
   861                           ;display.c: 25:     } else {
   862  00119A  EFD9  F008         	goto	l253
   863  00119E                     l250:
   864                           
   865                           ;display.c: 26:         if (FLAGS.bits.DISPLAY_SPI_READING) {
   866  00119E  AA54               	btfss	_FLAGS^0,5,c
   867  0011A0  EFD4  F008         	goto	u101
   868  0011A4  EFD6  F008         	goto	u100
   869  0011A8                     u101:
   870  0011A8  EFD9  F008         	goto	l253
   871  0011AC                     u100:
   872  0011AC                     
   873                           ;display.c: 27:             displaySPI();
   874  0011AC  EC05  F009         	call	_displaySPI	;wreg free
   875  0011B0                     
   876                           ;display.c: 28:             FLAGS.bits.DISPLAY_SPI_READING = 0;
   877  0011B0  9A54               	bcf	_FLAGS^0,5,c
   878  0011B2                     l253:
   879  0011B2  0012               	return		;funcret
   880  0011B4                     __end_of_displayRequestHandle:
   881                           	callstack 0
   882                           
   883 ;; *************** function _displaySerial *****************
   884 ;; Defined at:
   885 ;;		line 11 in file "display.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;		None
   888 ;; Auto vars:     Size  Location     Type
   889 ;;		None
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   903 ;;Total ram usage:        0 bytes
   904 ;; Hardware stack levels used: 1
   905 ;; Hardware stack levels required when called: 7
   906 ;; This function calls:
   907 ;;		_displayCallback
   908 ;; This function is called by:
   909 ;;		_displayRequestHandle
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           	psect	text11
   914  001200                     __ptext11:
   915                           	callstack 0
   916  001200                     _displaySerial:
   917                           	callstack 22
   918  001200                     
   919                           ;display.c: 12:     outValue = readSerialValue;
   920  001200  C053  F052         	movff	_readSerialValue,_outValue
   921  001204                     
   922                           ;display.c: 13:     displayCallback();
   923  001204  EC2B  F009         	call	_displayCallback	;wreg free
   924  001208  0012               	return		;funcret
   925  00120A                     __end_of_displaySerial:
   926                           	callstack 0
   927                           
   928 ;; *************** function _displaySPI *****************
   929 ;; Defined at:
   930 ;;		line 16 in file "display.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;		None
   933 ;; Auto vars:     Size  Location     Type
   934 ;;		None
   935 ;; Return value:  Size  Location     Type
   936 ;;                  1    wreg      void 
   937 ;; Registers used:
   938 ;;		cstack
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;Total ram usage:        0 bytes
   949 ;; Hardware stack levels used: 1
   950 ;; Hardware stack levels required when called: 7
   951 ;; This function calls:
   952 ;;		_displayCallback
   953 ;; This function is called by:
   954 ;;		_displayRequestHandle
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958                           	psect	text12
   959  00120A                     __ptext12:
   960                           	callstack 0
   961  00120A                     _displaySPI:
   962                           	callstack 22
   963  00120A                     
   964                           ;display.c: 17:     outValue = readSPIValue;
   965  00120A  C055  F052         	movff	_readSPIValue,_outValue
   966  00120E                     
   967                           ;display.c: 18:     displayCallback();
   968  00120E  EC2B  F009         	call	_displayCallback	;wreg free
   969  001212  0012               	return		;funcret
   970  001214                     __end_of_displaySPI:
   971                           	callstack 0
   972                           
   973 ;; *************** function _displayCallback *****************
   974 ;; Defined at:
   975 ;;		line 33 in file "display.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;		None
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		None
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   993 ;;Total ram usage:        0 bytes
   994 ;; Hardware stack levels used: 1
   995 ;; Hardware stack levels required when called: 6
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		_displaySerial
  1000 ;;		_displaySPI
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           	psect	text13
  1005  001256                     __ptext13:
  1006                           	callstack 0
  1007  001256                     _displayCallback:
  1008                           	callstack 22
  1009  001256                     
  1010                           ;display.c: 34:     PORTD = outValue;
  1011  001256  C052  FF83         	movff	_outValue,3971	;volatile
  1012  00125A  0012               	return		;funcret
  1013  00125C                     __end_of_displayCallback:
  1014                           	callstack 0
  1015                           
  1016 ;; *************** function _buttonCallback *****************
  1017 ;; Defined at:
  1018 ;;		line 7 in file "button.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;		None
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      void 
  1025 ;; Registers used:
  1026 ;;		wreg, status,2
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1035 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1036 ;;Total ram usage:        1 bytes
  1037 ;; Hardware stack levels used: 1
  1038 ;; Hardware stack levels required when called: 6
  1039 ;; This function calls:
  1040 ;;		Nothing
  1041 ;; This function is called by:
  1042 ;;		_main
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text14
  1047  001140                     __ptext14:
  1048                           	callstack 0
  1049  001140                     _buttonCallback:
  1050                           	callstack 24
  1051  001140                     
  1052                           ;button.c: 8:     if (FLAGS.bits.PREVIOUS_BUTTON_STATE != FLAGS.bits.PUSHED_BUTTON) {
  1053  001140  B654               	btfsc	_FLAGS^0,3,c
  1054  001142  EFA5  F008         	goto	u111
  1055  001146  EFA8  F008         	goto	u110
  1056  00114A                     u111:
  1057  00114A  0E01               	movlw	1
  1058  00114C  EFA9  F008         	goto	u112
  1059  001150                     u110:
  1060  001150  0E00               	movlw	0
  1061  001152                     u112:
  1062  001152  6E01               	movwf	??_buttonCallback^0,c
  1063  001154  B454               	btfsc	_FLAGS^0,2,c
  1064  001156  EFAF  F008         	goto	u121
  1065  00115A  EFB2  F008         	goto	u120
  1066  00115E                     u121:
  1067  00115E  0E01               	movlw	1
  1068  001160  EFB3  F008         	goto	u122
  1069  001164                     u120:
  1070  001164  0E00               	movlw	0
  1071  001166                     u122:
  1072  001166  1A01               	xorwf	??_buttonCallback^0,f,c
  1073  001168  B4D8               	btfsc	status,2,c
  1074  00116A  EFB9  F008         	goto	u131
  1075  00116E  EFBB  F008         	goto	u130
  1076  001172                     u131:
  1077  001172  EFC2  F008         	goto	l221
  1078  001176                     u130:
  1079  001176                     
  1080                           ;button.c: 9:         FLAGS.bits.PREVIOUS_BUTTON_STATE = FLAGS.bits.PUSHED_BUTTON;
  1081  001176  A654               	btfss	_FLAGS^0,3,c
  1082  001178  D002               	bra	u145
  1083  00117A  8454               	bsf	_FLAGS^0,2,c
  1084  00117C  D001               	bra	u147
  1085  00117E                     u145:
  1086  00117E  9454               	bcf	_FLAGS^0,2,c
  1087  001180                     u147:
  1088  001180                     
  1089                           ;button.c: 10:         TXREG1 = 'a';
  1090  001180  0E61               	movlw	97
  1091  001182  6EAD               	movwf	173,c	;volatile
  1092  001184                     l221:
  1093  001184  0012               	return		;funcret
  1094  001186                     __end_of_buttonCallback:
  1095                           	callstack 0
  1096                           
  1097 ;; *************** function _service *****************
  1098 ;; Defined at:
  1099 ;;		line 18 in file "newmain.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;		None
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;		None
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		wreg, status,2, cstack
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;Total ram usage:        0 bytes
  1118 ;; Hardware stack levels used: 1
  1119 ;; Hardware stack levels required when called: 5
  1120 ;; This function calls:
  1121 ;;		_interruptService
  1122 ;; This function is called by:
  1123 ;;		Interrupt level 2
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	intcode
  1128  000008                     __pintcode:
  1129                           	callstack 0
  1130  000008                     _service:
  1131                           	callstack 22
  1132                           
  1133                           ;incstack = 0
  1134  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1135  00000A  ED0A  F009         	call	int_func,f	;refresh shadow registers
  1136                           
  1137                           	psect	intcode_body
  1138  001214                     __pintcode_body:
  1139                           	callstack 22
  1140  001214                     int_func:
  1141                           	callstack 22
  1142  001214  0006               	pop		; remove dummy address from shadow register refresh
  1143  001216                     
  1144                           ;newmain.c: 19:     interruptService();
  1145  001216  EC2E  F009         	call	_interruptService	;wreg free
  1146  00121A  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1147  00121C  0011               	retfie		f
  1148  00121E                     __end_of_service:
  1149                           	callstack 0
  1150                           
  1151 ;; *************** function _interruptService *****************
  1152 ;; Defined at:
  1153 ;;		line 28 in file "interruptService.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;		None
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;		None
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      void 
  1160 ;; Registers used:
  1161 ;;		wreg, status,2, cstack
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1171 ;;Total ram usage:        0 bytes
  1172 ;; Hardware stack levels used: 1
  1173 ;; Hardware stack levels required when called: 4
  1174 ;; This function calls:
  1175 ;;		_processInterruptService
  1176 ;; This function is called by:
  1177 ;;		_service
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text16
  1182  00125C                     __ptext16:
  1183                           	callstack 0
  1184  00125C                     _interruptService:
  1185                           	callstack 22
  1186  00125C                     
  1187                           ;interruptService.c: 29:     processInterruptService();
  1188  00125C  EC65  F008         	call	_processInterruptService	;wreg free
  1189  001260  0012               	return		;funcret
  1190  001262                     __end_of_interruptService:
  1191                           	callstack 0
  1192                           
  1193 ;; *************** function _processInterruptService *****************
  1194 ;; Defined at:
  1195 ;;		line 13 in file "interruptService.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;		None
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;		None
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, status,2, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;Total ram usage:        0 bytes
  1214 ;; Hardware stack levels used: 1
  1215 ;; Hardware stack levels required when called: 3
  1216 ;; This function calls:
  1217 ;;		_SPIHandle
  1218 ;;		_buttonHandle
  1219 ;;		_serialHandle
  1220 ;; This function is called by:
  1221 ;;		_interruptService
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           	psect	text17
  1226  0010CA                     __ptext17:
  1227                           	callstack 0
  1228  0010CA                     _processInterruptService:
  1229                           	callstack 22
  1230  0010CA                     
  1231                           ;interruptService.c: 14:     if (SSPIE == 1 && SSPIF == 1) {
  1232  0010CA  A69D               	btfss	3997,3,c	;volatile
  1233  0010CC  EF6A  F008         	goto	i2u2_41
  1234  0010D0  EF6C  F008         	goto	i2u2_40
  1235  0010D4                     i2u2_41:
  1236  0010D4  EF76  F008         	goto	i2l962
  1237  0010D8                     i2u2_40:
  1238  0010D8  A69E               	btfss	3998,3,c	;volatile
  1239  0010DA  EF71  F008         	goto	i2u3_41
  1240  0010DE  EF73  F008         	goto	i2u3_40
  1241  0010E2                     i2u3_41:
  1242  0010E2  EF76  F008         	goto	i2l962
  1243  0010E6                     i2u3_40:
  1244  0010E6                     
  1245                           ;interruptService.c: 15:         SPIHandle();
  1246  0010E6  EC14  F009         	call	_SPIHandle	;wreg free
  1247  0010EA                     
  1248                           ;interruptService.c: 16:         SSPIF = 0;
  1249  0010EA  969E               	bcf	3998,3,c	;volatile
  1250  0010EC                     i2l962:
  1251                           
  1252                           ;interruptService.c: 18:     if (RC1IE == 1 && RC1IF == 1 && FLAGS.bits.UART_RECEIVED ==
      +                           0) {
  1253  0010EC  AA9D               	btfss	3997,5,c	;volatile
  1254  0010EE  EF7B  F008         	goto	i2u4_41
  1255  0010F2  EF7D  F008         	goto	i2u4_40
  1256  0010F6                     i2u4_41:
  1257  0010F6  EF8E  F008         	goto	i2l972
  1258  0010FA                     i2u4_40:
  1259  0010FA  AA9E               	btfss	3998,5,c	;volatile
  1260  0010FC  EF82  F008         	goto	i2u5_41
  1261  001100  EF84  F008         	goto	i2u5_40
  1262  001104                     i2u5_41:
  1263  001104  EF8E  F008         	goto	i2l972
  1264  001108                     i2u5_40:
  1265  001108  B254               	btfsc	_FLAGS^0,1,c
  1266  00110A  EF89  F008         	goto	i2u6_41
  1267  00110E  EF8B  F008         	goto	i2u6_40
  1268  001112                     i2u6_41:
  1269  001112  EF8E  F008         	goto	i2l972
  1270  001116                     i2u6_40:
  1271  001116                     
  1272                           ;interruptService.c: 19:         serialHandle();
  1273  001116  EC0F  F009         	call	_serialHandle	;wreg free
  1274  00111A                     
  1275                           ;interruptService.c: 20:         RC1IF = 0;
  1276  00111A  9A9E               	bcf	3998,5,c	;volatile
  1277  00111C                     i2l972:
  1278                           
  1279                           ;interruptService.c: 22:     if (INTEDG0 == 1 && INT0IF == 1) {
  1280  00111C  ACF1               	btfss	4081,6,c	;volatile
  1281  00111E  EF93  F008         	goto	i2u7_41
  1282  001122  EF95  F008         	goto	i2u7_40
  1283  001126                     i2u7_41:
  1284  001126  EF9F  F008         	goto	i2l152
  1285  00112A                     i2u7_40:
  1286  00112A  A2F2               	btfss	4082,1,c	;volatile
  1287  00112C  EF9A  F008         	goto	i2u8_41
  1288  001130  EF9C  F008         	goto	i2u8_40
  1289  001134                     i2u8_41:
  1290  001134  EF9F  F008         	goto	i2l152
  1291  001138                     i2u8_40:
  1292  001138                     
  1293                           ;interruptService.c: 23:         buttonHandle();
  1294  001138  EC35  F009         	call	_buttonHandle	;wreg free
  1295  00113C                     
  1296                           ;interruptService.c: 24:         INT0IF = 0;
  1297  00113C  92F2               	bcf	4082,1,c	;volatile
  1298  00113E                     i2l152:
  1299  00113E  0012               	return		;funcret
  1300  001140                     __end_of_processInterruptService:
  1301                           	callstack 0
  1302                           
  1303 ;; *************** function _serialHandle *****************
  1304 ;; Defined at:
  1305 ;;		line 28 in file "serial.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;		None
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;		None
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		wreg, status,2, cstack
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;Total ram usage:        0 bytes
  1324 ;; Hardware stack levels used: 1
  1325 ;; Hardware stack levels required when called: 1
  1326 ;; This function calls:
  1327 ;;		_readSerial
  1328 ;; This function is called by:
  1329 ;;		_processInterruptService
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           	psect	text18
  1334  00121E                     __ptext18:
  1335                           	callstack 0
  1336  00121E                     _serialHandle:
  1337                           	callstack 23
  1338  00121E                     
  1339                           ;serial.c: 29:     FLAGS.bits.UART_RECEIVED = 1;
  1340  00121E  8254               	bsf	_FLAGS^0,1,c
  1341  001220                     
  1342                           ;serial.c: 30:     readSerialValue = readSerial();
  1343  001220  EC33  F009         	call	_readSerial	;wreg free
  1344  001224  6E53               	movwf	_readSerialValue^0,c
  1345  001226  0012               	return		;funcret
  1346  001228                     __end_of_serialHandle:
  1347                           	callstack 0
  1348                           
  1349 ;; *************** function _readSerial *****************
  1350 ;; Defined at:
  1351 ;;		line 41 in file "serial.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;		None
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;		None
  1356 ;; Return value:  Size  Location     Type
  1357 ;;                  1    wreg      unsigned char 
  1358 ;; Registers used:
  1359 ;;		wreg, status,2
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1369 ;;Total ram usage:        0 bytes
  1370 ;; Hardware stack levels used: 1
  1371 ;; This function calls:
  1372 ;;		Nothing
  1373 ;; This function is called by:
  1374 ;;		_serialHandle
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           	psect	text19
  1379  001266                     __ptext19:
  1380                           	callstack 0
  1381  001266                     _readSerial:
  1382                           	callstack 23
  1383  001266                     
  1384                           ;serial.c: 42:     return RCREG1;
  1385  001266  50AE               	movf	174,w,c	;volatile
  1386  001268  0012               	return		;funcret
  1387  00126A                     __end_of_readSerial:
  1388                           	callstack 0
  1389                           
  1390 ;; *************** function _buttonHandle *****************
  1391 ;; Defined at:
  1392 ;;		line 14 in file "button.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;		None
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;		None
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      void 
  1399 ;; Registers used:
  1400 ;;		None
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1410 ;;Total ram usage:        0 bytes
  1411 ;; Hardware stack levels used: 1
  1412 ;; This function calls:
  1413 ;;		Nothing
  1414 ;; This function is called by:
  1415 ;;		_processInterruptService
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           	psect	text20
  1420  00126A                     __ptext20:
  1421                           	callstack 0
  1422  00126A                     _buttonHandle:
  1423                           	callstack 24
  1424  00126A                     
  1425                           ;button.c: 15:     FLAGS.bits.PUSHED_BUTTON = 1;
  1426  00126A  8654               	bsf	_FLAGS^0,3,c
  1427  00126C  0012               	return		;funcret
  1428  00126E                     __end_of_buttonHandle:
  1429                           	callstack 0
  1430                           
  1431 ;; *************** function _SPIHandle *****************
  1432 ;; Defined at:
  1433 ;;		line 54 in file "spi.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		wreg, status,2, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1451 ;;Total ram usage:        0 bytes
  1452 ;; Hardware stack levels used: 1
  1453 ;; Hardware stack levels required when called: 2
  1454 ;; This function calls:
  1455 ;;		_spiRead
  1456 ;; This function is called by:
  1457 ;;		_processInterruptService
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           	psect	text21
  1462  001228                     __ptext21:
  1463                           	callstack 0
  1464  001228                     _SPIHandle:
  1465                           	callstack 22
  1466  001228                     
  1467                           ;spi.c: 55:     readSPIValue = spiRead();
  1468  001228  EC18  F009         	call	_spiRead	;wreg free
  1469  00122C  6E55               	movwf	_readSPIValue^0,c
  1470  00122E  0012               	return		;funcret
  1471  001230                     __end_of_SPIHandle:
  1472                           	callstack 0
  1473                           
  1474 ;; *************** function _spiRead *****************
  1475 ;; Defined at:
  1476 ;;		line 48 in file "spi.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;		None
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      unsigned char 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1494 ;;Total ram usage:        0 bytes
  1495 ;; Hardware stack levels used: 1
  1496 ;; Hardware stack levels required when called: 1
  1497 ;; This function calls:
  1498 ;;		_spiReceiveWait
  1499 ;; This function is called by:
  1500 ;;		_SPIHandle
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text22
  1505  001230                     __ptext22:
  1506                           	callstack 0
  1507  001230                     _spiRead:
  1508                           	callstack 22
  1509  001230                     
  1510                           ;spi.c: 50:     spiReceiveWait();
  1511  001230  ECF3  F008         	call	_spiReceiveWait	;wreg free
  1512  001234                     
  1513                           ;spi.c: 51:     return (SSPBUF);
  1514  001234  50C9               	movf	201,w,c	;volatile
  1515  001236  0012               	return		;funcret
  1516  001238                     __end_of_spiRead:
  1517                           	callstack 0
  1518                           
  1519 ;; *************** function _spiReceiveWait *****************
  1520 ;; Defined at:
  1521 ;;		line 31 in file "spi.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;		None
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;		None
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		None
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1539 ;;Total ram usage:        0 bytes
  1540 ;; Hardware stack levels used: 1
  1541 ;; This function calls:
  1542 ;;		Nothing
  1543 ;; This function is called by:
  1544 ;;		_spiRead
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text23
  1549  0011E6                     __ptext23:
  1550                           	callstack 0
  1551  0011E6                     _spiReceiveWait:
  1552                           	callstack 22
  1553  0011E6                     i2l85:
  1554  0011E6  A0C7               	btfss	199,0,c	;volatile
  1555  0011E8  EFF8  F008         	goto	i2u1_41
  1556  0011EC  EFFA  F008         	goto	i2u1_40
  1557  0011F0                     i2u1_41:
  1558  0011F0  EFF3  F008         	goto	i2l85
  1559  0011F4                     i2u1_40:
  1560  0011F4  0012               	return		;funcret
  1561  0011F6                     __end_of_spiReceiveWait:
  1562                           	callstack 0
  1563                           
  1564                           	psect	rparam
  1565  0000                     
  1566                           	psect	temp
  1567  000056                     btemp:
  1568                           	callstack 0
  1569  000056                     	ds	1
  1570  0000                     int$flags	set	btemp
  1571  0000                     wtemp8	set	btemp+1
  1572  0000                     ttemp5	set	btemp+1
  1573  0000                     ttemp6	set	btemp+4
  1574  0000                     ttemp7	set	btemp+8
  1575                           
  1576                           	psect	idloc
  1577                           
  1578                           ;Config register IDLOC0 @ 0x200000
  1579                           ;	unspecified, using default values
  1580  200000                     	org	2097152
  1581  200000  FF                 	db	255
  1582                           
  1583                           ;Config register IDLOC1 @ 0x200001
  1584                           ;	unspecified, using default values
  1585  200001                     	org	2097153
  1586  200001  FF                 	db	255
  1587                           
  1588                           ;Config register IDLOC2 @ 0x200002
  1589                           ;	unspecified, using default values
  1590  200002                     	org	2097154
  1591  200002  FF                 	db	255
  1592                           
  1593                           ;Config register IDLOC3 @ 0x200003
  1594                           ;	unspecified, using default values
  1595  200003                     	org	2097155
  1596  200003  FF                 	db	255
  1597                           
  1598                           ;Config register IDLOC4 @ 0x200004
  1599                           ;	unspecified, using default values
  1600  200004                     	org	2097156
  1601  200004  FF                 	db	255
  1602                           
  1603                           ;Config register IDLOC5 @ 0x200005
  1604                           ;	unspecified, using default values
  1605  200005                     	org	2097157
  1606  200005  FF                 	db	255
  1607                           
  1608                           ;Config register IDLOC6 @ 0x200006
  1609                           ;	unspecified, using default values
  1610  200006                     	org	2097158
  1611  200006  FF                 	db	255
  1612                           
  1613                           ;Config register IDLOC7 @ 0x200007
  1614                           ;	unspecified, using default values
  1615  200007                     	org	2097159
  1616  200007  FF                 	db	255
  1617                           
  1618                           	psect	config
  1619                           
  1620                           ; Padding undefined space
  1621  300000                     	org	3145728
  1622  300000  FF                 	db	255
  1623                           
  1624                           ;Config register CONFIG1H @ 0x300001
  1625                           ;	Oscillator Selection bits
  1626                           ;	OSC = XT, XT oscillator
  1627                           ;	Fail-Safe Clock Monitor Enable bit
  1628                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1629                           ;	Internal/External Oscillator Switchover bit
  1630                           ;	IESO = OFF, Two-Speed Start-up disabled
  1631  300001                     	org	3145729
  1632  300001  01                 	db	1
  1633                           
  1634                           ;Config register CONFIG2L @ 0x300002
  1635                           ;	Power-up Timer Enable bit
  1636                           ;	PWRT = OFF, PWRT disabled
  1637                           ;	Brown-out Reset Enable bits
  1638                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1639                           ;	Brown-out Voltage bits
  1640                           ;	BORV = 3, Minimum setting
  1641  300002                     	org	3145730
  1642  300002  19                 	db	25
  1643                           
  1644                           ;Config register CONFIG2H @ 0x300003
  1645                           ;	Watchdog Timer
  1646                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1647                           ;	Watchdog Timer Postscale Select bits
  1648                           ;	WDTPS = 32768, 1:32768
  1649  300003                     	org	3145731
  1650  300003  1E                 	db	30
  1651                           
  1652                           ;Config register CONFIG3L @ 0x300004
  1653                           ;	Processor Data Memory Mode Select bits
  1654                           ;	MODE = MC, Microcontroller mode
  1655                           ;	Address Bus Width Select bits
  1656                           ;	ADDRBW = ADDR20BIT, 20-bit Address Bus
  1657                           ;	Data Bus Width Select bit
  1658                           ;	DATABW = DATA16BIT, 16-bit External Bus mode
  1659                           ;	External Bus Data Wait Enable bit
  1660                           ;	WAIT = OFF, Wait selections are unavailable for table reads and table writes
  1661  300004                     	org	3145732
  1662  300004  F3                 	db	243
  1663                           
  1664                           ;Config register CONFIG3H @ 0x300005
  1665                           ;	CCP2 MUX bit
  1666                           ;	CCP2MX = PORTC, ECCP2 input/output is multiplexed with RC1
  1667                           ;	ECCP MUX bit
  1668                           ;	ECCPMX = PORTE, ECCP1/3 (P1B/P1C/P3B/P3C) are multiplexed onto RE6, RE5, RE4 and RE3 r
      +                          espectively
  1669                           ;	Low-Power Timer1 Oscillator Enable bit
  1670                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1671                           ;	MCLR Pin Enable bit
  1672                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
  1673  300005                     	org	3145733
  1674  300005  83                 	db	131
  1675                           
  1676                           ;Config register CONFIG4L @ 0x300006
  1677                           ;	Stack Full/Underflow Reset Enable bit
  1678                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1679                           ;	Single-Supply ICSP Enable bit
  1680                           ;	LVP = OFF, Single-Supply ICSP disabled
  1681                           ;	Boot Block Size Select bits
  1682                           ;	BBSIZ = BB2K, 1K word (2 Kbytes) Boot Block size
  1683                           ;	Extended Instruction Set Enable bit
  1684                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1685                           ;	Background Debugger Enable bit
  1686                           ;	DEBUG = 0x1, unprogrammed default
  1687  300006                     	org	3145734
  1688  300006  81                 	db	129
  1689                           
  1690                           ; Padding undefined space
  1691  300007                     	org	3145735
  1692  300007  FF                 	db	255
  1693                           
  1694                           ;Config register CONFIG5L @ 0x300008
  1695                           ;	Code Protection bit Block 0
  1696                           ;	CP0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not code-protected
  1697                           ;	Code Protection bit Block 1
  1698                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1699                           ;	Code Protection bit Block 2
  1700                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1701                           ;	Code Protection bit Block 3
  1702                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1703                           ;	Code Protection bit Block 4
  1704                           ;	CP4 = OFF, Block 4 (010000-013FFFh) not code-protected
  1705                           ;	Code Protection bit Block 5
  1706                           ;	CP5 = OFF, Block 5 (014000-017FFFh) not code-protected
  1707                           ;	Code Protection bit Block 6
  1708                           ;	CP6 = OFF, Block 6 (01BFFF-018000h) not code-protected
  1709                           ;	Code Protection bit Block 7
  1710                           ;	CP7 = OFF, Block 7 (01C000-01FFFFh) not code-protected
  1711  300008                     	org	3145736
  1712  300008  FF                 	db	255
  1713                           
  1714                           ;Config register CONFIG5H @ 0x300009
  1715                           ;	Boot Block Code Protection bit
  1716                           ;	CPB = OFF, Boot Block (000000-0007FFh) not code-protected
  1717                           ;	Data EEPROM Code Protection bit
  1718                           ;	CPD = OFF, Data EEPROM not code-protected
  1719  300009                     	org	3145737
  1720  300009  C0                 	db	192
  1721                           
  1722                           ;Config register CONFIG6L @ 0x30000A
  1723                           ;	Write Protection bit Block 0
  1724                           ;	WRT0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not write-protected
  1725                           ;	Write Protection bit Block 1
  1726                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1727                           ;	Write Protection bit Block 2
  1728                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1729                           ;	Write Protection bit Block 3
  1730                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1731                           ;	Write Protection bit Block 4
  1732                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  1733                           ;	Write Protection bit Block 5
  1734                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  1735                           ;	Write Protection bit Block 6
  1736                           ;	WRT6 = OFF, Block 6 (01BFFF-018000h) not write-protected
  1737                           ;	Write Protection bit Block 7
  1738                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  1739  30000A                     	org	3145738
  1740  30000A  FF                 	db	255
  1741                           
  1742                           ;Config register CONFIG6H @ 0x30000B
  1743                           ;	Configuration Register Write Protection bit
  1744                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1745                           ;	Boot Block Write Protection bit
  1746                           ;	WRTB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not write-protected
  1747                           ;	Data EEPROM Write Protection bit
  1748                           ;	WRTD = OFF, Data EEPROM not write-protected
  1749  30000B                     	org	3145739
  1750  30000B  E0                 	db	224
  1751                           
  1752                           ;Config register CONFIG7L @ 0x30000C
  1753                           ;	Table Read Protection bit Block 0
  1754                           ;	EBTR0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not protected from table reads
      +                           executed in other blocks
  1755                           ;	Table Read Protection bit Block 1
  1756                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1757                           ;	Table Read Protection bit Block 2
  1758                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1759                           ;	Table Read Protection bit Block 3
  1760                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1761                           ;	Table Read Protection bit Block 4
  1762                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  1763                           ;	Table Read Protection bit Block 5
  1764                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  1765                           ;	Table Read Protection bit Block 6
  1766                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  1767                           ;	Table Read Protection bit Block 7
  1768                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  1769  30000C                     	org	3145740
  1770  30000C  FF                 	db	255
  1771                           
  1772                           ;Config register CONFIG7H @ 0x30000D
  1773                           ;	Boot Block Table Read Protection bit
  1774                           ;	EBTRB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not protected from table re
      +                          ads executed in other blocks
  1775  30000D                     	org	3145741
  1776  30000D  40                 	db	64
  1777                           tosu	equ	0xFFF
  1778                           tosh	equ	0xFFE
  1779                           tosl	equ	0xFFD
  1780                           stkptr	equ	0xFFC
  1781                           pclatu	equ	0xFFB
  1782                           pclath	equ	0xFFA
  1783                           pcl	equ	0xFF9
  1784                           tblptru	equ	0xFF8
  1785                           tblptrh	equ	0xFF7
  1786                           tblptrl	equ	0xFF6
  1787                           tablat	equ	0xFF5
  1788                           prodh	equ	0xFF4
  1789                           prodl	equ	0xFF3
  1790                           indf0	equ	0xFEF
  1791                           postinc0	equ	0xFEE
  1792                           postdec0	equ	0xFED
  1793                           preinc0	equ	0xFEC
  1794                           plusw0	equ	0xFEB
  1795                           fsr0h	equ	0xFEA
  1796                           fsr0l	equ	0xFE9
  1797                           wreg	equ	0xFE8
  1798                           indf1	equ	0xFE7
  1799                           postinc1	equ	0xFE6
  1800                           postdec1	equ	0xFE5
  1801                           preinc1	equ	0xFE4
  1802                           plusw1	equ	0xFE3
  1803                           fsr1h	equ	0xFE2
  1804                           fsr1l	equ	0xFE1
  1805                           bsr	equ	0xFE0
  1806                           indf2	equ	0xFDF
  1807                           postinc2	equ	0xFDE
  1808                           postdec2	equ	0xFDD
  1809                           preinc2	equ	0xFDC
  1810                           plusw2	equ	0xFDB
  1811                           fsr2h	equ	0xFDA
  1812                           fsr2l	equ	0xFD9
  1813                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    80
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      85
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_buttonCallback

Critical Paths under _service in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _service in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _service in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _service in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _service in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _service in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _service in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _service in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _service in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _service in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _service in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _service in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _service in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _service in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _service in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _service in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _service in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                80    80      0       0
                                              1 COMRAM    80    80      0
                     _buttonCallback
               _displayRequestHandle
                     _serialCallback
                 _setButtonInterrput
                        _setButtonIo
                      _setInterrupts
                              _setIo
                    _setSPIInterrupt
                          _setSerial
                        _setSerialIo
                     _setupDisplayIo
 ---------------------------------------------------------------------------------
 (1) _setupDisplayIo                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSerialIo                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSerial                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSPIInterrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setIo                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setInterrupts                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setButtonIo                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setButtonInterrput                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _serialCallback                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displayRequestHandle                                 0     0      0       0
                         _displaySPI
                      _displaySerial
 ---------------------------------------------------------------------------------
 (2) _displaySerial                                        0     0      0       0
                    _displayCallback
 ---------------------------------------------------------------------------------
 (2) _displaySPI                                           0     0      0       0
                    _displayCallback
 ---------------------------------------------------------------------------------
 (3) _displayCallback                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttonCallback                                       1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _service                                              0     0      0       0
                   _interruptService
 ---------------------------------------------------------------------------------
 (5) _interruptService                                     0     0      0       0
            _processInterruptService
 ---------------------------------------------------------------------------------
 (6) _processInterruptService                              0     0      0       0
                          _SPIHandle
                       _buttonHandle
                       _serialHandle
 ---------------------------------------------------------------------------------
 (7) _serialHandle                                         0     0      0       0
                         _readSerial
 ---------------------------------------------------------------------------------
 (8) _readSerial                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _buttonHandle                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _SPIHandle                                            0     0      0       0
                            _spiRead
 ---------------------------------------------------------------------------------
 (8) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (9) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _buttonCallback
   _displayRequestHandle
     _displaySPI
       _displayCallback
     _displaySerial
       _displayCallback
   _serialCallback
   _setButtonInterrput
   _setButtonIo
   _setInterrupts
   _setIo
   _setSPIInterrupt
   _setSerial
   _setSerialIo
   _setupDisplayIo

 _service (ROOT)
   _interruptService
     _processInterruptService
       _SPIHandle
         _spiRead
           _spiReceiveWait
       _buttonHandle
       _serialHandle
         _readSerial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      55       1       90.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      55      32        0.0%
DATA                 0      0      55       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jul  4 13:05:06 2021

        ?_processInterruptService 0001                       _SSPSTATbits 000FC7  
                              l77 1242                                u90 1194  
                              u91 1190                               l122 124E  
                             l116 126E                               l221 1184  
                             l119 1248                               l217 1264  
                             l241 11FE                               l250 119E  
                             l244 1208                               l253 11B2  
                             l190 11E4                               l247 1212  
                             l256 125A                               l193 123C  
                             l196 1254                               l952 1256  
                             l980 1200                               l982 1204  
                             l990 123E                               l984 120A  
                             l992 1238                               l986 120E  
                             l994 11CE                               _GIE 007F97  
                             l996 11D0                               l998 11D4  
                             u100 11AC                               u101 11A8  
                             u110 1150                               u111 114A  
                             u120 1164                               u112 1152  
                             u121 115E                               u130 1176  
                             u122 1166                               u131 1172  
                             u150 107C                               u160 1094  
                             u145 117E                               u161 1090  
                             u170 10A8                               u147 1180  
                             u171 10A4                               u180 10BC  
                             u181 10B8                               wreg 000FE8  
                  ?_displaySerial 0001            ??_displayRequestHandle 0001  
                            l1000 11D6                              l1002 11D8  
                            l1010 11F6                              l1020 1194  
                            l1012 124A                              l1004 11DA  
                            l1030 1140                              l1022 1198  
                            l1014 1262                              l1006 11DC  
                            l1032 1176                              l1024 11AC  
                            l1016 1244                              l1008 11DE  
                            l1040 105E                              l1034 1180  
                            l1026 11B0                              l1018 1186  
                            l1050 1098                              l1042 1062  
                            l1028 1250                              l1060 10BC  
                            l1052 109A                              l1044 1072  
                            l1062 10C0                              l1054 10A8  
                            l1046 1086                              l1038 1052  
                            l1056 10AC                              l1048 1094  
                            l1058 10AE                              _PEIE 007F96  
                            i2l37 121A                              i2l85 11E6  
                            i2l88 11F4                              i2l99 1236  
                            _main 1052                              btemp 0056  
                            start 000E                      ___param_bank 000000  
        __end_of_interruptService 1262                             ?_main 0001  
                           _BRGH1 007D62                             _CREN1 007D5C  
                           _FLAGS 0054                             _LATC0 007C58  
                           _RC1IE 007CED                             _RC1IF 007CF5  
                           i2l102 122E                             i2l224 126C  
                           i2l208 1268                             i2l152 113E  
                           i2l155 1260                             i2l199 1226  
                           i2l932 11E6                             i2l940 1266  
                           i2l934 1230                             i2l950 126A  
                           i2l936 1234                             i2l944 1228  
                           i2l960 10EA                             i2l946 121E  
                           i2l970 111A                             i2l962 10EC  
                           i2l954 10CA                             i2l948 1220  
                           i2l964 10FA                             i2l972 111C  
                           i2l956 10D8                             i2l974 112A  
                           i2l966 1108                             i2l958 10E6  
                           i2l976 1138                             i2l968 1116  
                           i2l978 113C                             i2l988 125C  
                           _SPEN1 007D5F                             _SPBRG 000FAF  
                           _PORTD 000F83                             _TRISD 000F95  
                           _SSPIE 007CEB                             _SSPIF 007CF3  
                           _TXEN1 007D65                             _SYNC1 007D64  
                           _setIo 126E                  ?_displayCallback 0001  
              __size_of_SPIHandle 0008                   __end_of_spiRead 1238  
                           tablat 000FF5                   __end_of_service 121E  
                           ttemp5 0057                             ttemp6 005A  
                           ttemp7 005E                             status 000FD8  
           __end_of_setInterrupts 124A                             wtemp8 0057  
                ??_setupDisplayIo 0001                   __initialization 11B4  
                    __end_of_main 10CA                   _readSerialValue 0053  
                          ??_main 0002                     __activetblptr 000001  
                    ?_setButtonIo 0001                   ??_displaySerial 0001  
                    ?_setSerialIo 0001                            ?_setIo 0001  
                   ?_buttonHandle 0001                            _INT0IE 007F94  
                          _INT0IF 007F91                            i2l1036 1216  
                          _RCREG1 000FAE                            i2u1_40 11F4  
                          i2u1_41 11F0                            i2u2_40 10D8  
                          i2u2_41 10D4                            i2u3_40 10E6  
                          i2u3_41 10E2                            i2u4_40 10FA  
                          i2u4_41 10F6                            i2u5_40 1108  
                          i2u5_41 1104                            i2u6_40 1116  
                          i2u6_41 1112                            i2u7_40 112A  
                          i2u7_41 1126                            i2u8_40 1138  
                          i2u8_41 1134                            _TRISB0 007C98  
                          _TRISC2 007CA2                            _TRISC3 007CA3  
                          _TRISC4 007CA4                            _TRISC5 007CA5  
                          _TRISC6 007CA6                            _TRISC7 007CA7  
                          _SSPBUF 000FC9                            _TXREG1 000FAD  
              _setButtonInterrput 124A               ?_setButtonInterrput 0001  
               __end_of_SPIHandle 1230           __size_of_serialCallback 0006  
                          isa$std 000001                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                         ??_spiRead 0001  
                       ??_service 0001                    ??_buttonHandle 0001  
            ??_setButtonInterrput 0001                        __accesstop 0060  
         __end_of__initialization 11BC                     ___rparam_used 000001  
                  __pcstackCOMRAM 0001                     __end_of_setIo 1270  
        __size_of_setSPIInterrupt 0006  __size_of_processInterruptService 0076  
                         ??_setIo 0001                 ?_interruptService 0001  
         __size_of_spiReceiveWait 0010                __size_of_setSerial 0018  
              ??_interruptService 0001                           _INTEDG0 007F8E  
            __size_of_setButtonIo 0004                        _displaySPI 120A  
                         _SSPSTAT 000FC7           __size_of_buttonCallback 0046  
            __size_of_setSerialIo 0006     __size_of_displayRequestHandle 002E  
                   ?_serialHandle 0001                           __Hparam 0000  
                         __Lparam 0000                        _readSerial 1266  
            __end_of_buttonHandle 126E                      __psmallconst 1000  
                  _serialCallback 1250                           __pcinit 11B4  
                         __ramtop 1000                           __ptext0 1052  
                         __ptext1 11F6                           __ptext2 1238  
                         __ptext3 11CE                           __ptext4 123E  
                         __ptext5 126E                           __ptext6 1244  
                         __ptext7 1262                           __ptext8 124A  
                         __ptext9 1250                           _spiRead 1230  
                         _service 0008                    __pintcode_body 1214  
            end_of_initialization 11BC                 __end_of_setSerial 11E6  
                  ??_serialHandle 0001                           int_func 1214  
               ??_setSPIInterrupt 0001                 __end_ofmain@F4614 1051  
        __size_of_displayCallback 0006            __end_of_serialCallback 1256  
                         postinc2 000FDE            __size_of_setInterrupts 0006  
                       _SPIHandle 1228           _processInterruptService 10CA  
                     ?_displaySPI 0001             __end_of_displaySerial 120A  
                 ?_serialCallback 0001                    _spiReceiveWait 11E6  
                     ?_readSerial 0001           __size_of_setupDisplayIo 000A  
                      ?_SPIHandle 0001               start_initialization 11B4  
                  _buttonCallback 1140       __size_of_setButtonInterrput 0006  
                   _setInterrupts 1244                      _readSPIValue 0055  
           __size_of_buttonHandle 0004            __end_of_spiReceiveWait 11F6  
             __size_of_displaySPI 000A                 ??_displayCallback 0001  
            __end_of_serialHandle 1228         ??_processInterruptService 0001  
                     __pbssCOMRAM 0052            __end_of_buttonCallback 1186  
       __size_of_interruptService 0006                      _buttonHandle 126A  
             __size_of_readSerial 0004                    ?_setInterrupts 0001  
                 ?_spiReceiveWait 0001                         __pintcode 0008  
    __end_of_displayRequestHandle 11B4                     ??_setButtonIo 0001  
                     __smallconst 1000                       ??_SPIHandle 0001  
                 _setSPIInterrupt 123E                          ?_spiRead 0001  
                 ?_buttonCallback 0001                          ?_service 0001  
                   ??_setSerialIo 0001                    __size_of_setIo 0002  
 __end_of_processInterruptService 1140                         _setSerial 11CE  
                       main@F4614 1001                          _SSP1CON1 000FC6  
                  _setupDisplayIo 11F6                      ??_displaySPI 0001  
             __end_of_setButtonIo 1266                   ??_setInterrupts 0001  
             __end_of_setSerialIo 123E                  ??_serialCallback 0001  
                      ?_setSerial 0001                          __Hrparam 0000  
                        __Lrparam 0000                      __Lsmallconst 1000  
          __end_of_setupDisplayIo 1200             __size_of_serialHandle 000A  
                    ??_readSerial 0001                __end_of_displaySPI 1214  
         __end_of_setSPIInterrupt 1244                  _interruptService 125C  
                        __ptext10 1186                          __ptext11 1200  
                        __ptext20 126A                          __ptext12 120A  
                        __ptext21 1228                          __ptext13 1256  
                        __ptext22 1230                          __ptext14 1140  
                        __ptext23 11E6                          __ptext16 125C  
                        __ptext17 10CA                          __ptext18 121E  
                        __ptext19 1266                  __size_of_spiRead 0008  
                __size_of_service 1216              _displayRequestHandle 1186  
              __end_of_readSerial 126A                     __size_of_main 0078  
                    _serialHandle 121E                   _displayCallback 1256  
                        isa$xinst 000000                   ?_setupDisplayIo 0001  
                        _outValue 0052                          int$flags 0056  
          __size_of_displaySerial 000A                          main@test 0002  
                     _setButtonIo 1262        __end_of_setButtonInterrput 1250  
                     _setSerialIo 1238                          intlevel2 0000  
           ?_displayRequestHandle 0001                  ??_spiReceiveWait 0001  
                     ??_setSerial 0001                  ?_setSPIInterrupt 0001  
                ??_buttonCallback 0001                     _displaySerial 1200  
         __end_of_displayCallback 125C  
