

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat May 22 14:33:33 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F8722 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     _TRISD	set	3989
    60  0000                     _SSPBUF	set	4041
    61  0000                     _SSPSTATbits	set	4039
    62  0000                     _SSP1CON1	set	4038
    63  0000                     _SSPSTAT	set	4039
    64  0000                     _PORTD	set	3971
    65  0000                     _SSPIE	set	31979
    66  0000                     _SSPIF	set	31987
    67  0000                     _PEIE	set	32662
    68  0000                     _GIE	set	32663
    69  0000                     _nRBPU	set	32655
    70  0000                     _RC0	set	31760
    71  0000                     _TRISC0	set	31904
    72  0000                     _TRISC3	set	31907
    73  0000                     _TRISC4	set	31908
    74  0000                     _TRISC5	set	31909
    75                           
    76                           ; #config settings
    77                           
    78                           	psect	cinit
    79  0000C2                     __pcinit:
    80                           	callstack 0
    81  0000C2                     start_initialization:
    82                           	callstack 0
    83  0000C2                     __initialization:
    84                           	callstack 0
    85                           
    86                           ; Clear objects allocated to COMRAM (2 bytes)
    87  0000C2  6A08               	clrf	(__pbssCOMRAM+1)& (0+255),c
    88  0000C4  6A07               	clrf	__pbssCOMRAM& (0+255),c
    89  0000C6                     end_of_initialization:
    90                           	callstack 0
    91  0000C6                     __end_of__initialization:
    92                           	callstack 0
    93  0000C6  9009               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    94  0000C8  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    95  0000CA  0100               	movlb	0
    96  0000CC  EF09  F000         	goto	_main	;jump to C main() function
    97                           
    98                           	psect	bssCOMRAM
    99  000007                     __pbssCOMRAM:
   100                           	callstack 0
   101  000007                     _readValue:
   102                           	callstack 0
   103  000007                     	ds	1
   104  000008                     _FLAGS:
   105                           	callstack 0
   106  000008                     	ds	1
   107                           
   108                           	psect	cstackCOMRAM
   109  000001                     __pcstackCOMRAM:
   110                           	callstack 0
   111  000001                     spiInit@sDataSample:
   112                           	callstack 0
   113  000001                     spiWrite@dat:
   114                           	callstack 0
   115                           
   116                           ; 1 bytes @ 0x0
   117  000001                     	ds	1
   118  000002                     spiInit@sClockIdle:
   119                           	callstack 0
   120                           
   121                           ; 1 bytes @ 0x1
   122  000002                     	ds	1
   123  000003                     spiInit@sTransmitEdge:
   124                           	callstack 0
   125                           
   126                           ; 1 bytes @ 0x2
   127  000003                     	ds	1
   128  000004                     spiInit@sType:
   129                           	callstack 0
   130                           
   131                           ; 1 bytes @ 0x3
   132  000004                     	ds	1
   133  000005                     ??_main:
   134                           
   135                           ; 1 bytes @ 0x4
   136  000005                     	ds	2
   137                           
   138 ;;
   139 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   140 ;;
   141 ;; *************** function _main *****************
   142 ;; Defined at:
   143 ;;		line 19 in file "newmain.c"
   144 ;; Parameters:    Size  Location     Type
   145 ;;		None
   146 ;; Auto vars:     Size  Location     Type
   147 ;;		None
   148 ;; Return value:  Size  Location     Type
   149 ;;                  1    wreg      void 
   150 ;; Registers used:
   151 ;;		wreg, status,2, status,0, cstack
   152 ;; Tracked objects:
   153 ;;		On entry : 0/0
   154 ;;		On exit  : 0/0
   155 ;;		Unchanged: 0/0
   156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   159 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   160 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   161 ;;Total ram usage:        2 bytes
   162 ;; Hardware stack levels required when called: 6
   163 ;; This function calls:
   164 ;;		_setInterrupts
   165 ;;		_setIo
   166 ;;		_spiInit
   167 ;;		_spiWrite
   168 ;; This function is called by:
   169 ;;		Startup code after reset
   170 ;; This function uses a non-reentrant model
   171 ;;
   172                           
   173                           	psect	text0
   174  000012                     __ptext0:
   175                           	callstack 0
   176  000012                     _main:
   177                           	callstack 25
   178  000012                     
   179                           ;newmain.c: 20:     setIo();
   180  000012  EC68  F000         	call	_setIo	;wreg free
   181  000016                     
   182                           ;newmain.c: 21:     setInterrupts();
   183  000016  EC6E  F000         	call	_setInterrupts	;wreg free
   184  00001A                     
   185                           ;newmain.c: 23:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   186  00001A  0E00               	movlw	0
   187  00001C  6E01               	movwf	spiInit@sDataSample^0,c
   188  00001E  0E00               	movlw	0
   189  000020  6E02               	movwf	spiInit@sClockIdle^0,c
   190  000022  0E00               	movlw	0
   191  000024  6E03               	movwf	spiInit@sTransmitEdge^0,c
   192  000026  0E24               	movlw	36
   193  000028  EC32  F000         	call	_spiInit
   194  00002C                     
   195                           ;newmain.c: 25:     spiWrite(0b01010101);
   196  00002C  0E55               	movlw	85
   197  00002E  EC78  F000         	call	_spiWrite
   198  000032                     l865:
   199                           
   200                           ;newmain.c: 27:         if (FLAGS.ByteBits.DISPLAY_READING) {
   201  000032  A208               	btfss	_FLAGS^0,1,c
   202  000034  EF1E  F000         	goto	u61
   203  000038  EF20  F000         	goto	u60
   204  00003C                     u61:
   205  00003C  EF23  F000         	goto	l869
   206  000040                     u60:
   207  000040                     
   208                           ;newmain.c: 28:             PORTD = readValue;
   209  000040  C007  FF83         	movff	_readValue,3971	;volatile
   210                           
   211                           ;newmain.c: 29:             FLAGS.ByteBits.DISPLAY_READING = 0;
   212  000044  9208               	bcf	_FLAGS^0,1,c
   213  000046                     l869:
   214                           
   215                           ;newmain.c: 33:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   216  000046  0E0B               	movlw	11
   217  000048  6E06               	movwf	(??_main+1)^0,c
   218  00004A  0E26               	movlw	38
   219  00004C  6E05               	movwf	??_main^0,c
   220  00004E  0E5E               	movlw	94
   221  000050                     u77:
   222  000050  2EE8               	decfsz	wreg,f,c
   223  000052  D7FE               	bra	u77
   224  000054  2E05               	decfsz	??_main^0,f,c
   225  000056  D7FC               	bra	u77
   226  000058  2E06               	decfsz	(??_main+1)^0,f,c
   227  00005A  D7FA               	bra	u77
   228  00005C  EF19  F000         	goto	l865
   229  000060  EF07  F000         	goto	start
   230  000064                     __end_of_main:
   231                           	callstack 0
   232                           
   233 ;; *************** function _spiWrite *****************
   234 ;; Defined at:
   235 ;;		line 30 in file "spi.c"
   236 ;; Parameters:    Size  Location     Type
   237 ;;  dat             1    wreg     unsigned char 
   238 ;; Auto vars:     Size  Location     Type
   239 ;;  dat             1    0[COMRAM] unsigned char 
   240 ;; Return value:  Size  Location     Type
   241 ;;                  1    wreg      void 
   242 ;; Registers used:
   243 ;;		wreg
   244 ;; Tracked objects:
   245 ;;		On entry : 0/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   250 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   252 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   253 ;;Total ram usage:        1 bytes
   254 ;; Hardware stack levels used: 1
   255 ;; Hardware stack levels required when called: 5
   256 ;; This function calls:
   257 ;;		Nothing
   258 ;; This function is called by:
   259 ;;		_main
   260 ;; This function uses a non-reentrant model
   261 ;;
   262                           
   263                           	psect	text1
   264  0000F0                     __ptext1:
   265                           	callstack 0
   266  0000F0                     _spiWrite:
   267                           	callstack 25
   268                           
   269                           ;incstack = 0
   270                           ;spiWrite@dat stored from wreg
   271  0000F0  6E01               	movwf	spiWrite@dat^0,c
   272  0000F2                     
   273                           ;spi.c: 30: void spiWrite(char dat);spi.c: 31: {;spi.c: 32:     SSPBUF = dat;
   274  0000F2  C001  FFC9         	movff	spiWrite@dat,4041	;volatile
   275  0000F6  0012               	return		;funcret
   276  0000F8                     __end_of_spiWrite:
   277                           	callstack 0
   278                           
   279 ;; *************** function _spiInit *****************
   280 ;; Defined at:
   281 ;;		line 8 in file "spi.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;  sType           1    wreg     enum E4544
   284 ;;  sDataSample     1    0[COMRAM] enum E4552
   285 ;;  sClockIdle      1    1[COMRAM] enum E4556
   286 ;;  sTransmitEdg    1    2[COMRAM] enum E4560
   287 ;; Auto vars:     Size  Location     Type
   288 ;;  sType           1    3[COMRAM] enum E4544
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		wreg, status,2, status,0
   293 ;; Tracked objects:
   294 ;;		On entry : 0/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   298 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   299 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   301 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   302 ;;Total ram usage:        4 bytes
   303 ;; Hardware stack levels used: 1
   304 ;; Hardware stack levels required when called: 5
   305 ;; This function calls:
   306 ;;		Nothing
   307 ;; This function is called by:
   308 ;;		_main
   309 ;; This function uses a non-reentrant model
   310 ;;
   311                           
   312                           	psect	text2
   313  000064                     __ptext2:
   314                           	callstack 0
   315  000064                     _spiInit:
   316                           	callstack 25
   317                           
   318                           ;incstack = 0
   319                           ;spiInit@sType stored from wreg
   320  000064  6E04               	movwf	spiInit@sType^0,c
   321  000066                     
   322                           ;spi.c: 9:     TRISC5 = 0;
   323  000066  9A94               	bcf	3988,5,c	;volatile
   324                           
   325                           ;spi.c: 10:     TRISC4 = 1;
   326  000068  8894               	bsf	3988,4,c	;volatile
   327  00006A                     
   328                           ;spi.c: 11:     if (sType & 0b00000100)
   329  00006A  A404               	btfss	spiInit@sType^0,2,c
   330  00006C  EF3A  F000         	goto	u51
   331  000070  EF3C  F000         	goto	u50
   332  000074                     u51:
   333  000074  EF43  F000         	goto	l851
   334  000078                     u50:
   335  000078                     
   336                           ;spi.c: 12:     {;spi.c: 13:         SSPSTAT = sTransmitEdge;
   337  000078  C003  FFC7         	movff	spiInit@sTransmitEdge,4039	;volatile
   338                           
   339                           ;spi.c: 14:         TRISC3 = 1;
   340  00007C  8694               	bsf	3988,3,c	;volatile
   341                           
   342                           ;spi.c: 15:         TRISC0 = 0;
   343  00007E  9094               	bcf	3988,0,c	;volatile
   344                           
   345                           ;spi.c: 16:         RC0 = 1;
   346  000080  8082               	bsf	3970,0,c	;volatile
   347                           
   348                           ;spi.c: 17:     } else
   349  000082  EF48  F000         	goto	l54
   350  000086                     l851:
   351                           
   352                           ;spi.c: 18:     {;spi.c: 19:         SSPSTAT = sDataSample | sTransmitEdge;
   353  000086  5001               	movf	spiInit@sDataSample^0,w,c
   354  000088  1003               	iorwf	spiInit@sTransmitEdge^0,w,c
   355  00008A  6EC7               	movwf	199,c	;volatile
   356  00008C                     
   357                           ;spi.c: 20:         TRISC3 = 0;
   358  00008C  9694               	bcf	3988,3,c	;volatile
   359  00008E                     
   360                           ;spi.c: 21:         TRISC0 = 1;
   361  00008E  8094               	bsf	3988,0,c	;volatile
   362  000090                     l54:
   363                           
   364                           ;spi.c: 23:     SSP1CON1 = sType | sClockIdle;
   365  000090  5004               	movf	spiInit@sType^0,w,c
   366  000092  1002               	iorwf	spiInit@sClockIdle^0,w,c
   367  000094  6EC6               	movwf	198,c	;volatile
   368  000096  0012               	return		;funcret
   369  000098                     __end_of_spiInit:
   370                           	callstack 0
   371                           
   372 ;; *************** function _setIo *****************
   373 ;; Defined at:
   374 ;;		line 8 in file "init.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;		None
   377 ;; Auto vars:     Size  Location     Type
   378 ;;		None
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		wreg, status,2
   383 ;; Tracked objects:
   384 ;;		On entry : 0/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   392 ;;Total ram usage:        0 bytes
   393 ;; Hardware stack levels used: 1
   394 ;; Hardware stack levels required when called: 5
   395 ;; This function calls:
   396 ;;		Nothing
   397 ;; This function is called by:
   398 ;;		_main
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           	psect	text3
   403  0000D0                     __ptext3:
   404                           	callstack 0
   405  0000D0                     _setIo:
   406                           	callstack 25
   407  0000D0                     
   408                           ;init.c: 9:     nRBPU = 0;
   409  0000D0  9EF1               	bcf	4081,7,c	;volatile
   410  0000D2                     
   411                           ;init.c: 10:     TRISD = 0x00;
   412  0000D2  0E00               	movlw	0
   413  0000D4  6E95               	movwf	149,c	;volatile
   414                           
   415                           ;init.c: 11:     PORTD = 0x00;
   416  0000D6  0E00               	movlw	0
   417  0000D8  6E83               	movwf	131,c	;volatile
   418  0000DA  0012               	return		;funcret
   419  0000DC                     __end_of_setIo:
   420                           	callstack 0
   421                           
   422 ;; *************** function _setInterrupts *****************
   423 ;; Defined at:
   424 ;;		line 14 in file "init.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;		None
   427 ;; Auto vars:     Size  Location     Type
   428 ;;		None
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		None
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   442 ;;Total ram usage:        0 bytes
   443 ;; Hardware stack levels used: 1
   444 ;; Hardware stack levels required when called: 5
   445 ;; This function calls:
   446 ;;		Nothing
   447 ;; This function is called by:
   448 ;;		_main
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           	psect	text4
   453  0000DC                     __ptext4:
   454                           	callstack 0
   455  0000DC                     _setInterrupts:
   456                           	callstack 25
   457  0000DC                     
   458                           ;init.c: 15:     GIE = 1;
   459  0000DC  8EF2               	bsf	4082,7,c	;volatile
   460                           
   461                           ;init.c: 16:     PEIE = 1;
   462  0000DE  8CF2               	bsf	4082,6,c	;volatile
   463                           
   464                           ;init.c: 17:     SSPIF = 0;
   465  0000E0  969E               	bcf	3998,3,c	;volatile
   466                           
   467                           ;init.c: 18:     SSPIE = 1;
   468  0000E2  869D               	bsf	3997,3,c	;volatile
   469  0000E4  0012               	return		;funcret
   470  0000E6                     __end_of_setInterrupts:
   471                           	callstack 0
   472                           
   473 ;; *************** function _service *****************
   474 ;; Defined at:
   475 ;;		line 15 in file "newmain.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;		None
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      void 
   482 ;; Registers used:
   483 ;;		wreg, status,2, cstack
   484 ;; Tracked objects:
   485 ;;		On entry : 0/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   493 ;;Total ram usage:        0 bytes
   494 ;; Hardware stack levels used: 1
   495 ;; Hardware stack levels required when called: 4
   496 ;; This function calls:
   497 ;;		_interruptService
   498 ;; This function is called by:
   499 ;;		Interrupt level 2
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           	psect	intcode
   504  000008                     __pintcode:
   505                           	callstack 0
   506  000008                     _service:
   507                           	callstack 25
   508                           
   509                           ;incstack = 0
   510  000008  8209               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   511  00000A  ED73  F000         	call	int_func,f	;refresh shadow registers
   512                           
   513                           	psect	intcode_body
   514  0000E6                     __pintcode_body:
   515                           	callstack 25
   516  0000E6                     int_func:
   517                           	callstack 25
   518  0000E6  0006               	pop		; remove dummy address from shadow register refresh
   519  0000E8                     
   520                           ;newmain.c: 16:     interruptService();
   521  0000E8  EC80  F000         	call	_interruptService	;wreg free
   522  0000EC  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   523  0000EE  0011               	retfie		f
   524  0000F0                     __end_of_service:
   525                           	callstack 0
   526                           
   527 ;; *************** function _interruptService *****************
   528 ;; Defined at:
   529 ;;		line 11 in file "interruptService.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;		None
   532 ;; Auto vars:     Size  Location     Type
   533 ;;		None
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, status,2, cstack
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   547 ;;Total ram usage:        0 bytes
   548 ;; Hardware stack levels used: 1
   549 ;; Hardware stack levels required when called: 3
   550 ;; This function calls:
   551 ;;		_spiService
   552 ;; This function is called by:
   553 ;;		_service
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           	psect	text6
   558  000100                     __ptext6:
   559                           	callstack 0
   560  000100                     _interruptService:
   561                           	callstack 25
   562  000100                     
   563                           ;interruptService.c: 12:     spiService();
   564  000100  EC4C  F000         	call	_spiService	;wreg free
   565  000104  0012               	return		;funcret
   566  000106                     __end_of_interruptService:
   567                           	callstack 0
   568                           
   569 ;; *************** function _spiService *****************
   570 ;; Defined at:
   571 ;;		line 15 in file "interruptService.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;		None
   574 ;; Auto vars:     Size  Location     Type
   575 ;;		None
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		wreg, status,2, cstack
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   589 ;;Total ram usage:        0 bytes
   590 ;; Hardware stack levels used: 1
   591 ;; Hardware stack levels required when called: 2
   592 ;; This function calls:
   593 ;;		_spiRead
   594 ;; This function is called by:
   595 ;;		_interruptService
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           	psect	text7
   600  000098                     __ptext7:
   601                           	callstack 0
   602  000098                     _spiService:
   603                           	callstack 25
   604  000098                     
   605                           ;interruptService.c: 16:     if (SSPIF == 1) {
   606  000098  A69E               	btfss	3998,3,c	;volatile
   607  00009A  EF51  F000         	goto	i2u2_41
   608  00009E  EF53  F000         	goto	i2u2_40
   609  0000A2                     i2u2_41:
   610  0000A2  EF58  F000         	goto	i2l109
   611  0000A6                     i2u2_40:
   612  0000A6                     
   613                           ;interruptService.c: 17:         SSPIF = 0;
   614  0000A6  969E               	bcf	3998,3,c	;volatile
   615  0000A8                     
   616                           ;interruptService.c: 18:         readValue = spiRead();
   617  0000A8  EC7C  F000         	call	_spiRead	;wreg free
   618  0000AC  6E07               	movwf	_readValue^0,c
   619  0000AE                     
   620                           ;interruptService.c: 19:         FLAGS.ByteBits.DISPLAY_READING = 1;
   621  0000AE  8208               	bsf	_FLAGS^0,1,c
   622  0000B0                     i2l109:
   623  0000B0  0012               	return		;funcret
   624  0000B2                     __end_of_spiService:
   625                           	callstack 0
   626                           
   627 ;; *************** function _spiRead *****************
   628 ;; Defined at:
   629 ;;		line 43 in file "spi.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      unsigned char 
   636 ;; Registers used:
   637 ;;		wreg, status,2, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   647 ;;Total ram usage:        0 bytes
   648 ;; Hardware stack levels used: 1
   649 ;; Hardware stack levels required when called: 1
   650 ;; This function calls:
   651 ;;		_spiReceiveWait
   652 ;; This function is called by:
   653 ;;		_spiService
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           	psect	text8
   658  0000F8                     __ptext8:
   659                           	callstack 0
   660  0000F8                     _spiRead:
   661                           	callstack 25
   662  0000F8                     
   663                           ;spi.c: 45:     spiReceiveWait();
   664  0000F8  EC59  F000         	call	_spiReceiveWait	;wreg free
   665  0000FC                     
   666                           ;spi.c: 46:     return (SSPBUF);
   667  0000FC  50C9               	movf	201,w,c	;volatile
   668  0000FE  0012               	return		;funcret
   669  000100                     __end_of_spiRead:
   670                           	callstack 0
   671                           
   672 ;; *************** function _spiReceiveWait *****************
   673 ;; Defined at:
   674 ;;		line 26 in file "spi.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;		None
   677 ;; Auto vars:     Size  Location     Type
   678 ;;		None
   679 ;; Return value:  Size  Location     Type
   680 ;;                  1    wreg      void 
   681 ;; Registers used:
   682 ;;		None
   683 ;; Tracked objects:
   684 ;;		On entry : 0/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   692 ;;Total ram usage:        0 bytes
   693 ;; Hardware stack levels used: 1
   694 ;; This function calls:
   695 ;;		Nothing
   696 ;; This function is called by:
   697 ;;		_spiRead
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text9
   702  0000B2                     __ptext9:
   703                           	callstack 0
   704  0000B2                     _spiReceiveWait:
   705                           	callstack 25
   706  0000B2                     i2l58:
   707  0000B2  A0C7               	btfss	199,0,c	;volatile
   708  0000B4  EF5E  F000         	goto	i2u1_41
   709  0000B8  EF60  F000         	goto	i2u1_40
   710  0000BC                     i2u1_41:
   711  0000BC  EF59  F000         	goto	i2l58
   712  0000C0                     i2u1_40:
   713  0000C0  0012               	return		;funcret
   714  0000C2                     __end_of_spiReceiveWait:
   715                           	callstack 0
   716  0000                     
   717                           	psect	rparam
   718  0000                     
   719                           	psect	temp
   720  000009                     btemp:
   721                           	callstack 0
   722  000009                     	ds	1
   723  0000                     int$flags	set	btemp
   724  0000                     wtemp8	set	btemp+1
   725  0000                     ttemp5	set	btemp+1
   726  0000                     ttemp6	set	btemp+4
   727  0000                     ttemp7	set	btemp+8
   728                           
   729                           	psect	idloc
   730                           
   731                           ;Config register IDLOC0 @ 0x200000
   732                           ;	unspecified, using default values
   733  200000                     	org	2097152
   734  200000  FF                 	db	255
   735                           
   736                           ;Config register IDLOC1 @ 0x200001
   737                           ;	unspecified, using default values
   738  200001                     	org	2097153
   739  200001  FF                 	db	255
   740                           
   741                           ;Config register IDLOC2 @ 0x200002
   742                           ;	unspecified, using default values
   743  200002                     	org	2097154
   744  200002  FF                 	db	255
   745                           
   746                           ;Config register IDLOC3 @ 0x200003
   747                           ;	unspecified, using default values
   748  200003                     	org	2097155
   749  200003  FF                 	db	255
   750                           
   751                           ;Config register IDLOC4 @ 0x200004
   752                           ;	unspecified, using default values
   753  200004                     	org	2097156
   754  200004  FF                 	db	255
   755                           
   756                           ;Config register IDLOC5 @ 0x200005
   757                           ;	unspecified, using default values
   758  200005                     	org	2097157
   759  200005  FF                 	db	255
   760                           
   761                           ;Config register IDLOC6 @ 0x200006
   762                           ;	unspecified, using default values
   763  200006                     	org	2097158
   764  200006  FF                 	db	255
   765                           
   766                           ;Config register IDLOC7 @ 0x200007
   767                           ;	unspecified, using default values
   768  200007                     	org	2097159
   769  200007  FF                 	db	255
   770                           
   771                           	psect	config
   772                           
   773                           ; Padding undefined space
   774  300000                     	org	3145728
   775  300000  FF                 	db	255
   776                           
   777                           ;Config register CONFIG1H @ 0x300001
   778                           ;	Oscillator Selection bits
   779                           ;	OSC = XT, XT oscillator
   780                           ;	Fail-Safe Clock Monitor Enable bit
   781                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   782                           ;	Internal/External Oscillator Switchover bit
   783                           ;	IESO = OFF, Two-Speed Start-up disabled
   784  300001                     	org	3145729
   785  300001  01                 	db	1
   786                           
   787                           ;Config register CONFIG2L @ 0x300002
   788                           ;	Power-up Timer Enable bit
   789                           ;	PWRT = OFF, PWRT disabled
   790                           ;	Brown-out Reset Enable bits
   791                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   792                           ;	Brown-out Voltage bits
   793                           ;	BORV = 3, Minimum setting
   794  300002                     	org	3145730
   795  300002  19                 	db	25
   796                           
   797                           ;Config register CONFIG2H @ 0x300003
   798                           ;	Watchdog Timer
   799                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   800                           ;	Watchdog Timer Postscale Select bits
   801                           ;	WDTPS = 32768, 1:32768
   802  300003                     	org	3145731
   803  300003  1E                 	db	30
   804                           
   805                           ;Config register CONFIG3L @ 0x300004
   806                           ;	Processor Data Memory Mode Select bits
   807                           ;	MODE = MC, Microcontroller mode
   808                           ;	Address Bus Width Select bits
   809                           ;	ADDRBW = ADDR20BIT, 20-bit Address Bus
   810                           ;	Data Bus Width Select bit
   811                           ;	DATABW = DATA16BIT, 16-bit External Bus mode
   812                           ;	External Bus Data Wait Enable bit
   813                           ;	WAIT = OFF, Wait selections are unavailable for table reads and table writes
   814  300004                     	org	3145732
   815  300004  F3                 	db	243
   816                           
   817                           ;Config register CONFIG3H @ 0x300005
   818                           ;	CCP2 MUX bit
   819                           ;	CCP2MX = PORTC, ECCP2 input/output is multiplexed with RC1
   820                           ;	ECCP MUX bit
   821                           ;	ECCPMX = PORTE, ECCP1/3 (P1B/P1C/P3B/P3C) are multiplexed onto RE6, RE5, RE4 and RE3 r
      +                          espectively
   822                           ;	Low-Power Timer1 Oscillator Enable bit
   823                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   824                           ;	MCLR Pin Enable bit
   825                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
   826  300005                     	org	3145733
   827  300005  83                 	db	131
   828                           
   829                           ;Config register CONFIG4L @ 0x300006
   830                           ;	Stack Full/Underflow Reset Enable bit
   831                           ;	STVREN = ON, Stack full/underflow will cause Reset
   832                           ;	Single-Supply ICSP Enable bit
   833                           ;	LVP = OFF, Single-Supply ICSP disabled
   834                           ;	Boot Block Size Select bits
   835                           ;	BBSIZ = BB2K, 1K word (2 Kbytes) Boot Block size
   836                           ;	Extended Instruction Set Enable bit
   837                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   838                           ;	Background Debugger Enable bit
   839                           ;	DEBUG = 0x1, unprogrammed default
   840  300006                     	org	3145734
   841  300006  81                 	db	129
   842                           
   843                           ; Padding undefined space
   844  300007                     	org	3145735
   845  300007  FF                 	db	255
   846                           
   847                           ;Config register CONFIG5L @ 0x300008
   848                           ;	Code Protection bit Block 0
   849                           ;	CP0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not code-protected
   850                           ;	Code Protection bit Block 1
   851                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   852                           ;	Code Protection bit Block 2
   853                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   854                           ;	Code Protection bit Block 3
   855                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   856                           ;	Code Protection bit Block 4
   857                           ;	CP4 = OFF, Block 4 (010000-013FFFh) not code-protected
   858                           ;	Code Protection bit Block 5
   859                           ;	CP5 = OFF, Block 5 (014000-017FFFh) not code-protected
   860                           ;	Code Protection bit Block 6
   861                           ;	CP6 = OFF, Block 6 (01BFFF-018000h) not code-protected
   862                           ;	Code Protection bit Block 7
   863                           ;	CP7 = OFF, Block 7 (01C000-01FFFFh) not code-protected
   864  300008                     	org	3145736
   865  300008  FF                 	db	255
   866                           
   867                           ;Config register CONFIG5H @ 0x300009
   868                           ;	Boot Block Code Protection bit
   869                           ;	CPB = OFF, Boot Block (000000-0007FFh) not code-protected
   870                           ;	Data EEPROM Code Protection bit
   871                           ;	CPD = OFF, Data EEPROM not code-protected
   872  300009                     	org	3145737
   873  300009  C0                 	db	192
   874                           
   875                           ;Config register CONFIG6L @ 0x30000A
   876                           ;	Write Protection bit Block 0
   877                           ;	WRT0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not write-protected
   878                           ;	Write Protection bit Block 1
   879                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   880                           ;	Write Protection bit Block 2
   881                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   882                           ;	Write Protection bit Block 3
   883                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   884                           ;	Write Protection bit Block 4
   885                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
   886                           ;	Write Protection bit Block 5
   887                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
   888                           ;	Write Protection bit Block 6
   889                           ;	WRT6 = OFF, Block 6 (01BFFF-018000h) not write-protected
   890                           ;	Write Protection bit Block 7
   891                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
   892  30000A                     	org	3145738
   893  30000A  FF                 	db	255
   894                           
   895                           ;Config register CONFIG6H @ 0x30000B
   896                           ;	Configuration Register Write Protection bit
   897                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   898                           ;	Boot Block Write Protection bit
   899                           ;	WRTB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not write-protected
   900                           ;	Data EEPROM Write Protection bit
   901                           ;	WRTD = OFF, Data EEPROM not write-protected
   902  30000B                     	org	3145739
   903  30000B  E0                 	db	224
   904                           
   905                           ;Config register CONFIG7L @ 0x30000C
   906                           ;	Table Read Protection bit Block 0
   907                           ;	EBTR0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not protected from table reads
      +                           executed in other blocks
   908                           ;	Table Read Protection bit Block 1
   909                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   910                           ;	Table Read Protection bit Block 2
   911                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   912                           ;	Table Read Protection bit Block 3
   913                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   914                           ;	Table Read Protection bit Block 4
   915                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
   916                           ;	Table Read Protection bit Block 5
   917                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
   918                           ;	Table Read Protection bit Block 6
   919                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
   920                           ;	Table Read Protection bit Block 7
   921                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
   922  30000C                     	org	3145740
   923  30000C  FF                 	db	255
   924                           
   925                           ;Config register CONFIG7H @ 0x30000D
   926                           ;	Boot Block Table Read Protection bit
   927                           ;	EBTRB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not protected from table re
      +                          ads executed in other blocks
   928  30000D                     	org	3145741
   929  30000D  40                 	db	64
   930                           tosu	equ	0xFFF
   931                           tosh	equ	0xFFE
   932                           tosl	equ	0xFFD
   933                           stkptr	equ	0xFFC
   934                           pclatu	equ	0xFFB
   935                           pclath	equ	0xFFA
   936                           pcl	equ	0xFF9
   937                           tblptru	equ	0xFF8
   938                           tblptrh	equ	0xFF7
   939                           tblptrl	equ	0xFF6
   940                           tablat	equ	0xFF5
   941                           prodh	equ	0xFF4
   942                           prodl	equ	0xFF3
   943                           indf0	equ	0xFEF
   944                           postinc0	equ	0xFEE
   945                           postdec0	equ	0xFED
   946                           preinc0	equ	0xFEC
   947                           plusw0	equ	0xFEB
   948                           fsr0h	equ	0xFEA
   949                           fsr0l	equ	0xFE9
   950                           wreg	equ	0xFE8
   951                           indf1	equ	0xFE7
   952                           postinc1	equ	0xFE6
   953                           postdec1	equ	0xFE5
   954                           preinc1	equ	0xFE4
   955                           plusw1	equ	0xFE3
   956                           fsr1h	equ	0xFE2
   957                           fsr1l	equ	0xFE1
   958                           bsr	equ	0xFE0
   959                           indf2	equ	0xFDF
   960                           postinc2	equ	0xFDE
   961                           postdec2	equ	0xFDD
   962                           preinc2	equ	0xFDC
   963                           plusw2	equ	0xFDB
   964                           fsr2h	equ	0xFDA
   965                           fsr2l	equ	0xFD9
   966                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      6       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_spiInit

Critical Paths under _service in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _service in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _service in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _service in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _service in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _service in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _service in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _service in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _service in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _service in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _service in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _service in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _service in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _service in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _service in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _service in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _service in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     375
                                              4 COMRAM     2     2      0
                      _setInterrupts
                              _setIo
                            _spiInit
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setIo                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setInterrupts                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _service                                              0     0      0       0
                   _interruptService
 ---------------------------------------------------------------------------------
 (3) _interruptService                                     0     0      0       0
                         _spiService
 ---------------------------------------------------------------------------------
 (4) _spiService                                           0     0      0       0
                            _spiRead
 ---------------------------------------------------------------------------------
 (5) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (6) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setInterrupts
   _setIo
   _spiInit
   _spiWrite

 _service (ROOT)
   _interruptService
     _spiService
       _spiRead
         _spiReceiveWait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      6       8       1        8.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       8      32        0.0%
DATA                 0      0       8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat May 22 14:33:33 2021

              _SSPSTATbits 000FC7                         l54 0090                         l55 0096  
                       l64 00F6                         l92 00E4                         l89 00DA  
                       u50 0078                         u51 0074                         u60 0040  
                       u61 003C                         u77 0050                        l803 00D0  
                      l805 00D2                        l821 00F2                        l807 00DC  
                      l851 0086                        l853 008C                        l845 0066  
                      l861 001A                        l855 008E                        l847 006A  
                      l863 002C                        l849 0078                        l865 0032  
                      l857 0012                        l867 0040                        l859 0016  
                      l869 0046                        _GIE 007F97                        _RC0 007C10  
                      wreg 000FE8                       _PEIE 007F96                       i2l23 00EC  
                     i2l61 00C0                       i2l72 00FE                       i2l58 00B2  
                     _main 0012                       btemp 0009                       start 000E  
             ___param_bank 000000   __end_of_interruptService 0106                      ?_main 0001  
                    _FLAGS 0008                      i2l105 0104                      i2l109 00B0  
                    i2l801 0100                      i2l823 00E8                      i2l785 00B2  
                    i2l793 0098                      i2l787 00F8                      i2l795 00A6  
                    i2l789 00FC                      i2l797 00A8                      i2l799 00AE  
                    _PORTD 000F83                      _TRISD 000F95                      _SSPIE 007CEB  
                    _SSPIF 007CF3                      _nRBPU 007F8F                      _setIo 00D0  
          __end_of_spiInit 0098            __end_of_spiRead 0100            __end_of_service 00F0  
                    ttemp5 000A                      ttemp6 000D                      ttemp7 0011  
    __end_of_setInterrupts 00E6                      wtemp8 000A            __initialization 00C2  
             __end_of_main 0064                     ??_main 0005              __activetblptr 000000  
                   ?_setIo 0001                     i2u1_40 00C0                     i2u1_41 00BC  
                   i2u2_40 00A6                     i2u2_41 00A2                     _TRISC0 007CA0  
                   _TRISC3 007CA3                     _TRISC4 007CA4                     _TRISC5 007CA5  
                   _SSPBUF 000FC9                     isa$std 000001           __end_of_spiWrite 00F8  
                ??_spiInit 0004                  ??_spiRead 0001                  ??_service 0001  
               __accesstop 0060    __end_of__initialization 00C6              ___rparam_used 000001  
           __pcstackCOMRAM 0001              __end_of_setIo 00DC                    ??_setIo 0001  
        ?_interruptService 0001    __size_of_spiReceiveWait 0010         ??_interruptService 0001  
                  _SSPSTAT 000FC7                    __Hparam 0000                    __Lparam 0000  
                ?_spiWrite 0001                    __pcinit 00C2                    __ramtop 1000  
                  __ptext0 0012                    __ptext1 00F0                    __ptext2 0064  
                  __ptext3 00D0                    __ptext4 00DC                    __ptext6 0100  
                  __ptext7 0098                    __ptext8 00F8                    __ptext9 00B2  
                  _spiInit 0064                    _spiRead 00F8                    _service 0008  
           __pintcode_body 00E6       end_of_initialization 00C6                    int_func 00E6  
               ??_spiWrite 0001                 _spiService 0098     __size_of_setInterrupts 000A  
              spiWrite@dat 0001             _spiReceiveWait 00B2        start_initialization 00C2  
            _setInterrupts 00DC     __end_of_spiReceiveWait 00C2                ?_spiService 0001  
              __pbssCOMRAM 0007  __size_of_interruptService 0006             ?_setInterrupts 0001  
          ?_spiReceiveWait 0001                  __pintcode 0008          __size_of_spiWrite 0008  
                 ?_spiInit 0001                   ?_spiRead 0001                   ?_service 0001  
                _readValue 0007             __size_of_setIo 000C        __size_of_spiService 001A  
     spiInit@sTransmitEdge 0003         spiInit@sDataSample 0001                   _SSP1CON1 000FC6  
          ??_setInterrupts 0001                   __Hrparam 0000                   __Lrparam 0000  
         _interruptService 0100           __size_of_spiInit 0034           __size_of_spiRead 0008  
         __size_of_service 00E8              __size_of_main 0052                   isa$xinst 000000  
                 _spiWrite 00F0                   int$flags 0009               spiInit@sType 0004  
             ??_spiService 0001          spiInit@sClockIdle 0002                   intlevel2 0000  
       __end_of_spiService 00B2           ??_spiReceiveWait 0001  
