

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jun 14 14:16:09 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F8722 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     _TXREG	set	4013
    63  0000                     _RCREG	set	4014
    64  0000                     _PORTD	set	3971
    65  0000                     _TRISD	set	3989
    66  0000                     _SPBRG	set	4015
    67  0000                     _SSPBUF	set	4041
    68  0000                     _SSPSTATbits	set	4039
    69  0000                     _SSP1CON1	set	4038
    70  0000                     _SSPSTAT	set	4039
    71  0000                     _INT0IF	set	32657
    72  0000                     _INTEDG0	set	32654
    73  0000                     _PEIE	set	32662
    74  0000                     _GIE	set	32663
    75  0000                     _SSPIE	set	31979
    76  0000                     _SSPIF	set	31987
    77  0000                     _TRISB0	set	31896
    78  0000                     _TRISC6	set	31910
    79  0000                     _TRISC7	set	31911
    80  0000                     _RC1IE	set	31981
    81  0000                     _RC1IF	set	31989
    82  0000                     _WUE1	set	31729
    83  0000                     _CREN1	set	32092
    84  0000                     _SPEN1	set	32095
    85  0000                     _BRGH1	set	32098
    86  0000                     _TXEN1	set	32101
    87  0000                     _LATC0	set	31832
    88  0000                     _TRISC2	set	31906
    89  0000                     _TRISC3	set	31907
    90  0000                     _TRISC4	set	31908
    91  0000                     _TRISC5	set	31909
    92                           
    93                           ; #config settings
    94                           
    95                           	psect	cinit
    96  000124                     __pcinit:
    97                           	callstack 0
    98  000124                     start_initialization:
    99                           	callstack 0
   100  000124                     __initialization:
   101                           	callstack 0
   102                           
   103                           ; Clear objects allocated to COMRAM (3 bytes)
   104  000124  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
   105  000126  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
   106  000128  6A01               	clrf	__pbssCOMRAM& (0+255),c
   107  00012A                     end_of_initialization:
   108                           	callstack 0
   109  00012A                     __end_of__initialization:
   110                           	callstack 0
   111  00012A  9006               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   112  00012C  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   113  00012E  0100               	movlb	0
   114  000130  EF09  F000         	goto	_main	;jump to C main() function
   115                           
   116                           	psect	bssCOMRAM
   117  000001                     __pbssCOMRAM:
   118                           	callstack 0
   119  000001                     _readSerialValue:
   120                           	callstack 0
   121  000001                     	ds	1
   122  000002                     _readSPIValue:
   123                           	callstack 0
   124  000002                     	ds	1
   125  000003                     _FLAGS:
   126                           	callstack 0
   127  000003                     	ds	1
   128                           
   129                           	psect	cstackCOMRAM
   130  000004                     __pcstackCOMRAM:
   131                           	callstack 0
   132  000004                     spiWrite@dat:
   133                           	callstack 0
   134                           
   135                           ; 1 bytes @ 0x0
   136  000004                     	ds	1
   137  000005                     ??_main:
   138                           
   139                           ; 1 bytes @ 0x1
   140  000005                     	ds	1
   141                           
   142 ;;
   143 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   144 ;;
   145 ;; *************** function _main *****************
   146 ;; Defined at:
   147 ;;		line 21 in file "newmain.c"
   148 ;; Parameters:    Size  Location     Type
   149 ;;		None
   150 ;; Auto vars:     Size  Location     Type
   151 ;;		None
   152 ;; Return value:  Size  Location     Type
   153 ;;                  1    wreg      void 
   154 ;; Registers used:
   155 ;;		wreg, status,2, cstack
   156 ;; Tracked objects:
   157 ;;		On entry : 0/0
   158 ;;		On exit  : 0/0
   159 ;;		Unchanged: 0/0
   160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   163 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   164 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   165 ;;Total ram usage:        1 bytes
   166 ;; Hardware stack levels required when called: 6
   167 ;; This function calls:
   168 ;;		_buttonCallback
   169 ;;		_serialCallback
   170 ;;		_setInterrupts
   171 ;;		_setIo
   172 ;;		_setSPI
   173 ;;		_setSerial
   174 ;;		_spiWrite
   175 ;; This function is called by:
   176 ;;		Startup code after reset
   177 ;; This function uses a non-reentrant model
   178 ;;
   179                           
   180                           	psect	text0
   181  000012                     __ptext0:
   182                           	callstack 0
   183  000012                     _main:
   184                           	callstack 25
   185  000012                     
   186                           ;newmain.c: 22:     setIo();
   187  000012  EC9A  F000         	call	_setIo	;wreg free
   188  000016                     
   189                           ;newmain.c: 23:     setSPI();
   190  000016  ECBE  F000         	call	_setSPI	;wreg free
   191  00001A                     
   192                           ;newmain.c: 24:     setSerial();
   193  00001A  EC88  F000         	call	_setSerial	;wreg free
   194                           
   195                           ;newmain.c: 25:     setInterrupts();
   196  00001E  ECC1  F000         	call	_setInterrupts	;wreg free
   197  000022                     l915:
   198                           
   199                           ;newmain.c: 32:         if (FLAGS.bits.DISPLAY_READING) {
   200  000022  A203               	btfss	_FLAGS^0,1,c
   201  000024  EF16  F000         	goto	u81
   202  000028  EF18  F000         	goto	u80
   203  00002C                     u81:
   204  00002C  EF1C  F000         	goto	l921
   205  000030                     u80:
   206  000030                     
   207                           ;newmain.c: 34:             FLAGS.bits.DISPLAY_READING = 0;
   208  000030  9203               	bcf	_FLAGS^0,1,c
   209  000032                     
   210                           ;newmain.c: 36:             spiWrite(0b00001111);
   211  000032  0E0F               	movlw	15
   212  000034  ECB6  F000         	call	_spiWrite
   213  000038                     l921:
   214                           
   215                           ;newmain.c: 38:         if (FLAGS.bits.UART_RECEIVED) {
   216  000038  A403               	btfss	_FLAGS^0,2,c
   217  00003A  EF21  F000         	goto	u91
   218  00003E  EF23  F000         	goto	u90
   219  000042                     u91:
   220  000042  EF25  F000         	goto	l925
   221  000046                     u90:
   222  000046                     
   223                           ;newmain.c: 39:             serialCallback();
   224  000046  ECAA  F000         	call	_serialCallback	;wreg free
   225  00004A                     l925:
   226                           
   227                           ;newmain.c: 41:         if (FLAGS.bits.PUSHED_BUTTON) {
   228  00004A  A803               	btfss	_FLAGS^0,4,c
   229  00004C  EF2A  F000         	goto	u101
   230  000050  EF2C  F000         	goto	u100
   231  000054                     u101:
   232  000054  EF11  F000         	goto	l915
   233  000058                     u100:
   234  000058                     
   235                           ;newmain.c: 42:             if (FLAGS.bits.PREVIOUS_BUTTON_STATE != FLAGS.bits.PUSHED_BU
      +                          TTON) {
   236  000058  B803               	btfsc	_FLAGS^0,4,c
   237  00005A  EF31  F000         	goto	u111
   238  00005E  EF34  F000         	goto	u110
   239  000062                     u111:
   240  000062  0E01               	movlw	1
   241  000064  EF35  F000         	goto	u112
   242  000068                     u110:
   243  000068  0E00               	movlw	0
   244  00006A                     u112:
   245  00006A  6E05               	movwf	??_main^0,c
   246  00006C  B603               	btfsc	_FLAGS^0,3,c
   247  00006E  EF3B  F000         	goto	u121
   248  000072  EF3E  F000         	goto	u120
   249  000076                     u121:
   250  000076  0E01               	movlw	1
   251  000078  EF3F  F000         	goto	u122
   252  00007C                     u120:
   253  00007C  0E00               	movlw	0
   254  00007E                     u122:
   255  00007E  1A05               	xorwf	??_main^0,f,c
   256  000080  B4D8               	btfsc	status,2,c
   257  000082  EF45  F000         	goto	u131
   258  000086  EF47  F000         	goto	u130
   259  00008A                     u131:
   260  00008A  EF4E  F000         	goto	l933
   261  00008E                     u130:
   262  00008E                     
   263                           ;newmain.c: 43:                 FLAGS.bits.PREVIOUS_BUTTON_STATE = FLAGS.bits.PUSHED_BUT
      +                          TON;
   264  00008E  A803               	btfss	_FLAGS^0,4,c
   265  000090  D002               	bra	u145
   266  000092  8603               	bsf	_FLAGS^0,3,c
   267  000094  D001               	bra	u147
   268  000096                     u145:
   269  000096  9603               	bcf	_FLAGS^0,3,c
   270  000098                     u147:
   271  000098                     
   272                           ;newmain.c: 44:                 buttonCallback();
   273  000098  ECC4  F000         	call	_buttonCallback	;wreg free
   274  00009C                     l933:
   275                           
   276                           ;newmain.c: 46:             FLAGS.bits.PUSHED_BUTTON = 0;
   277  00009C  9803               	bcf	_FLAGS^0,4,c
   278  00009E  EF11  F000         	goto	l915
   279  0000A2  EF07  F000         	goto	start
   280  0000A6                     __end_of_main:
   281                           	callstack 0
   282                           
   283 ;; *************** function _spiWrite *****************
   284 ;; Defined at:
   285 ;;		line 30 in file "spi.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;  dat             1    wreg     unsigned char 
   288 ;; Auto vars:     Size  Location     Type
   289 ;;  dat             1    0[COMRAM] unsigned char 
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg
   294 ;; Tracked objects:
   295 ;;		On entry : 0/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   300 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   302 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   303 ;;Total ram usage:        1 bytes
   304 ;; Hardware stack levels used: 1
   305 ;; Hardware stack levels required when called: 5
   306 ;; This function calls:
   307 ;;		Nothing
   308 ;; This function is called by:
   309 ;;		_main
   310 ;; This function uses a non-reentrant model
   311 ;;
   312                           
   313                           	psect	text1
   314  00016C                     __ptext1:
   315                           	callstack 0
   316  00016C                     _spiWrite:
   317                           	callstack 25
   318                           
   319                           ;incstack = 0
   320                           ;spiWrite@dat stored from wreg
   321  00016C  6E04               	movwf	spiWrite@dat^0,c
   322  00016E                     
   323                           ;spi.c: 30: void spiWrite(char dat);spi.c: 31: {;spi.c: 32:     SSPBUF = dat;
   324  00016E  C004  FFC9         	movff	spiWrite@dat,4041	;volatile
   325  000172  0012               	return		;funcret
   326  000174                     __end_of_spiWrite:
   327                           	callstack 0
   328                           
   329 ;; *************** function _setSerial *****************
   330 ;; Defined at:
   331 ;;		line 8 in file "init.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;		None
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		wreg, status,2
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   349 ;;Total ram usage:        0 bytes
   350 ;; Hardware stack levels used: 1
   351 ;; Hardware stack levels required when called: 5
   352 ;; This function calls:
   353 ;;		Nothing
   354 ;; This function is called by:
   355 ;;		_main
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           	psect	text2
   360  000110                     __ptext2:
   361                           	callstack 0
   362  000110                     _setSerial:
   363                           	callstack 25
   364  000110                     
   365                           ;init.c: 9:     TXEN1 = 1;
   366  000110  8AAC               	bsf	4012,5,c	;volatile
   367                           
   368                           ;init.c: 10:     BRGH1 = 0;
   369  000112  94AC               	bcf	4012,2,c	;volatile
   370                           
   371                           ;init.c: 12:     SPEN1 = 1;
   372  000114  8EAB               	bsf	4011,7,c	;volatile
   373                           
   374                           ;init.c: 13:     CREN1 = 1;
   375  000116  88AB               	bsf	4011,4,c	;volatile
   376                           
   377                           ;init.c: 15:     WUE1 = 0;
   378  000118  927E               	bcf	3966,1,c	;volatile
   379  00011A                     
   380                           ;init.c: 16:     SPBRG = 0b01000000;
   381  00011A  0E40               	movlw	64
   382  00011C  6EAF               	movwf	175,c	;volatile
   383  00011E                     
   384                           ;init.c: 18:     RC1IF = 0;
   385  00011E  9A9E               	bcf	3998,5,c	;volatile
   386  000120                     
   387                           ;init.c: 19:     RC1IE = 1;
   388  000120  8A9D               	bsf	3997,5,c	;volatile
   389  000122  0012               	return		;funcret
   390  000124                     __end_of_setSerial:
   391                           	callstack 0
   392                           
   393 ;; *************** function _setSPI *****************
   394 ;; Defined at:
   395 ;;		line 35 in file "init.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;		None
   398 ;; Auto vars:     Size  Location     Type
   399 ;;		None
   400 ;; Return value:  Size  Location     Type
   401 ;;                  1    wreg      void 
   402 ;; Registers used:
   403 ;;		None
   404 ;; Tracked objects:
   405 ;;		On entry : 0/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   413 ;;Total ram usage:        0 bytes
   414 ;; Hardware stack levels used: 1
   415 ;; Hardware stack levels required when called: 5
   416 ;; This function calls:
   417 ;;		Nothing
   418 ;; This function is called by:
   419 ;;		_main
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423                           	psect	text3
   424  00017C                     __ptext3:
   425                           	callstack 0
   426  00017C                     _setSPI:
   427                           	callstack 25
   428  00017C                     
   429                           ;init.c: 36:     SSPIF = 0;
   430  00017C  969E               	bcf	3998,3,c	;volatile
   431                           
   432                           ;init.c: 37:     SSPIE = 1;
   433  00017E  869D               	bsf	3997,3,c	;volatile
   434  000180  0012               	return		;funcret
   435  000182                     __end_of_setSPI:
   436                           	callstack 0
   437                           
   438 ;; *************** function _setIo *****************
   439 ;; Defined at:
   440 ;;		line 26 in file "init.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, status,2
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   458 ;;Total ram usage:        0 bytes
   459 ;; Hardware stack levels used: 1
   460 ;; Hardware stack levels required when called: 5
   461 ;; This function calls:
   462 ;;		Nothing
   463 ;; This function is called by:
   464 ;;		_main
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468                           	psect	text4
   469  000134                     __ptext4:
   470                           	callstack 0
   471  000134                     _setIo:
   472                           	callstack 25
   473  000134                     
   474                           ;init.c: 28:     TRISD = 0x00;
   475  000134  0E00               	movlw	0
   476  000136  6E95               	movwf	149,c	;volatile
   477                           
   478                           ;init.c: 29:     PORTD = 0x00;
   479  000138  0E00               	movlw	0
   480  00013A  6E83               	movwf	131,c	;volatile
   481  00013C                     
   482                           ;init.c: 30:     TRISC7 = 1;
   483  00013C  8E94               	bsf	3988,7,c	;volatile
   484  00013E                     
   485                           ;init.c: 31:     TRISC6 = 0;
   486  00013E  9C94               	bcf	3988,6,c	;volatile
   487  000140                     
   488                           ;init.c: 32:     TRISB0=1;
   489  000140  8093               	bsf	3987,0,c	;volatile
   490  000142  0012               	return		;funcret
   491  000144                     __end_of_setIo:
   492                           	callstack 0
   493                           
   494 ;; *************** function _setInterrupts *****************
   495 ;; Defined at:
   496 ;;		line 40 in file "init.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;		None
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		None
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   514 ;;Total ram usage:        0 bytes
   515 ;; Hardware stack levels used: 1
   516 ;; Hardware stack levels required when called: 5
   517 ;; This function calls:
   518 ;;		Nothing
   519 ;; This function is called by:
   520 ;;		_main
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524                           	psect	text5
   525  000182                     __ptext5:
   526                           	callstack 0
   527  000182                     _setInterrupts:
   528                           	callstack 25
   529  000182                     
   530                           ;init.c: 41:     GIE = 1;
   531  000182  8EF2               	bsf	4082,7,c	;volatile
   532                           
   533                           ;init.c: 42:     PEIE = 1;
   534  000184  8CF2               	bsf	4082,6,c	;volatile
   535  000186  0012               	return		;funcret
   536  000188                     __end_of_setInterrupts:
   537                           	callstack 0
   538                           
   539 ;; *************** function _serialCallback *****************
   540 ;; Defined at:
   541 ;;		line 4 in file "serial.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		None
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   559 ;;Total ram usage:        0 bytes
   560 ;; Hardware stack levels used: 1
   561 ;; Hardware stack levels required when called: 5
   562 ;; This function calls:
   563 ;;		Nothing
   564 ;; This function is called by:
   565 ;;		_main
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           	psect	text6
   570  000154                     __ptext6:
   571                           	callstack 0
   572  000154                     _serialCallback:
   573                           	callstack 25
   574  000154                     
   575                           ;serial.c: 5:     readSerialValue = RCREG;
   576  000154  CFAE F001          	movff	4014,_readSerialValue	;volatile
   577                           
   578                           ;serial.c: 6:     PORTD = readSerialValue;
   579  000158  C001  FF83         	movff	_readSerialValue,3971	;volatile
   580                           
   581                           ;serial.c: 7:     TXREG = readSerialValue;
   582  00015C  C001  FFAD         	movff	_readSerialValue,4013	;volatile
   583  000160  0012               	return		;funcret
   584  000162                     __end_of_serialCallback:
   585                           	callstack 0
   586                           
   587 ;; *************** function _buttonCallback *****************
   588 ;; Defined at:
   589 ;;		line 3 in file "button.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;		None
   592 ;; Auto vars:     Size  Location     Type
   593 ;;		None
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		wreg, status,2
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   607 ;;Total ram usage:        0 bytes
   608 ;; Hardware stack levels used: 1
   609 ;; Hardware stack levels required when called: 5
   610 ;; This function calls:
   611 ;;		Nothing
   612 ;; This function is called by:
   613 ;;		_main
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           	psect	text7
   618  000188                     __ptext7:
   619                           	callstack 0
   620  000188                     _buttonCallback:
   621                           	callstack 25
   622  000188                     
   623                           ;button.c: 4:     TXREG = 0b11001100;
   624  000188  0ECC               	movlw	204
   625  00018A  6EAD               	movwf	173,c	;volatile
   626  00018C  0012               	return		;funcret
   627  00018E                     __end_of_buttonCallback:
   628                           	callstack 0
   629                           
   630 ;; *************** function _service *****************
   631 ;; Defined at:
   632 ;;		line 17 in file "newmain.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;		None
   635 ;; Auto vars:     Size  Location     Type
   636 ;;		None
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      void 
   639 ;; Registers used:
   640 ;;		wreg, status,2, cstack
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   650 ;;Total ram usage:        0 bytes
   651 ;; Hardware stack levels used: 1
   652 ;; Hardware stack levels required when called: 4
   653 ;; This function calls:
   654 ;;		_interruptService
   655 ;; This function is called by:
   656 ;;		Interrupt level 2
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	intcode
   661  000008                     __pintcode:
   662                           	callstack 0
   663  000008                     _service:
   664                           	callstack 25
   665                           
   666                           ;incstack = 0
   667  000008  8206               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   668  00000A  EDB1  F000         	call	int_func,f	;refresh shadow registers
   669                           
   670                           	psect	intcode_body
   671  000162                     __pintcode_body:
   672                           	callstack 25
   673  000162                     int_func:
   674                           	callstack 25
   675  000162  0006               	pop		; remove dummy address from shadow register refresh
   676  000164                     
   677                           ;newmain.c: 18:     interruptService();
   678  000164  ECC7  F000         	call	_interruptService	;wreg free
   679  000168  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   680  00016A  0011               	retfie		f
   681  00016C                     __end_of_service:
   682                           	callstack 0
   683                           
   684 ;; *************** function _interruptService *****************
   685 ;; Defined at:
   686 ;;		line 30 in file "interruptService.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, status,2, cstack
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   704 ;;Total ram usage:        0 bytes
   705 ;; Hardware stack levels used: 1
   706 ;; Hardware stack levels required when called: 3
   707 ;; This function calls:
   708 ;;		_processInterruptService
   709 ;; This function is called by:
   710 ;;		_service
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	text9
   715  00018E                     __ptext9:
   716                           	callstack 0
   717  00018E                     _interruptService:
   718                           	callstack 25
   719  00018E                     
   720                           ;interruptService.c: 31:     processInterruptService();
   721  00018E  EC53  F000         	call	_processInterruptService	;wreg free
   722  000192  0012               	return		;funcret
   723  000194                     __end_of_interruptService:
   724                           	callstack 0
   725                           
   726 ;; *************** function _processInterruptService *****************
   727 ;; Defined at:
   728 ;;		line 12 in file "interruptService.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;		None
   731 ;; Auto vars:     Size  Location     Type
   732 ;;		None
   733 ;; Return value:  Size  Location     Type
   734 ;;                  1    wreg      void 
   735 ;; Registers used:
   736 ;;		wreg, status,2, cstack
   737 ;; Tracked objects:
   738 ;;		On entry : 0/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   746 ;;Total ram usage:        0 bytes
   747 ;; Hardware stack levels used: 1
   748 ;; Hardware stack levels required when called: 2
   749 ;; This function calls:
   750 ;;		_spiRead
   751 ;; This function is called by:
   752 ;;		_interruptService
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           	psect	text10
   757  0000A6                     __ptext10:
   758                           	callstack 0
   759  0000A6                     _processInterruptService:
   760                           	callstack 25
   761  0000A6                     
   762                           ;interruptService.c: 13:     if (SSPIE == 1 && SSPIF == 1) {
   763  0000A6  A69D               	btfss	3997,3,c	;volatile
   764  0000A8  EF58  F000         	goto	i2u2_41
   765  0000AC  EF5A  F000         	goto	i2u2_40
   766  0000B0                     i2u2_41:
   767  0000B0  EF65  F000         	goto	i2l869
   768  0000B4                     i2u2_40:
   769  0000B4  A69E               	btfss	3998,3,c	;volatile
   770  0000B6  EF5F  F000         	goto	i2u3_41
   771  0000BA  EF61  F000         	goto	i2u3_40
   772  0000BE                     i2u3_41:
   773  0000BE  EF65  F000         	goto	i2l869
   774  0000C2                     i2u3_40:
   775  0000C2                     
   776                           ;interruptService.c: 14:         SSPIF = 0;
   777  0000C2  969E               	bcf	3998,3,c	;volatile
   778  0000C4                     
   779                           ;interruptService.c: 15:         readSPIValue = spiRead();
   780  0000C4  ECBA  F000         	call	_spiRead	;wreg free
   781  0000C8  6E02               	movwf	_readSPIValue^0,c
   782  0000CA                     i2l869:
   783                           
   784                           ;interruptService.c: 17:     if (RC1IE == 1 && RC1IF == 1) {
   785  0000CA  AA9D               	btfss	3997,5,c	;volatile
   786  0000CC  EF6A  F000         	goto	i2u4_41
   787  0000D0  EF6C  F000         	goto	i2u4_40
   788  0000D4                     i2u4_41:
   789  0000D4  EF77  F000         	goto	i2l156
   790  0000D8                     i2u4_40:
   791  0000D8  AA9E               	btfss	3998,5,c	;volatile
   792  0000DA  EF71  F000         	goto	i2u5_41
   793  0000DE  EF73  F000         	goto	i2u5_40
   794  0000E2                     i2u5_41:
   795  0000E2  EF77  F000         	goto	i2l156
   796  0000E6                     i2u5_40:
   797  0000E6                     
   798                           ;interruptService.c: 18:         RC1IF = 0;
   799  0000E6  9A9E               	bcf	3998,5,c	;volatile
   800                           
   801                           ;interruptService.c: 20:             FLAGS.bits.UART_RECEIVED = 1;
   802  0000E8  8403               	bsf	_FLAGS^0,2,c
   803                           
   804                           ;interruptService.c: 21:             readSerialValue = RCREG;
   805  0000EA  CFAE F001          	movff	4014,_readSerialValue	;volatile
   806  0000EE                     i2l156:
   807                           
   808                           ;interruptService.c: 24:     if (INTEDG0==1 && INT0IF==1){
   809  0000EE  ACF1               	btfss	4081,6,c	;volatile
   810  0000F0  EF7C  F000         	goto	i2u6_41
   811  0000F4  EF7E  F000         	goto	i2u6_40
   812  0000F8                     i2u6_41:
   813  0000F8  EF87  F000         	goto	i2l158
   814  0000FC                     i2u6_40:
   815  0000FC  A2F2               	btfss	4082,1,c	;volatile
   816  0000FE  EF83  F000         	goto	i2u7_41
   817  000102  EF85  F000         	goto	i2u7_40
   818  000106                     i2u7_41:
   819  000106  EF87  F000         	goto	i2l158
   820  00010A                     i2u7_40:
   821  00010A                     
   822                           ;interruptService.c: 25:         INT0IF=0;
   823  00010A  92F2               	bcf	4082,1,c	;volatile
   824                           
   825                           ;interruptService.c: 26:         FLAGS.bits.PUSHED_BUTTON = 1;
   826  00010C  8803               	bsf	_FLAGS^0,4,c
   827  00010E                     i2l158:
   828  00010E  0012               	return		;funcret
   829  000110                     __end_of_processInterruptService:
   830                           	callstack 0
   831                           
   832 ;; *************** function _spiRead *****************
   833 ;; Defined at:
   834 ;;		line 43 in file "spi.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;		None
   837 ;; Auto vars:     Size  Location     Type
   838 ;;		None
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      unsigned char 
   841 ;; Registers used:
   842 ;;		wreg, status,2, cstack
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;Total ram usage:        0 bytes
   853 ;; Hardware stack levels used: 1
   854 ;; Hardware stack levels required when called: 1
   855 ;; This function calls:
   856 ;;		_spiReceiveWait
   857 ;; This function is called by:
   858 ;;		_processInterruptService
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           	psect	text11
   863  000174                     __ptext11:
   864                           	callstack 0
   865  000174                     _spiRead:
   866                           	callstack 25
   867  000174                     
   868                           ;spi.c: 45:     spiReceiveWait();
   869  000174  ECA2  F000         	call	_spiReceiveWait	;wreg free
   870  000178                     
   871                           ;spi.c: 46:     return (SSPBUF);
   872  000178  50C9               	movf	201,w,c	;volatile
   873  00017A  0012               	return		;funcret
   874  00017C                     __end_of_spiRead:
   875                           	callstack 0
   876                           
   877 ;; *************** function _spiReceiveWait *****************
   878 ;; Defined at:
   879 ;;		line 26 in file "spi.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;		None
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		None
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   897 ;;Total ram usage:        0 bytes
   898 ;; Hardware stack levels used: 1
   899 ;; This function calls:
   900 ;;		Nothing
   901 ;; This function is called by:
   902 ;;		_spiRead
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	text12
   907  000144                     __ptext12:
   908                           	callstack 0
   909  000144                     _spiReceiveWait:
   910                           	callstack 25
   911  000144                     i2l65:
   912  000144  A0C7               	btfss	199,0,c	;volatile
   913  000146  EFA7  F000         	goto	i2u1_41
   914  00014A  EFA9  F000         	goto	i2u1_40
   915  00014E                     i2u1_41:
   916  00014E  EFA2  F000         	goto	i2l65
   917  000152                     i2u1_40:
   918  000152  0012               	return		;funcret
   919  000154                     __end_of_spiReceiveWait:
   920                           	callstack 0
   921  0000                     
   922                           	psect	rparam
   923  0000                     
   924                           	psect	temp
   925  000006                     btemp:
   926                           	callstack 0
   927  000006                     	ds	1
   928  0000                     int$flags	set	btemp
   929  0000                     wtemp8	set	btemp+1
   930  0000                     ttemp5	set	btemp+1
   931  0000                     ttemp6	set	btemp+4
   932  0000                     ttemp7	set	btemp+8
   933                           
   934                           	psect	idloc
   935                           
   936                           ;Config register IDLOC0 @ 0x200000
   937                           ;	unspecified, using default values
   938  200000                     	org	2097152
   939  200000  FF                 	db	255
   940                           
   941                           ;Config register IDLOC1 @ 0x200001
   942                           ;	unspecified, using default values
   943  200001                     	org	2097153
   944  200001  FF                 	db	255
   945                           
   946                           ;Config register IDLOC2 @ 0x200002
   947                           ;	unspecified, using default values
   948  200002                     	org	2097154
   949  200002  FF                 	db	255
   950                           
   951                           ;Config register IDLOC3 @ 0x200003
   952                           ;	unspecified, using default values
   953  200003                     	org	2097155
   954  200003  FF                 	db	255
   955                           
   956                           ;Config register IDLOC4 @ 0x200004
   957                           ;	unspecified, using default values
   958  200004                     	org	2097156
   959  200004  FF                 	db	255
   960                           
   961                           ;Config register IDLOC5 @ 0x200005
   962                           ;	unspecified, using default values
   963  200005                     	org	2097157
   964  200005  FF                 	db	255
   965                           
   966                           ;Config register IDLOC6 @ 0x200006
   967                           ;	unspecified, using default values
   968  200006                     	org	2097158
   969  200006  FF                 	db	255
   970                           
   971                           ;Config register IDLOC7 @ 0x200007
   972                           ;	unspecified, using default values
   973  200007                     	org	2097159
   974  200007  FF                 	db	255
   975                           
   976                           	psect	config
   977                           
   978                           ; Padding undefined space
   979  300000                     	org	3145728
   980  300000  FF                 	db	255
   981                           
   982                           ;Config register CONFIG1H @ 0x300001
   983                           ;	Oscillator Selection bits
   984                           ;	OSC = XT, XT oscillator
   985                           ;	Fail-Safe Clock Monitor Enable bit
   986                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   987                           ;	Internal/External Oscillator Switchover bit
   988                           ;	IESO = OFF, Two-Speed Start-up disabled
   989  300001                     	org	3145729
   990  300001  01                 	db	1
   991                           
   992                           ;Config register CONFIG2L @ 0x300002
   993                           ;	Power-up Timer Enable bit
   994                           ;	PWRT = OFF, PWRT disabled
   995                           ;	Brown-out Reset Enable bits
   996                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   997                           ;	Brown-out Voltage bits
   998                           ;	BORV = 3, Minimum setting
   999  300002                     	org	3145730
  1000  300002  19                 	db	25
  1001                           
  1002                           ;Config register CONFIG2H @ 0x300003
  1003                           ;	Watchdog Timer
  1004                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1005                           ;	Watchdog Timer Postscale Select bits
  1006                           ;	WDTPS = 32768, 1:32768
  1007  300003                     	org	3145731
  1008  300003  1E                 	db	30
  1009                           
  1010                           ;Config register CONFIG3L @ 0x300004
  1011                           ;	Processor Data Memory Mode Select bits
  1012                           ;	MODE = MC, Microcontroller mode
  1013                           ;	Address Bus Width Select bits
  1014                           ;	ADDRBW = ADDR20BIT, 20-bit Address Bus
  1015                           ;	Data Bus Width Select bit
  1016                           ;	DATABW = DATA16BIT, 16-bit External Bus mode
  1017                           ;	External Bus Data Wait Enable bit
  1018                           ;	WAIT = OFF, Wait selections are unavailable for table reads and table writes
  1019  300004                     	org	3145732
  1020  300004  F3                 	db	243
  1021                           
  1022                           ;Config register CONFIG3H @ 0x300005
  1023                           ;	CCP2 MUX bit
  1024                           ;	CCP2MX = PORTC, ECCP2 input/output is multiplexed with RC1
  1025                           ;	ECCP MUX bit
  1026                           ;	ECCPMX = PORTE, ECCP1/3 (P1B/P1C/P3B/P3C) are multiplexed onto RE6, RE5, RE4 and RE3 r
      +                          espectively
  1027                           ;	Low-Power Timer1 Oscillator Enable bit
  1028                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1029                           ;	MCLR Pin Enable bit
  1030                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
  1031  300005                     	org	3145733
  1032  300005  83                 	db	131
  1033                           
  1034                           ;Config register CONFIG4L @ 0x300006
  1035                           ;	Stack Full/Underflow Reset Enable bit
  1036                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1037                           ;	Single-Supply ICSP Enable bit
  1038                           ;	LVP = OFF, Single-Supply ICSP disabled
  1039                           ;	Boot Block Size Select bits
  1040                           ;	BBSIZ = BB2K, 1K word (2 Kbytes) Boot Block size
  1041                           ;	Extended Instruction Set Enable bit
  1042                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1043                           ;	Background Debugger Enable bit
  1044                           ;	DEBUG = 0x1, unprogrammed default
  1045  300006                     	org	3145734
  1046  300006  81                 	db	129
  1047                           
  1048                           ; Padding undefined space
  1049  300007                     	org	3145735
  1050  300007  FF                 	db	255
  1051                           
  1052                           ;Config register CONFIG5L @ 0x300008
  1053                           ;	Code Protection bit Block 0
  1054                           ;	CP0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not code-protected
  1055                           ;	Code Protection bit Block 1
  1056                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1057                           ;	Code Protection bit Block 2
  1058                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1059                           ;	Code Protection bit Block 3
  1060                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1061                           ;	Code Protection bit Block 4
  1062                           ;	CP4 = OFF, Block 4 (010000-013FFFh) not code-protected
  1063                           ;	Code Protection bit Block 5
  1064                           ;	CP5 = OFF, Block 5 (014000-017FFFh) not code-protected
  1065                           ;	Code Protection bit Block 6
  1066                           ;	CP6 = OFF, Block 6 (01BFFF-018000h) not code-protected
  1067                           ;	Code Protection bit Block 7
  1068                           ;	CP7 = OFF, Block 7 (01C000-01FFFFh) not code-protected
  1069  300008                     	org	3145736
  1070  300008  FF                 	db	255
  1071                           
  1072                           ;Config register CONFIG5H @ 0x300009
  1073                           ;	Boot Block Code Protection bit
  1074                           ;	CPB = OFF, Boot Block (000000-0007FFh) not code-protected
  1075                           ;	Data EEPROM Code Protection bit
  1076                           ;	CPD = OFF, Data EEPROM not code-protected
  1077  300009                     	org	3145737
  1078  300009  C0                 	db	192
  1079                           
  1080                           ;Config register CONFIG6L @ 0x30000A
  1081                           ;	Write Protection bit Block 0
  1082                           ;	WRT0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not write-protected
  1083                           ;	Write Protection bit Block 1
  1084                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1085                           ;	Write Protection bit Block 2
  1086                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1087                           ;	Write Protection bit Block 3
  1088                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1089                           ;	Write Protection bit Block 4
  1090                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  1091                           ;	Write Protection bit Block 5
  1092                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  1093                           ;	Write Protection bit Block 6
  1094                           ;	WRT6 = OFF, Block 6 (01BFFF-018000h) not write-protected
  1095                           ;	Write Protection bit Block 7
  1096                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  1097  30000A                     	org	3145738
  1098  30000A  FF                 	db	255
  1099                           
  1100                           ;Config register CONFIG6H @ 0x30000B
  1101                           ;	Configuration Register Write Protection bit
  1102                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1103                           ;	Boot Block Write Protection bit
  1104                           ;	WRTB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not write-protected
  1105                           ;	Data EEPROM Write Protection bit
  1106                           ;	WRTD = OFF, Data EEPROM not write-protected
  1107  30000B                     	org	3145739
  1108  30000B  E0                 	db	224
  1109                           
  1110                           ;Config register CONFIG7L @ 0x30000C
  1111                           ;	Table Read Protection bit Block 0
  1112                           ;	EBTR0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not protected from table reads
      +                           executed in other blocks
  1113                           ;	Table Read Protection bit Block 1
  1114                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1115                           ;	Table Read Protection bit Block 2
  1116                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1117                           ;	Table Read Protection bit Block 3
  1118                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1119                           ;	Table Read Protection bit Block 4
  1120                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  1121                           ;	Table Read Protection bit Block 5
  1122                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  1123                           ;	Table Read Protection bit Block 6
  1124                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  1125                           ;	Table Read Protection bit Block 7
  1126                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  1127  30000C                     	org	3145740
  1128  30000C  FF                 	db	255
  1129                           
  1130                           ;Config register CONFIG7H @ 0x30000D
  1131                           ;	Boot Block Table Read Protection bit
  1132                           ;	EBTRB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not protected from table re
      +                          ads executed in other blocks
  1133  30000D                     	org	3145741
  1134  30000D  40                 	db	64
  1135                           tosu	equ	0xFFF
  1136                           tosh	equ	0xFFE
  1137                           tosl	equ	0xFFD
  1138                           stkptr	equ	0xFFC
  1139                           pclatu	equ	0xFFB
  1140                           pclath	equ	0xFFA
  1141                           pcl	equ	0xFF9
  1142                           tblptru	equ	0xFF8
  1143                           tblptrh	equ	0xFF7
  1144                           tblptrl	equ	0xFF6
  1145                           tablat	equ	0xFF5
  1146                           prodh	equ	0xFF4
  1147                           prodl	equ	0xFF3
  1148                           indf0	equ	0xFEF
  1149                           postinc0	equ	0xFEE
  1150                           postdec0	equ	0xFED
  1151                           preinc0	equ	0xFEC
  1152                           plusw0	equ	0xFEB
  1153                           fsr0h	equ	0xFEA
  1154                           fsr0l	equ	0xFE9
  1155                           wreg	equ	0xFE8
  1156                           indf1	equ	0xFE7
  1157                           postinc1	equ	0xFE6
  1158                           postdec1	equ	0xFE5
  1159                           preinc1	equ	0xFE4
  1160                           plusw1	equ	0xFE3
  1161                           fsr1h	equ	0xFE2
  1162                           fsr1l	equ	0xFE1
  1163                           bsr	equ	0xFE0
  1164                           indf2	equ	0xFDF
  1165                           postinc2	equ	0xFDE
  1166                           postdec2	equ	0xFDD
  1167                           preinc2	equ	0xFDC
  1168                           plusw2	equ	0xFDB
  1169                           fsr2h	equ	0xFDA
  1170                           fsr2l	equ	0xFD9
  1171                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      2       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_spiWrite

Critical Paths under _service in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _service in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _service in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _service in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _service in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _service in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _service in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _service in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _service in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _service in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _service in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _service in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _service in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _service in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _service in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _service in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _service in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      15
                                              1 COMRAM     1     1      0
                     _buttonCallback
                     _serialCallback
                      _setInterrupts
                              _setIo
                             _setSPI
                          _setSerial
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setSerial                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSPI                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setIo                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setInterrupts                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _serialCallback                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttonCallback                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _service                                              0     0      0       0
                   _interruptService
 ---------------------------------------------------------------------------------
 (3) _interruptService                                     0     0      0       0
            _processInterruptService
 ---------------------------------------------------------------------------------
 (4) _processInterruptService                              0     0      0       0
                            _spiRead
 ---------------------------------------------------------------------------------
 (5) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (6) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _buttonCallback
   _serialCallback
   _setInterrupts
   _setIo
   _setSPI
   _setSerial
   _spiWrite

 _service (ROOT)
   _interruptService
     _processInterruptService
       _spiRead
         _spiReceiveWait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      2       5       1        5.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       5      32        0.0%
DATA                 0      0       5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jun 14 14:16:09 2021

        ?_processInterruptService 0004                       _SSPSTATbits 000FC7  
                              l71 0172                                u80 0030  
                              u81 002C                                u90 0046  
                              u91 0042                               l121 0142  
                             l124 0180                               l118 0122  
                             l127 0186                               l172 0160  
                             l177 018C                               l901 016E  
                             l903 0154                               l911 0016  
                             l905 0188                               l921 0038  
                             l913 001A                               l931 0098  
                             l923 0046                               l915 0022  
                             l933 009C                               l925 004A  
                             l917 0030                               l909 0012  
                             l927 0058                               l919 0032  
                             l881 0134                               l929 008E  
                             l883 013C                               l891 0110  
                             l885 013E                               l893 011A  
                             l887 0140                               l895 011E  
                             l889 017C                               l897 0120  
                             l899 0182                               _GIE 007F97  
                             u100 0058                               u101 0054  
                             u110 0068                               u111 0062  
                             u120 007C                               u112 006A  
                             u121 0076                               u130 008E  
                             u122 007E                               u131 008A  
                             u145 0096                               u147 0098  
                            _PEIE 007F96                              i2l27 0168  
                            i2l65 0144                              i2l68 0152  
                            i2l79 017A                              _WUE1 007BF1  
                            _main 0012                              btemp 0006  
                            start 000E                      ___param_bank 000000  
        __end_of_interruptService 0194                             ?_main 0004  
                           _BRGH1 007D62                             _CREN1 007D5C  
                           _FLAGS 0003                             _LATC0 007C58  
                           _RC1IE 007CED                             _RC1IF 007CF5  
                           i2l161 0192                             i2l156 00EE  
                           i2l158 010E                             i2l907 0164  
                           i2l853 0144                             i2l861 00A6  
                           i2l855 0174                             i2l871 00D8  
                           i2l863 00B4                             i2l857 0178  
                           i2l873 00E6                             i2l865 00C2  
                           i2l875 00FC                             i2l867 00C4  
                           i2l877 010A                             i2l869 00CA  
                           i2l879 018E                             _RCREG 000FAE  
                           _SPEN1 007D5F                             _SPBRG 000FAF  
                           _PORTD 000F83                             _TRISD 000F95  
                           _SSPIE 007CEB                             _SSPIF 007CF3  
                           _TXEN1 007D65                             _TXREG 000FAD  
                           _setIo 0134                   __end_of_spiRead 017C  
                 __end_of_service 016C                             ttemp5 0007  
                           ttemp6 000A                             ttemp7 000E  
                           status 000FD8             __end_of_setInterrupts 0188  
                           wtemp8 0007                   __initialization 0124  
                    __end_of_main 00A6                   _readSerialValue 0001  
                          ??_main 0005                     __activetblptr 000000  
                          ?_setIo 0004                            _INT0IF 007F91  
                          i2u1_40 0152                            i2u1_41 014E  
                          i2u2_40 00B4                            i2u2_41 00B0  
                          i2u3_40 00C2                            i2u3_41 00BE  
                          i2u4_40 00D8                            i2u4_41 00D4  
                          i2u5_40 00E6                            i2u5_41 00E2  
                          i2u6_40 00FC                            i2u6_41 00F8  
                          i2u7_40 010A                            i2u7_41 0106  
                          _TRISB0 007C98                            _TRISC2 007CA2  
                          _TRISC3 007CA3                            _TRISC4 007CA4  
                          _TRISC5 007CA5                            _TRISC6 007CA6  
                          _TRISC7 007CA7                            _SSPBUF 000FC9  
                          _setSPI 017C           __size_of_serialCallback 000E  
                          isa$std 000001                  __end_of_spiWrite 0174  
                       ??_spiRead 0004                         ??_service 0004  
                      __accesstop 0060           __end_of__initialization 012A  
                   ___rparam_used 000001                    __pcstackCOMRAM 0004  
                   __end_of_setIo 0144  __size_of_processInterruptService 006A  
                         ??_setIo 0004                 ?_interruptService 0004  
         __size_of_spiReceiveWait 0010                __size_of_setSerial 0014  
                         ?_setSPI 0004                ??_interruptService 0004  
                         _INTEDG0 007F8E                           _SSPSTAT 000FC7  
         __size_of_buttonCallback 0006                           __Hparam 0000  
                         __Lparam 0000                         ?_spiWrite 0004  
                  _serialCallback 0154                           __pcinit 0124  
                 __size_of_setSPI 0006                           __ramtop 1000  
                         __ptext0 0012                           __ptext1 016C  
                         __ptext2 0110                           __ptext3 017C  
                         __ptext4 0134                           __ptext5 0182  
                         __ptext6 0154                           __ptext7 0188  
                         __ptext9 018E                           _spiRead 0174  
                         _service 0008                    __pintcode_body 0162  
            end_of_initialization 012A                 __end_of_setSerial 0124  
                         int_func 0162                        ??_spiWrite 0004  
          __end_of_serialCallback 0162            __size_of_setInterrupts 0006  
         _processInterruptService 00A6                       spiWrite@dat 0004  
                 ?_serialCallback 0004                    _spiReceiveWait 0144  
                  __end_of_setSPI 0182               start_initialization 0124  
                  _buttonCallback 0188                     _setInterrupts 0182  
                    _readSPIValue 0002            __end_of_spiReceiveWait 0154  
                        ??_setSPI 0004         ??_processInterruptService 0004  
                     __pbssCOMRAM 0001            __end_of_buttonCallback 018E  
       __size_of_interruptService 0006                    ?_setInterrupts 0004  
                 ?_spiReceiveWait 0004                         __pintcode 0008  
               __size_of_spiWrite 0008                          ?_spiRead 0004  
                 ?_buttonCallback 0004                          ?_service 0004  
                  __size_of_setIo 0010   __end_of_processInterruptService 0110  
                       _setSerial 0110                          _SSP1CON1 000FC6  
                 ??_setInterrupts 0004                  ??_serialCallback 0004  
                      ?_setSerial 0004                          __Hrparam 0000  
                        __Lrparam 0000                  _interruptService 018E  
                        __ptext10 00A6                          __ptext11 0174  
                        __ptext12 0144                  __size_of_spiRead 0008  
                __size_of_service 0164                     __size_of_main 0094  
                        isa$xinst 000000                          _spiWrite 016C  
                        int$flags 0006                          intlevel2 0000  
                ??_spiReceiveWait 0004                       ??_setSerial 0004  
                ??_buttonCallback 0004  
