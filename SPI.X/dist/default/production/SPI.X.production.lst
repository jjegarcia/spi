

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon May 24 22:15:56 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F8722 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     _TRISD	set	3989
    60  0000                     _SSPBUF	set	4041
    61  0000                     _SSPSTATbits	set	4039
    62  0000                     _SSP1CON1	set	4038
    63  0000                     _SSPSTAT	set	4039
    64  0000                     _PORTD	set	3971
    65  0000                     _SSPIE	set	31979
    66  0000                     _SSPIF	set	31987
    67  0000                     _PEIE	set	32662
    68  0000                     _GIE	set	32663
    69  0000                     _RC0	set	31760
    70  0000                     _TRISC0	set	31904
    71  0000                     _TRISC3	set	31907
    72  0000                     _TRISC5	set	31909
    73                           
    74                           ; #config settings
    75                           
    76                           	psect	cinit
    77  0000A6                     __pcinit:
    78                           	callstack 0
    79  0000A6                     start_initialization:
    80                           	callstack 0
    81  0000A6                     __initialization:
    82                           	callstack 0
    83                           
    84                           ; Clear objects allocated to COMRAM (2 bytes)
    85  0000A6  6A06               	clrf	(__pbssCOMRAM+1)& (0+255),c
    86  0000A8  6A05               	clrf	__pbssCOMRAM& (0+255),c
    87  0000AA                     end_of_initialization:
    88                           	callstack 0
    89  0000AA                     __end_of__initialization:
    90                           	callstack 0
    91  0000AA  9007               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    92  0000AC  9207               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    93  0000AE  0100               	movlb	0
    94  0000B0  EF09  F000         	goto	_main	;jump to C main() function
    95                           
    96                           	psect	bssCOMRAM
    97  000005                     __pbssCOMRAM:
    98                           	callstack 0
    99  000005                     _readValue:
   100                           	callstack 0
   101  000005                     	ds	1
   102  000006                     _FLAGS:
   103                           	callstack 0
   104  000006                     	ds	1
   105                           
   106                           	psect	cstackCOMRAM
   107  000001                     __pcstackCOMRAM:
   108                           	callstack 0
   109  000001                     spiInit@sDataSample:
   110                           	callstack 0
   111  000001                     spiWrite@dat:
   112                           	callstack 0
   113                           
   114                           ; 1 bytes @ 0x0
   115  000001                     	ds	1
   116  000002                     spiInit@sClockIdle:
   117                           	callstack 0
   118                           
   119                           ; 1 bytes @ 0x1
   120  000002                     	ds	1
   121  000003                     spiInit@sTransmitEdge:
   122                           	callstack 0
   123                           
   124                           ; 1 bytes @ 0x2
   125  000003                     	ds	1
   126  000004                     spiInit@sType:
   127                           	callstack 0
   128                           
   129                           ; 1 bytes @ 0x3
   130  000004                     	ds	1
   131  000005                     
   132                           ; 1 bytes @ 0x4
   133 ;;
   134 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   135 ;;
   136 ;; *************** function _main *****************
   137 ;; Defined at:
   138 ;;		line 19 in file "newmain.c"
   139 ;; Parameters:    Size  Location     Type
   140 ;;		None
   141 ;; Auto vars:     Size  Location     Type
   142 ;;		None
   143 ;; Return value:  Size  Location     Type
   144 ;;                  1    wreg      void 
   145 ;; Registers used:
   146 ;;		wreg, status,2, status,0, cstack
   147 ;; Tracked objects:
   148 ;;		On entry : 0/0
   149 ;;		On exit  : 0/0
   150 ;;		Unchanged: 0/0
   151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   156 ;;Total ram usage:        0 bytes
   157 ;; Hardware stack levels required when called: 6
   158 ;; This function calls:
   159 ;;		_setInterrupts
   160 ;;		_setIo
   161 ;;		_spiInit
   162 ;;		_spiWrite
   163 ;; This function is called by:
   164 ;;		Startup code after reset
   165 ;; This function uses a non-reentrant model
   166 ;;
   167                           
   168                           	psect	text0
   169  000012                     __ptext0:
   170                           	callstack 0
   171  000012                     _main:
   172                           	callstack 25
   173  000012                     
   174                           ;newmain.c: 20:     setIo();
   175  000012  EC5A  F000         	call	_setIo	;wreg free
   176  000016                     
   177                           ;newmain.c: 21:     setInterrupts();
   178  000016  EC5F  F000         	call	_setInterrupts	;wreg free
   179  00001A                     
   180                           ;newmain.c: 23:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   181  00001A  0E00               	movlw	0
   182  00001C  6E01               	movwf	spiInit@sDataSample^0,c
   183  00001E  0E00               	movlw	0
   184  000020  6E02               	movwf	spiInit@sClockIdle^0,c
   185  000022  0E00               	movlw	0
   186  000024  6E03               	movwf	spiInit@sTransmitEdge^0,c
   187  000026  0E24               	movlw	36
   188  000028  EC27  F000         	call	_spiInit
   189  00002C                     l859:
   190                           
   191                           ;newmain.c: 27:         if (FLAGS.ByteBits.DISPLAY_READING) {
   192  00002C  A206               	btfss	_FLAGS^0,1,c
   193  00002E  EF1B  F000         	goto	u61
   194  000032  EF1D  F000         	goto	u60
   195  000036                     u61:
   196  000036  EF16  F000         	goto	l859
   197  00003A                     u60:
   198  00003A                     
   199                           ;newmain.c: 28:             PORTD = readValue;
   200  00003A  0E00               	movlw	0
   201  00003C  6E83               	movwf	131,c	;volatile
   202  00003E                     
   203                           ;newmain.c: 29:             FLAGS.ByteBits.DISPLAY_READING = 0;
   204  00003E  9206               	bcf	_FLAGS^0,1,c
   205  000040                     
   206                           ;newmain.c: 31:                         spiWrite(0b00001111);
   207  000040  0E0F               	movlw	15
   208  000042  EC69  F000         	call	_spiWrite
   209  000046  EF16  F000         	goto	l859
   210  00004A  EF07  F000         	goto	start
   211  00004E                     __end_of_main:
   212                           	callstack 0
   213                           
   214 ;; *************** function _spiWrite *****************
   215 ;; Defined at:
   216 ;;		line 30 in file "spi.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;  dat             1    wreg     unsigned char 
   219 ;; Auto vars:     Size  Location     Type
   220 ;;  dat             1    0[COMRAM] unsigned char 
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg
   225 ;; Tracked objects:
   226 ;;		On entry : 0/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   231 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   233 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   234 ;;Total ram usage:        1 bytes
   235 ;; Hardware stack levels used: 1
   236 ;; Hardware stack levels required when called: 5
   237 ;; This function calls:
   238 ;;		Nothing
   239 ;; This function is called by:
   240 ;;		_main
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244                           	psect	text1
   245  0000D2                     __ptext1:
   246                           	callstack 0
   247  0000D2                     _spiWrite:
   248                           	callstack 25
   249                           
   250                           ;incstack = 0
   251                           ;spiWrite@dat stored from wreg
   252  0000D2  6E01               	movwf	spiWrite@dat^0,c
   253  0000D4                     
   254                           ;spi.c: 30: void spiWrite(char dat);spi.c: 31: {;spi.c: 32:     SSPBUF = dat;
   255  0000D4  C001  FFC9         	movff	spiWrite@dat,4041	;volatile
   256  0000D8  0012               	return		;funcret
   257  0000DA                     __end_of_spiWrite:
   258                           	callstack 0
   259                           
   260 ;; *************** function _spiInit *****************
   261 ;; Defined at:
   262 ;;		line 8 in file "spi.c"
   263 ;; Parameters:    Size  Location     Type
   264 ;;  sType           1    wreg     enum E4544
   265 ;;  sDataSample     1    0[COMRAM] enum E4552
   266 ;;  sClockIdle      1    1[COMRAM] enum E4556
   267 ;;  sTransmitEdg    1    2[COMRAM] enum E4560
   268 ;; Auto vars:     Size  Location     Type
   269 ;;  sType           1    3[COMRAM] enum E4544
   270 ;; Return value:  Size  Location     Type
   271 ;;                  1    wreg      void 
   272 ;; Registers used:
   273 ;;		wreg, status,2, status,0
   274 ;; Tracked objects:
   275 ;;		On entry : 0/0
   276 ;;		On exit  : 0/0
   277 ;;		Unchanged: 0/0
   278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   279 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   280 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   282 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   283 ;;Total ram usage:        4 bytes
   284 ;; Hardware stack levels used: 1
   285 ;; Hardware stack levels required when called: 5
   286 ;; This function calls:
   287 ;;		Nothing
   288 ;; This function is called by:
   289 ;;		_main
   290 ;; This function uses a non-reentrant model
   291 ;;
   292                           
   293                           	psect	text2
   294  00004E                     __ptext2:
   295                           	callstack 0
   296  00004E                     _spiInit:
   297                           	callstack 25
   298                           
   299                           ;incstack = 0
   300                           ;spiInit@sType stored from wreg
   301  00004E  6E04               	movwf	spiInit@sType^0,c
   302  000050                     
   303                           ;spi.c: 9:     TRISC5 = 0;
   304  000050  9A94               	bcf	3988,5,c	;volatile
   305  000052                     
   306                           ;spi.c: 11:     if (sType & 0b00000100)
   307  000052  A404               	btfss	spiInit@sType^0,2,c
   308  000054  EF2E  F000         	goto	u51
   309  000058  EF30  F000         	goto	u50
   310  00005C                     u51:
   311  00005C  EF37  F000         	goto	l845
   312  000060                     u50:
   313  000060                     
   314                           ;spi.c: 12:     {;spi.c: 13:         SSPSTAT = sTransmitEdge;
   315  000060  C003  FFC7         	movff	spiInit@sTransmitEdge,4039	;volatile
   316                           
   317                           ;spi.c: 14:         TRISC3 = 1;
   318  000064  8694               	bsf	3988,3,c	;volatile
   319                           
   320                           ;spi.c: 15:         TRISC0 = 0;
   321  000066  9094               	bcf	3988,0,c	;volatile
   322                           
   323                           ;spi.c: 16:         RC0 = 1;
   324  000068  8082               	bsf	3970,0,c	;volatile
   325                           
   326                           ;spi.c: 17:     } else
   327  00006A  EF3C  F000         	goto	l851
   328  00006E                     l845:
   329                           
   330                           ;spi.c: 18:     {;spi.c: 19:         SSPSTAT = sDataSample | sTransmitEdge;
   331  00006E  5001               	movf	spiInit@sDataSample^0,w,c
   332  000070  1003               	iorwf	spiInit@sTransmitEdge^0,w,c
   333  000072  6EC7               	movwf	199,c	;volatile
   334  000074                     
   335                           ;spi.c: 20:         TRISC3 = 0;
   336  000074  9694               	bcf	3988,3,c	;volatile
   337  000076                     
   338                           ;spi.c: 21:         TRISC0 = 1;
   339  000076  8094               	bsf	3988,0,c	;volatile
   340  000078                     l851:
   341                           
   342                           ;spi.c: 23:     SSP1CON1 = 0b00100101;
   343  000078  0E25               	movlw	37
   344  00007A  6EC6               	movwf	198,c	;volatile
   345  00007C  0012               	return		;funcret
   346  00007E                     __end_of_spiInit:
   347                           	callstack 0
   348                           
   349 ;; *************** function _setIo *****************
   350 ;; Defined at:
   351 ;;		line 8 in file "init.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;		None
   354 ;; Auto vars:     Size  Location     Type
   355 ;;		None
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, status,2
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   369 ;;Total ram usage:        0 bytes
   370 ;; Hardware stack levels used: 1
   371 ;; Hardware stack levels required when called: 5
   372 ;; This function calls:
   373 ;;		Nothing
   374 ;; This function is called by:
   375 ;;		_main
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379                           	psect	text3
   380  0000B4                     __ptext3:
   381                           	callstack 0
   382  0000B4                     _setIo:
   383                           	callstack 25
   384  0000B4                     
   385                           ;init.c: 10:     TRISD = 0x00;
   386  0000B4  0E00               	movlw	0
   387  0000B6  6E95               	movwf	149,c	;volatile
   388                           
   389                           ;init.c: 11:     PORTD = 0x00;
   390  0000B8  0E00               	movlw	0
   391  0000BA  6E83               	movwf	131,c	;volatile
   392  0000BC  0012               	return		;funcret
   393  0000BE                     __end_of_setIo:
   394                           	callstack 0
   395                           
   396 ;; *************** function _setInterrupts *****************
   397 ;; Defined at:
   398 ;;		line 14 in file "init.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;		None
   401 ;; Auto vars:     Size  Location     Type
   402 ;;		None
   403 ;; Return value:  Size  Location     Type
   404 ;;                  1    wreg      void 
   405 ;; Registers used:
   406 ;;		None
   407 ;; Tracked objects:
   408 ;;		On entry : 0/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   416 ;;Total ram usage:        0 bytes
   417 ;; Hardware stack levels used: 1
   418 ;; Hardware stack levels required when called: 5
   419 ;; This function calls:
   420 ;;		Nothing
   421 ;; This function is called by:
   422 ;;		_main
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426                           	psect	text4
   427  0000BE                     __ptext4:
   428                           	callstack 0
   429  0000BE                     _setInterrupts:
   430                           	callstack 25
   431  0000BE                     
   432                           ;init.c: 15:     GIE = 1;
   433  0000BE  8EF2               	bsf	4082,7,c	;volatile
   434                           
   435                           ;init.c: 16:     PEIE = 1;
   436  0000C0  8CF2               	bsf	4082,6,c	;volatile
   437                           
   438                           ;init.c: 17:     SSPIF = 0;
   439  0000C2  969E               	bcf	3998,3,c	;volatile
   440                           
   441                           ;init.c: 18:     SSPIE = 1;
   442  0000C4  869D               	bsf	3997,3,c	;volatile
   443  0000C6  0012               	return		;funcret
   444  0000C8                     __end_of_setInterrupts:
   445                           	callstack 0
   446                           
   447 ;; *************** function _service *****************
   448 ;; Defined at:
   449 ;;		line 15 in file "newmain.c"
   450 ;; Parameters:    Size  Location     Type
   451 ;;		None
   452 ;; Auto vars:     Size  Location     Type
   453 ;;		None
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      void 
   456 ;; Registers used:
   457 ;;		wreg, status,2, cstack
   458 ;; Tracked objects:
   459 ;;		On entry : 0/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   467 ;;Total ram usage:        0 bytes
   468 ;; Hardware stack levels used: 1
   469 ;; Hardware stack levels required when called: 4
   470 ;; This function calls:
   471 ;;		_interruptService
   472 ;; This function is called by:
   473 ;;		Interrupt level 2
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           	psect	intcode
   478  000008                     __pintcode:
   479                           	callstack 0
   480  000008                     _service:
   481                           	callstack 25
   482                           
   483                           ;incstack = 0
   484  000008  8207               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   485  00000A  ED64  F000         	call	int_func,f	;refresh shadow registers
   486                           
   487                           	psect	intcode_body
   488  0000C8                     __pintcode_body:
   489                           	callstack 25
   490  0000C8                     int_func:
   491                           	callstack 25
   492  0000C8  0006               	pop		; remove dummy address from shadow register refresh
   493  0000CA                     
   494                           ;newmain.c: 16:     interruptService();
   495  0000CA  EC71  F000         	call	_interruptService	;wreg free
   496  0000CE  9207               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   497  0000D0  0011               	retfie		f
   498  0000D2                     __end_of_service:
   499                           	callstack 0
   500                           
   501 ;; *************** function _interruptService *****************
   502 ;; Defined at:
   503 ;;		line 11 in file "interruptService.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;		None
   506 ;; Auto vars:     Size  Location     Type
   507 ;;		None
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, status,2, cstack
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   521 ;;Total ram usage:        0 bytes
   522 ;; Hardware stack levels used: 1
   523 ;; Hardware stack levels required when called: 3
   524 ;; This function calls:
   525 ;;		_spiService
   526 ;; This function is called by:
   527 ;;		_service
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           	psect	text6
   532  0000E2                     __ptext6:
   533                           	callstack 0
   534  0000E2                     _interruptService:
   535                           	callstack 25
   536  0000E2                     
   537                           ;interruptService.c: 12:     spiService();
   538  0000E2  EC3F  F000         	call	_spiService	;wreg free
   539  0000E6  0012               	return		;funcret
   540  0000E8                     __end_of_interruptService:
   541                           	callstack 0
   542                           
   543 ;; *************** function _spiService *****************
   544 ;; Defined at:
   545 ;;		line 15 in file "interruptService.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;		None
   548 ;; Auto vars:     Size  Location     Type
   549 ;;		None
   550 ;; Return value:  Size  Location     Type
   551 ;;                  1    wreg      void 
   552 ;; Registers used:
   553 ;;		wreg, status,2, cstack
   554 ;; Tracked objects:
   555 ;;		On entry : 0/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   563 ;;Total ram usage:        0 bytes
   564 ;; Hardware stack levels used: 1
   565 ;; Hardware stack levels required when called: 2
   566 ;; This function calls:
   567 ;;		_spiRead
   568 ;; This function is called by:
   569 ;;		_interruptService
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573                           	psect	text7
   574  00007E                     __ptext7:
   575                           	callstack 0
   576  00007E                     _spiService:
   577                           	callstack 25
   578  00007E                     
   579                           ;interruptService.c: 16:     if (SSPIF == 1) {
   580  00007E  A69E               	btfss	3998,3,c	;volatile
   581  000080  EF44  F000         	goto	i2u2_41
   582  000084  EF46  F000         	goto	i2u2_40
   583  000088                     i2u2_41:
   584  000088  EF4A  F000         	goto	i2l105
   585  00008C                     i2u2_40:
   586  00008C                     
   587                           ;interruptService.c: 17:         SSPIF = 0;
   588  00008C  969E               	bcf	3998,3,c	;volatile
   589  00008E                     
   590                           ;interruptService.c: 18:         PORTD= spiRead();
   591  00008E  EC6D  F000         	call	_spiRead	;wreg free
   592  000092  6E83               	movwf	131,c	;volatile
   593  000094                     i2l105:
   594  000094  0012               	return		;funcret
   595  000096                     __end_of_spiService:
   596                           	callstack 0
   597                           
   598 ;; *************** function _spiRead *****************
   599 ;; Defined at:
   600 ;;		line 43 in file "spi.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      unsigned char 
   607 ;; Registers used:
   608 ;;		wreg, status,2, cstack
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;Total ram usage:        0 bytes
   619 ;; Hardware stack levels used: 1
   620 ;; Hardware stack levels required when called: 1
   621 ;; This function calls:
   622 ;;		_spiReceiveWait
   623 ;; This function is called by:
   624 ;;		_spiService
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           	psect	text8
   629  0000DA                     __ptext8:
   630                           	callstack 0
   631  0000DA                     _spiRead:
   632                           	callstack 25
   633  0000DA                     
   634                           ;spi.c: 45:     spiReceiveWait();
   635  0000DA  EC4B  F000         	call	_spiReceiveWait	;wreg free
   636  0000DE                     
   637                           ;spi.c: 46:     return (SSPBUF);
   638  0000DE  50C9               	movf	201,w,c	;volatile
   639  0000E0  0012               	return		;funcret
   640  0000E2                     __end_of_spiRead:
   641                           	callstack 0
   642                           
   643 ;; *************** function _spiReceiveWait *****************
   644 ;; Defined at:
   645 ;;		line 26 in file "spi.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;		None
   648 ;; Auto vars:     Size  Location     Type
   649 ;;		None
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		None
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   663 ;;Total ram usage:        0 bytes
   664 ;; Hardware stack levels used: 1
   665 ;; This function calls:
   666 ;;		Nothing
   667 ;; This function is called by:
   668 ;;		_spiRead
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672                           	psect	text9
   673  000096                     __ptext9:
   674                           	callstack 0
   675  000096                     _spiReceiveWait:
   676                           	callstack 25
   677  000096                     i2l54:
   678  000096  A0C7               	btfss	199,0,c	;volatile
   679  000098  EF50  F000         	goto	i2u1_41
   680  00009C  EF52  F000         	goto	i2u1_40
   681  0000A0                     i2u1_41:
   682  0000A0  EF4B  F000         	goto	i2l54
   683  0000A4                     i2u1_40:
   684  0000A4  0012               	return		;funcret
   685  0000A6                     __end_of_spiReceiveWait:
   686                           	callstack 0
   687  0000                     
   688                           	psect	rparam
   689  0000                     
   690                           	psect	temp
   691  000007                     btemp:
   692                           	callstack 0
   693  000007                     	ds	1
   694  0000                     int$flags	set	btemp
   695  0000                     wtemp8	set	btemp+1
   696  0000                     ttemp5	set	btemp+1
   697  0000                     ttemp6	set	btemp+4
   698  0000                     ttemp7	set	btemp+8
   699                           
   700                           	psect	idloc
   701                           
   702                           ;Config register IDLOC0 @ 0x200000
   703                           ;	unspecified, using default values
   704  200000                     	org	2097152
   705  200000  FF                 	db	255
   706                           
   707                           ;Config register IDLOC1 @ 0x200001
   708                           ;	unspecified, using default values
   709  200001                     	org	2097153
   710  200001  FF                 	db	255
   711                           
   712                           ;Config register IDLOC2 @ 0x200002
   713                           ;	unspecified, using default values
   714  200002                     	org	2097154
   715  200002  FF                 	db	255
   716                           
   717                           ;Config register IDLOC3 @ 0x200003
   718                           ;	unspecified, using default values
   719  200003                     	org	2097155
   720  200003  FF                 	db	255
   721                           
   722                           ;Config register IDLOC4 @ 0x200004
   723                           ;	unspecified, using default values
   724  200004                     	org	2097156
   725  200004  FF                 	db	255
   726                           
   727                           ;Config register IDLOC5 @ 0x200005
   728                           ;	unspecified, using default values
   729  200005                     	org	2097157
   730  200005  FF                 	db	255
   731                           
   732                           ;Config register IDLOC6 @ 0x200006
   733                           ;	unspecified, using default values
   734  200006                     	org	2097158
   735  200006  FF                 	db	255
   736                           
   737                           ;Config register IDLOC7 @ 0x200007
   738                           ;	unspecified, using default values
   739  200007                     	org	2097159
   740  200007  FF                 	db	255
   741                           
   742                           	psect	config
   743                           
   744                           ; Padding undefined space
   745  300000                     	org	3145728
   746  300000  FF                 	db	255
   747                           
   748                           ;Config register CONFIG1H @ 0x300001
   749                           ;	Oscillator Selection bits
   750                           ;	OSC = XT, XT oscillator
   751                           ;	Fail-Safe Clock Monitor Enable bit
   752                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   753                           ;	Internal/External Oscillator Switchover bit
   754                           ;	IESO = OFF, Two-Speed Start-up disabled
   755  300001                     	org	3145729
   756  300001  01                 	db	1
   757                           
   758                           ;Config register CONFIG2L @ 0x300002
   759                           ;	Power-up Timer Enable bit
   760                           ;	PWRT = OFF, PWRT disabled
   761                           ;	Brown-out Reset Enable bits
   762                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   763                           ;	Brown-out Voltage bits
   764                           ;	BORV = 3, Minimum setting
   765  300002                     	org	3145730
   766  300002  19                 	db	25
   767                           
   768                           ;Config register CONFIG2H @ 0x300003
   769                           ;	Watchdog Timer
   770                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   771                           ;	Watchdog Timer Postscale Select bits
   772                           ;	WDTPS = 32768, 1:32768
   773  300003                     	org	3145731
   774  300003  1E                 	db	30
   775                           
   776                           ;Config register CONFIG3L @ 0x300004
   777                           ;	Processor Data Memory Mode Select bits
   778                           ;	MODE = MC, Microcontroller mode
   779                           ;	Address Bus Width Select bits
   780                           ;	ADDRBW = ADDR20BIT, 20-bit Address Bus
   781                           ;	Data Bus Width Select bit
   782                           ;	DATABW = DATA16BIT, 16-bit External Bus mode
   783                           ;	External Bus Data Wait Enable bit
   784                           ;	WAIT = OFF, Wait selections are unavailable for table reads and table writes
   785  300004                     	org	3145732
   786  300004  F3                 	db	243
   787                           
   788                           ;Config register CONFIG3H @ 0x300005
   789                           ;	CCP2 MUX bit
   790                           ;	CCP2MX = PORTC, ECCP2 input/output is multiplexed with RC1
   791                           ;	ECCP MUX bit
   792                           ;	ECCPMX = PORTE, ECCP1/3 (P1B/P1C/P3B/P3C) are multiplexed onto RE6, RE5, RE4 and RE3 r
      +                          espectively
   793                           ;	Low-Power Timer1 Oscillator Enable bit
   794                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   795                           ;	MCLR Pin Enable bit
   796                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
   797  300005                     	org	3145733
   798  300005  83                 	db	131
   799                           
   800                           ;Config register CONFIG4L @ 0x300006
   801                           ;	Stack Full/Underflow Reset Enable bit
   802                           ;	STVREN = ON, Stack full/underflow will cause Reset
   803                           ;	Single-Supply ICSP Enable bit
   804                           ;	LVP = OFF, Single-Supply ICSP disabled
   805                           ;	Boot Block Size Select bits
   806                           ;	BBSIZ = BB2K, 1K word (2 Kbytes) Boot Block size
   807                           ;	Extended Instruction Set Enable bit
   808                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   809                           ;	Background Debugger Enable bit
   810                           ;	DEBUG = 0x1, unprogrammed default
   811  300006                     	org	3145734
   812  300006  81                 	db	129
   813                           
   814                           ; Padding undefined space
   815  300007                     	org	3145735
   816  300007  FF                 	db	255
   817                           
   818                           ;Config register CONFIG5L @ 0x300008
   819                           ;	Code Protection bit Block 0
   820                           ;	CP0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not code-protected
   821                           ;	Code Protection bit Block 1
   822                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   823                           ;	Code Protection bit Block 2
   824                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   825                           ;	Code Protection bit Block 3
   826                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   827                           ;	Code Protection bit Block 4
   828                           ;	CP4 = OFF, Block 4 (010000-013FFFh) not code-protected
   829                           ;	Code Protection bit Block 5
   830                           ;	CP5 = OFF, Block 5 (014000-017FFFh) not code-protected
   831                           ;	Code Protection bit Block 6
   832                           ;	CP6 = OFF, Block 6 (01BFFF-018000h) not code-protected
   833                           ;	Code Protection bit Block 7
   834                           ;	CP7 = OFF, Block 7 (01C000-01FFFFh) not code-protected
   835  300008                     	org	3145736
   836  300008  FF                 	db	255
   837                           
   838                           ;Config register CONFIG5H @ 0x300009
   839                           ;	Boot Block Code Protection bit
   840                           ;	CPB = OFF, Boot Block (000000-0007FFh) not code-protected
   841                           ;	Data EEPROM Code Protection bit
   842                           ;	CPD = OFF, Data EEPROM not code-protected
   843  300009                     	org	3145737
   844  300009  C0                 	db	192
   845                           
   846                           ;Config register CONFIG6L @ 0x30000A
   847                           ;	Write Protection bit Block 0
   848                           ;	WRT0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not write-protected
   849                           ;	Write Protection bit Block 1
   850                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   851                           ;	Write Protection bit Block 2
   852                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   853                           ;	Write Protection bit Block 3
   854                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   855                           ;	Write Protection bit Block 4
   856                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
   857                           ;	Write Protection bit Block 5
   858                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
   859                           ;	Write Protection bit Block 6
   860                           ;	WRT6 = OFF, Block 6 (01BFFF-018000h) not write-protected
   861                           ;	Write Protection bit Block 7
   862                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
   863  30000A                     	org	3145738
   864  30000A  FF                 	db	255
   865                           
   866                           ;Config register CONFIG6H @ 0x30000B
   867                           ;	Configuration Register Write Protection bit
   868                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   869                           ;	Boot Block Write Protection bit
   870                           ;	WRTB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not write-protected
   871                           ;	Data EEPROM Write Protection bit
   872                           ;	WRTD = OFF, Data EEPROM not write-protected
   873  30000B                     	org	3145739
   874  30000B  E0                 	db	224
   875                           
   876                           ;Config register CONFIG7L @ 0x30000C
   877                           ;	Table Read Protection bit Block 0
   878                           ;	EBTR0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not protected from table reads
      +                           executed in other blocks
   879                           ;	Table Read Protection bit Block 1
   880                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   881                           ;	Table Read Protection bit Block 2
   882                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   883                           ;	Table Read Protection bit Block 3
   884                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   885                           ;	Table Read Protection bit Block 4
   886                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
   887                           ;	Table Read Protection bit Block 5
   888                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
   889                           ;	Table Read Protection bit Block 6
   890                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
   891                           ;	Table Read Protection bit Block 7
   892                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
   893  30000C                     	org	3145740
   894  30000C  FF                 	db	255
   895                           
   896                           ;Config register CONFIG7H @ 0x30000D
   897                           ;	Boot Block Table Read Protection bit
   898                           ;	EBTRB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not protected from table re
      +                          ads executed in other blocks
   899  30000D                     	org	3145741
   900  30000D  40                 	db	64
   901                           tosu	equ	0xFFF
   902                           tosh	equ	0xFFE
   903                           tosl	equ	0xFFD
   904                           stkptr	equ	0xFFC
   905                           pclatu	equ	0xFFB
   906                           pclath	equ	0xFFA
   907                           pcl	equ	0xFF9
   908                           tblptru	equ	0xFF8
   909                           tblptrh	equ	0xFF7
   910                           tblptrl	equ	0xFF6
   911                           tablat	equ	0xFF5
   912                           prodh	equ	0xFF4
   913                           prodl	equ	0xFF3
   914                           indf0	equ	0xFEF
   915                           postinc0	equ	0xFEE
   916                           postdec0	equ	0xFED
   917                           preinc0	equ	0xFEC
   918                           plusw0	equ	0xFEB
   919                           fsr0h	equ	0xFEA
   920                           fsr0l	equ	0xFE9
   921                           wreg	equ	0xFE8
   922                           indf1	equ	0xFE7
   923                           postinc1	equ	0xFE6
   924                           postdec1	equ	0xFE5
   925                           preinc1	equ	0xFE4
   926                           plusw1	equ	0xFE3
   927                           fsr1h	equ	0xFE2
   928                           fsr1l	equ	0xFE1
   929                           bsr	equ	0xFE0
   930                           indf2	equ	0xFDF
   931                           postinc2	equ	0xFDE
   932                           postdec2	equ	0xFDD
   933                           preinc2	equ	0xFDC
   934                           plusw2	equ	0xFDB
   935                           fsr2h	equ	0xFDA
   936                           fsr2l	equ	0xFD9
   937                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      4       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_spiInit

Critical Paths under _service in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _service in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _service in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _service in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _service in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _service in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _service in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _service in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _service in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _service in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _service in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _service in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _service in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _service in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _service in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _service in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _service in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     331
                      _setInterrupts
                              _setIo
                            _spiInit
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     316
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setIo                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setInterrupts                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _service                                              0     0      0       0
                   _interruptService
 ---------------------------------------------------------------------------------
 (3) _interruptService                                     0     0      0       0
                         _spiService
 ---------------------------------------------------------------------------------
 (4) _spiService                                           0     0      0       0
                            _spiRead
 ---------------------------------------------------------------------------------
 (5) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (6) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setInterrupts
   _setIo
   _spiInit
   _spiWrite

 _service (ROOT)
   _interruptService
     _spiService
       _spiRead
         _spiReceiveWait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      4       6       1        6.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       6      32        0.0%
DATA                 0      0       6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon May 24 22:15:56 2021

              _SSPSTATbits 000FC7                         l51 007C                         l60 00D8  
                       l83 00BC                         l86 00C6                         u50 0060  
                       u51 005C                         u60 003A                         u61 0036  
                      l815 00D4                        l841 0052                        l851 0078  
                      l843 0060                        l845 006E                        l861 003A  
                      l853 0012                        l847 0074                        l839 0050  
                      l863 003E                        l855 0016                        l849 0076  
                      l865 0040                        l857 001A                        l859 002C  
                      l797 00B4                        l799 00BE                        _GIE 007F97  
                      _RC0 007C10                       _PEIE 007F96                       i2l21 00CE  
                     i2l54 0096                       i2l57 00A4                       i2l68 00E0  
                     _main 0012                       btemp 0007                       start 000E  
             ___param_bank 000000   __end_of_interruptService 00E8                      ?_main 0001  
                    _FLAGS 0006                      i2l101 00E6                      i2l105 0094  
                    i2l817 00CA                      i2l781 0096                      i2l783 00DA  
                    i2l791 008C                      i2l785 00DE                      i2l793 008E  
                    i2l795 00E2                      i2l789 007E                      _PORTD 000F83  
                    _TRISD 000F95                      _SSPIE 007CEB                      _SSPIF 007CF3  
                    _setIo 00B4            __end_of_spiInit 007E            __end_of_spiRead 00E2  
          __end_of_service 00D2                      ttemp5 0008                      ttemp6 000B  
                    ttemp7 000F      __end_of_setInterrupts 00C8                      wtemp8 0008  
          __initialization 00A6               __end_of_main 004E                     ??_main 0005  
            __activetblptr 000000                     ?_setIo 0001                     i2u1_40 00A4  
                   i2u1_41 00A0                     i2u2_40 008C                     i2u2_41 0088  
                   _TRISC0 007CA0                     _TRISC3 007CA3                     _TRISC5 007CA5  
                   _SSPBUF 000FC9                     isa$std 000001           __end_of_spiWrite 00DA  
                ??_spiInit 0004                  ??_spiRead 0001                  ??_service 0001  
               __accesstop 0060    __end_of__initialization 00AA              ___rparam_used 000001  
           __pcstackCOMRAM 0001              __end_of_setIo 00BE                    ??_setIo 0001  
        ?_interruptService 0001    __size_of_spiReceiveWait 0010         ??_interruptService 0001  
                  _SSPSTAT 000FC7                    __Hparam 0000                    __Lparam 0000  
                ?_spiWrite 0001                    __pcinit 00A6                    __ramtop 1000  
                  __ptext0 0012                    __ptext1 00D2                    __ptext2 004E  
                  __ptext3 00B4                    __ptext4 00BE                    __ptext6 00E2  
                  __ptext7 007E                    __ptext8 00DA                    __ptext9 0096  
                  _spiInit 004E                    _spiRead 00DA                    _service 0008  
           __pintcode_body 00C8       end_of_initialization 00AA                    int_func 00C8  
               ??_spiWrite 0001                 _spiService 007E     __size_of_setInterrupts 000A  
              spiWrite@dat 0001             _spiReceiveWait 0096        start_initialization 00A6  
            _setInterrupts 00BE     __end_of_spiReceiveWait 00A6                ?_spiService 0001  
              __pbssCOMRAM 0005  __size_of_interruptService 0006             ?_setInterrupts 0001  
          ?_spiReceiveWait 0001                  __pintcode 0008          __size_of_spiWrite 0008  
                 ?_spiInit 0001                   ?_spiRead 0001                   ?_service 0001  
                _readValue 0005             __size_of_setIo 000A        __size_of_spiService 0018  
     spiInit@sTransmitEdge 0003         spiInit@sDataSample 0001                   _SSP1CON1 000FC6  
          ??_setInterrupts 0001                   __Hrparam 0000                   __Lrparam 0000  
         _interruptService 00E2           __size_of_spiInit 0030           __size_of_spiRead 0008  
         __size_of_service 00CA              __size_of_main 003C                   isa$xinst 000000  
                 _spiWrite 00D2                   int$flags 0007               spiInit@sType 0004  
             ??_spiService 0001          spiInit@sClockIdle 0002                   intlevel2 0000  
       __end_of_spiService 0096           ??_spiReceiveWait 0001  
