

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jul  6 14:14:55 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 12/02/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F8722 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	idataCOMRAM
    83  00130A                     __pidataCOMRAM:
    84                           	callstack 0
    85                           
    86                           ;initializer for buttonDebounce@counter
    87  00130A  00FF               	dw	255
    88                           
    89                           	psect	smallconst
    90  001000                     __psmallconst:
    91                           	callstack 0
    92  001000  00                 	db	0
    93  001001                     main@F4618:
    94                           	callstack 0
    95  001001  73                 	db	115
    96  001002  73                 	db	115
    97  001003  73                 	db	115
    98  001004  64                 	db	100
    99  001005  64                 	db	100
   100  001006  64                 	db	100
   101  001007  64                 	db	100
   102  001008  00                 	db	0
   103  001009  00                 	db	0
   104  00100A  00                 	db	0
   105  00100B  00                 	db	0
   106  00100C  00                 	db	0
   107  00100D  00                 	db	0
   108  00100E  00                 	db	0
   109  00100F  00                 	db	0
   110  001010  00                 	db	0
   111  001011  00                 	db	0
   112  001012  00                 	db	0
   113  001013  00                 	db	0
   114  001014  00                 	db	0
   115  001015  00                 	db	0
   116  001016  00                 	db	0
   117  001017  00                 	db	0
   118  001018  00                 	db	0
   119  001019  00                 	db	0
   120  00101A  00                 	db	0
   121  00101B  00                 	db	0
   122  00101C  00                 	db	0
   123  00101D  00                 	db	0
   124  00101E  00                 	db	0
   125  00101F  00                 	db	0
   126  001020  00                 	db	0
   127  001021  00                 	db	0
   128  001022  00                 	db	0
   129  001023  00                 	db	0
   130  001024  00                 	db	0
   131  001025  00                 	db	0
   132  001026  00                 	db	0
   133  001027  00                 	db	0
   134  001028  00                 	db	0
   135  001029  00                 	db	0
   136  00102A  00                 	db	0
   137  00102B  00                 	db	0
   138  00102C  00                 	db	0
   139  00102D  00                 	db	0
   140  00102E  00                 	db	0
   141  00102F  00                 	db	0
   142  001030  00                 	db	0
   143  001031  00                 	db	0
   144  001032  00                 	db	0
   145  001033  00                 	db	0
   146  001034  00                 	db	0
   147  001035  00                 	db	0
   148  001036  00                 	db	0
   149  001037  00                 	db	0
   150  001038  00                 	db	0
   151  001039  00                 	db	0
   152  00103A  00                 	db	0
   153  00103B  00                 	db	0
   154  00103C  00                 	db	0
   155  00103D  00                 	db	0
   156  00103E  00                 	db	0
   157  00103F  00                 	db	0
   158  001040  00                 	db	0
   159  001041  00                 	db	0
   160  001042  00                 	db	0
   161  001043  00                 	db	0
   162  001044  00                 	db	0
   163  001045  00                 	db	0
   164  001046  00                 	db	0
   165  001047  00                 	db	0
   166  001048  00                 	db	0
   167  001049  00                 	db	0
   168  00104A  00                 	db	0
   169  00104B  00                 	db	0
   170  00104C  00                 	db	0
   171  00104D  00                 	db	0
   172  00104E  00                 	db	0
   173  00104F  00                 	db	0
   174  001050  00                 	db	0
   175  001051                     __end_ofmain@F4618:
   176                           	callstack 0
   177  0000                     _PORTD	set	3971
   178  0000                     _TRISD	set	3989
   179  0000                     _TXREG1	set	4013
   180  0000                     _RCREG1	set	4014
   181  0000                     _SPBRG	set	4015
   182  0000                     _SSPBUF	set	4041
   183  0000                     _SSPSTATbits	set	4039
   184  0000                     _SSP1CON1	set	4038
   185  0000                     _SSPSTAT	set	4039
   186  0000                     _TRISB0	set	31896
   187  0000                     _TRISC6	set	31910
   188  0000                     _TRISC7	set	31911
   189  0000                     _TXEN1	set	32101
   190  0000                     _CREN1	set	32092
   191  0000                     _SPEN1	set	32095
   192  0000                     _SYNC1	set	32100
   193  0000                     _BRGH1	set	32098
   194  0000                     _INT0IF	set	32657
   195  0000                     _RC1IF	set	31989
   196  0000                     _RC1IE	set	31981
   197  0000                     _INT0IE	set	32660
   198  0000                     _INTEDG0	set	32654
   199  0000                     _PEIE	set	32662
   200  0000                     _GIE	set	32663
   201  0000                     _LATC0	set	31832
   202  0000                     _TRISC2	set	31906
   203  0000                     _TRISC3	set	31907
   204  0000                     _TRISC4	set	31908
   205  0000                     _TRISC5	set	31909
   206  0000                     _SSPIE	set	31979
   207  0000                     _SSPIF	set	31987
   208  001051  00                 	db	0	; dummy byte at the end
   209  0000                     
   210                           ; #config settings
   211                           
   212                           	psect	cinit
   213  00117C                     __pcinit:
   214                           	callstack 0
   215  00117C                     start_initialization:
   216                           	callstack 0
   217  00117C                     __initialization:
   218                           	callstack 0
   219                           
   220                           ; Initialize objects allocated to COMRAM (2 bytes)
   221                           ; load TBLPTR registers with __pidataCOMRAM
   222  00117C  0E0A               	movlw	low __pidataCOMRAM
   223  00117E  6EF6               	movwf	tblptrl,c
   224  001180  0E13               	movlw	high __pidataCOMRAM
   225  001182  6EF7               	movwf	tblptrh,c
   226  001184  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   227  001186  6EF8               	movwf	tblptru,c
   228  001188  0009               	tblrd		*+	;fetch initializer
   229  00118A  CFF5 F059          	movff	tablat,__pdataCOMRAM
   230  00118E  0009               	tblrd		*+	;fetch initializer
   231  001190  CFF5 F05A          	movff	tablat,__pdataCOMRAM+1
   232                           
   233                           ; Clear objects allocated to COMRAM (4 bytes)
   234  001194  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   235  001196  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   236  001198  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   237  00119A  6A55               	clrf	__pbssCOMRAM& (0+255),c
   238  00119C                     end_of_initialization:
   239                           	callstack 0
   240  00119C                     __end_of__initialization:
   241                           	callstack 0
   242  00119C  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   243  00119E  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   244  0011A0  0E00               	movlw	low (__Lsmallconst shr (0+16))
   245  0011A2  6EF8               	movwf	tblptru,c
   246  0011A4  0E10               	movlw	high __Lsmallconst
   247  0011A6  6EF7               	movwf	tblptrh,c
   248  0011A8  0100               	movlb	0
   249  0011AA  EF29  F008         	goto	_main	;jump to C main() function
   250                           
   251                           	psect	bssCOMRAM
   252  000055                     __pbssCOMRAM:
   253                           	callstack 0
   254  000055                     _outValue:
   255                           	callstack 0
   256  000055                     	ds	1
   257  000056                     _readSerialValue:
   258                           	callstack 0
   259  000056                     	ds	1
   260  000057                     _FLAGS:
   261                           	callstack 0
   262  000057                     	ds	1
   263  000058                     _readSPIValue:
   264                           	callstack 0
   265  000058                     	ds	1
   266                           
   267                           	psect	dataCOMRAM
   268  000059                     __pdataCOMRAM:
   269                           	callstack 0
   270  000059                     buttonDebounce@counter:
   271                           	callstack 0
   272  000059                     	ds	2
   273                           
   274                           	psect	cstackCOMRAM
   275  000001                     __pcstackCOMRAM:
   276                           	callstack 0
   277  000001                     spiInit@sDataSample:
   278                           	callstack 0
   279  000001                     spiWrite@dat:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0x0
   283  000001                     	ds	1
   284  000002                     spiInit@sClockIdle:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x1
   288  000002                     	ds	1
   289  000003                     spiInit@sTransmitEdge:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x2
   293  000003                     	ds	1
   294  000004                     spiInit@sType:
   295                           	callstack 0
   296                           
   297                           ; 1 bytes @ 0x3
   298  000004                     	ds	1
   299  000005                     main@test:
   300                           	callstack 0
   301                           
   302                           ; 80 bytes @ 0x4
   303  000005                     	ds	80
   304                           
   305 ;;
   306 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   307 ;;
   308 ;; *************** function _main *****************
   309 ;; Defined at:
   310 ;;		line 22 in file "newmain.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;		None
   313 ;; Auto vars:     Size  Location     Type
   314 ;;  test           80    4[COMRAM] const unsigned char [80]
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      void 
   317 ;; Registers used:
   318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   325 ;;      Locals:        80       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   327 ;;      Totals:        80       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   328 ;;Total ram usage:       80 bytes
   329 ;; Hardware stack levels required when called: 9
   330 ;; This function calls:
   331 ;;		_SPICallback
   332 ;;		_buttonCallback
   333 ;;		_buttonDebounce
   334 ;;		_displayRequestHandle
   335 ;;		_initialiseButton
   336 ;;		_serialCallback
   337 ;;		_setButtonInterrput
   338 ;;		_setButtonIo
   339 ;;		_setInterrupts
   340 ;;		_setIo
   341 ;;		_setSPIInterrupt
   342 ;;		_setSerial
   343 ;;		_setSerialIo
   344 ;;		_setupDisplayIo
   345 ;;		_spiInit
   346 ;; This function is called by:
   347 ;;		Startup code after reset
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351                           	psect	text0
   352  001052                     __ptext0:
   353                           	callstack 0
   354  001052                     _main:
   355                           	callstack 22
   356  001052                     
   357                           ;newmain.c: 23:     setIo();
   358  001052  EC86  F009         	call	_setIo	;wreg free
   359                           
   360                           ;newmain.c: 24:     setSPIInterrupt();
   361  001056  EC6A  F009         	call	_setSPIInterrupt	;wreg free
   362                           
   363                           ;newmain.c: 25:     setSerialIo();
   364  00105A  EC67  F009         	call	_setSerialIo	;wreg free
   365  00105E                     
   366                           ;newmain.c: 26:     setSerial();
   367  00105E  EC28  F009         	call	_setSerial	;wreg free
   368  001062                     
   369                           ;newmain.c: 27:     setupDisplayIo();
   370  001062  EC42  F009         	call	_setupDisplayIo	;wreg free
   371                           
   372                           ;newmain.c: 28:     initialiseButton();
   373  001066  EC76  F009         	call	_initialiseButton	;wreg free
   374                           
   375                           ;newmain.c: 29:     setButtonInterrput();
   376  00106A  EC70  F009         	call	_setButtonInterrput	;wreg free
   377                           
   378                           ;newmain.c: 30:     setButtonIo();
   379  00106E  EC7F  F009         	call	_setButtonIo	;wreg free
   380                           
   381                           ;newmain.c: 31:     setInterrupts();
   382  001072  EC6D  F009         	call	_setInterrupts	;wreg free
   383  001076                     
   384                           ;newmain.c: 33:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   385  001076  0E00               	movlw	0
   386  001078  6E01               	movwf	spiInit@sDataSample^0,c
   387  00107A  0E00               	movlw	0
   388  00107C  6E02               	movwf	spiInit@sClockIdle^0,c
   389  00107E  0E00               	movlw	0
   390  001080  6E03               	movwf	spiInit@sTransmitEdge^0,c
   391  001082  0E24               	movlw	36
   392  001084  ECD7  F008         	call	_spiInit
   393  001088                     
   394                           ;newmain.c: 35:     const unsigned char test[80] = "sssdddd";
   395  001088  0E01               	movlw	low main@F4618
   396  00108A  6EF6               	movwf	tblptrl,c
   397  00108C                     	if	0	;There is only one active tblptr byte
   398  00108C                     	endif
   399  00108C                     	if	0	;There are less than 3 active tblptr bytes
   400  00108C                     	endif
   401  00108C  EE20  F005         	lfsr	2,main@test
   402  001090  0E4F               	movlw	79
   403  001092                     u220:
   404  001092  0009               	tblrd		*+
   405  001094  CFF5 FFDE          	movff	tablat,postinc2
   406  001098  06E8               	decf	wreg,f,c
   407  00109A  E2FB               	bc	u220
   408  00109C                     l1178:
   409                           
   410                           ;newmain.c: 38:         if (FLAGS.bits.SPI_READ_REQUEST == 1) {
   411  00109C  A257               	btfss	_FLAGS^0,1,c
   412  00109E  EF53  F008         	goto	u231
   413  0010A2  EF55  F008         	goto	u230
   414  0010A6                     u231:
   415  0010A6  EF58  F008         	goto	l1184
   416  0010AA                     u230:
   417  0010AA                     
   418                           ;newmain.c: 39:             SPICallback();
   419  0010AA  EC5B  F009         	call	_SPICallback	;wreg free
   420  0010AE                     
   421                           ;newmain.c: 40:             FLAGS.bits.SPI_READ_REQUEST = 0;
   422  0010AE  9257               	bcf	_FLAGS^0,1,c
   423  0010B0                     l1184:
   424                           
   425                           ;newmain.c: 42:         if (FLAGS.bits.DISPLAY_READING) {
   426  0010B0  AA57               	btfss	_FLAGS^0,5,c
   427  0010B2  EF5D  F008         	goto	u241
   428  0010B6  EF5F  F008         	goto	u240
   429  0010BA                     u241:
   430  0010BA  EF62  F008         	goto	l1190
   431  0010BE                     u240:
   432  0010BE                     
   433                           ;newmain.c: 43:             displayRequestHandle();
   434  0010BE  ECF0  F008         	call	_displayRequestHandle	;wreg free
   435  0010C2                     
   436                           ;newmain.c: 44:             FLAGS.bits.DISPLAY_READING = 0;
   437  0010C2  9A57               	bcf	_FLAGS^0,5,c
   438  0010C4                     l1190:
   439                           
   440                           ;newmain.c: 46:         if (FLAGS.bits.UART_RECEIVED) {
   441  0010C4  A457               	btfss	_FLAGS^0,2,c
   442  0010C6  EF67  F008         	goto	u251
   443  0010CA  EF69  F008         	goto	u250
   444  0010CE                     u251:
   445  0010CE  EF6C  F008         	goto	l1196
   446  0010D2                     u250:
   447  0010D2                     
   448                           ;newmain.c: 47:             serialCallback();
   449  0010D2  EC73  F009         	call	_serialCallback	;wreg free
   450  0010D6                     
   451                           ;newmain.c: 48:             FLAGS.bits.UART_RECEIVED = 0;
   452  0010D6  9457               	bcf	_FLAGS^0,2,c
   453  0010D8                     l1196:
   454                           
   455                           ;newmain.c: 50:         if (FLAGS.bits.PUSHED_BUTTON) {
   456  0010D8  A857               	btfss	_FLAGS^0,4,c
   457  0010DA  EF71  F008         	goto	u261
   458  0010DE  EF73  F008         	goto	u260
   459  0010E2                     u261:
   460  0010E2  EF76  F008         	goto	l1202
   461  0010E6                     u260:
   462  0010E6                     
   463                           ;newmain.c: 51:             FLAGS.bits.PUSH_REQUEST_SERVICED = 0;
   464  0010E6  9657               	bcf	_FLAGS^0,3,c
   465  0010E8                     
   466                           ;newmain.c: 52:             buttonCallback();
   467  0010E8  EC81  F009         	call	_buttonCallback	;wreg free
   468  0010EC                     l1202:
   469                           
   470                           ;newmain.c: 54:         if (FLAGS.bits.PUSH_REQUEST_SERVICED == 0) {
   471  0010EC  B657               	btfsc	_FLAGS^0,3,c
   472  0010EE  EF7B  F008         	goto	u271
   473  0010F2  EF7D  F008         	goto	u270
   474  0010F6                     u271:
   475  0010F6  EF4E  F008         	goto	l1178
   476  0010FA                     u270:
   477  0010FA                     
   478                           ;newmain.c: 55:             buttonDebounce();
   479  0010FA  EC07  F009         	call	_buttonDebounce	;wreg free
   480  0010FE  EF4E  F008         	goto	l1178
   481  001102  EF07  F000         	goto	start
   482  001106                     __end_of_main:
   483                           	callstack 0
   484                           
   485 ;; *************** function _spiInit *****************
   486 ;; Defined at:
   487 ;;		line 14 in file "spi.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;  sType           1    wreg     enum E4544
   490 ;;  sDataSample     1    0[COMRAM] enum E4552
   491 ;;  sClockIdle      1    1[COMRAM] enum E4556
   492 ;;  sTransmitEdg    1    2[COMRAM] enum E4560
   493 ;; Auto vars:     Size  Location     Type
   494 ;;  sType           1    3[COMRAM] enum E4544
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      void 
   497 ;; Registers used:
   498 ;;		wreg, status,2, status,0
   499 ;; Tracked objects:
   500 ;;		On entry : 0/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   504 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   505 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   507 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   508 ;;Total ram usage:        4 bytes
   509 ;; Hardware stack levels used: 1
   510 ;; Hardware stack levels required when called: 6
   511 ;; This function calls:
   512 ;;		Nothing
   513 ;; This function is called by:
   514 ;;		_main
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           	psect	text1
   519  0011AE                     __ptext1:
   520                           	callstack 0
   521  0011AE                     _spiInit:
   522                           	callstack 24
   523                           
   524                           ;incstack = 0
   525                           ;spiInit@sType stored from wreg
   526  0011AE  6E04               	movwf	spiInit@sType^0,c
   527  0011B0                     
   528                           ;spi.c: 15:     TRISC5 = 0;
   529  0011B0  9A94               	bcf	3988,5,c	;volatile
   530                           
   531                           ;spi.c: 16:     TRISC4 = 1;
   532  0011B2  8894               	bsf	3988,4,c	;volatile
   533  0011B4                     
   534                           ;spi.c: 17:     if (sType & 0b00000100)
   535  0011B4  A404               	btfss	spiInit@sType^0,2,c
   536  0011B6  EFDF  F008         	goto	u211
   537  0011BA  EFE1  F008         	goto	u210
   538  0011BE                     u211:
   539  0011BE  EFE8  F008         	goto	l1160
   540  0011C2                     u210:
   541  0011C2                     
   542                           ;spi.c: 18:     {;spi.c: 19:         SSPSTAT = sTransmitEdge;
   543  0011C2  C003  FFC7         	movff	spiInit@sTransmitEdge,4039	;volatile
   544                           
   545                           ;spi.c: 20:         TRISC3 = 1;
   546  0011C6  8694               	bsf	3988,3,c	;volatile
   547                           
   548                           ;spi.c: 21:         TRISC2 = 1;
   549  0011C8  8494               	bsf	3988,2,c	;volatile
   550                           
   551                           ;spi.c: 22:         LATC0 = 1;
   552  0011CA  808B               	bsf	3979,0,c	;volatile
   553                           
   554                           ;spi.c: 23:     } else
   555  0011CC  EFED  F008         	goto	l1166
   556  0011D0                     l1160:
   557                           
   558                           ;spi.c: 24:     {;spi.c: 25:         SSPSTAT = sDataSample | sTransmitEdge;
   559  0011D0  5001               	movf	spiInit@sDataSample^0,w,c
   560  0011D2  1003               	iorwf	spiInit@sTransmitEdge^0,w,c
   561  0011D4  6EC7               	movwf	199,c	;volatile
   562  0011D6                     
   563                           ;spi.c: 26:         TRISC3 = 0;
   564  0011D6  9694               	bcf	3988,3,c	;volatile
   565  0011D8                     
   566                           ;spi.c: 27:         TRISC2 = 0;
   567  0011D8  9494               	bcf	3988,2,c	;volatile
   568  0011DA                     l1166:
   569                           
   570                           ;spi.c: 29:     SSP1CON1 = 0b00100101;
   571  0011DA  0E25               	movlw	37
   572  0011DC  6EC6               	movwf	198,c	;volatile
   573  0011DE  0012               	return		;funcret
   574  0011E0                     __end_of_spiInit:
   575                           	callstack 0
   576                           
   577 ;; *************** function _setupDisplayIo *****************
   578 ;; Defined at:
   579 ;;		line 6 in file "display.c"
   580 ;; Parameters:    Size  Location     Type
   581 ;;		None
   582 ;; Auto vars:     Size  Location     Type
   583 ;;		None
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      void 
   586 ;; Registers used:
   587 ;;		wreg, status,2
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   597 ;;Total ram usage:        0 bytes
   598 ;; Hardware stack levels used: 1
   599 ;; Hardware stack levels required when called: 6
   600 ;; This function calls:
   601 ;;		Nothing
   602 ;; This function is called by:
   603 ;;		_main
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           	psect	text2
   608  001284                     __ptext2:
   609                           	callstack 0
   610  001284                     _setupDisplayIo:
   611                           	callstack 24
   612  001284                     
   613                           ;display.c: 7:     TRISD = 0x00;
   614  001284  0E00               	movlw	0
   615  001286  6E95               	movwf	149,c	;volatile
   616                           
   617                           ;display.c: 8:     PORTD = 0x00;
   618  001288  0E00               	movlw	0
   619  00128A  6E83               	movwf	131,c	;volatile
   620  00128C  0012               	return		;funcret
   621  00128E                     __end_of_setupDisplayIo:
   622                           	callstack 0
   623                           
   624 ;; *************** function _setSerialIo *****************
   625 ;; Defined at:
   626 ;;		line 17 in file "serial.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		None
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;Total ram usage:        0 bytes
   645 ;; Hardware stack levels used: 1
   646 ;; Hardware stack levels required when called: 6
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           	psect	text3
   655  0012CE                     __ptext3:
   656                           	callstack 0
   657  0012CE                     _setSerialIo:
   658                           	callstack 24
   659  0012CE                     
   660                           ;serial.c: 18:     TRISC7 = 1;
   661  0012CE  8E94               	bsf	3988,7,c	;volatile
   662                           
   663                           ;serial.c: 19:     TRISC6 = 0;
   664  0012D0  9C94               	bcf	3988,6,c	;volatile
   665  0012D2  0012               	return		;funcret
   666  0012D4                     __end_of_setSerialIo:
   667                           	callstack 0
   668                           
   669 ;; *************** function _setSerial *****************
   670 ;; Defined at:
   671 ;;		line 5 in file "serial.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, status,2
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;Total ram usage:        0 bytes
   690 ;; Hardware stack levels used: 1
   691 ;; Hardware stack levels required when called: 6
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		_main
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	text4
   700  001250                     __ptext4:
   701                           	callstack 0
   702  001250                     _setSerial:
   703                           	callstack 24
   704  001250                     
   705                           ;serial.c: 6:     BRGH1 = 0;
   706  001250  94AC               	bcf	4012,2,c	;volatile
   707  001252                     
   708                           ;serial.c: 7:     SPBRG = 15;
   709  001252  0E0F               	movlw	15
   710  001254  6EAF               	movwf	175,c	;volatile
   711  001256                     
   712                           ;serial.c: 8:     SYNC1 = 0;
   713  001256  98AC               	bcf	4012,4,c	;volatile
   714  001258                     
   715                           ;serial.c: 9:     SPEN1 = 1;
   716  001258  8EAB               	bsf	4011,7,c	;volatile
   717  00125A                     
   718                           ;serial.c: 10:     RC1IE = 1;
   719  00125A  8A9D               	bsf	3997,5,c	;volatile
   720  00125C                     
   721                           ;serial.c: 11:     CREN1 = 1;
   722  00125C  88AB               	bsf	4011,4,c	;volatile
   723  00125E                     
   724                           ;serial.c: 12:     RC1IF = 0;
   725  00125E  9A9E               	bcf	3998,5,c	;volatile
   726  001260                     
   727                           ;serial.c: 13:     TXEN1 = 1;
   728  001260  8AAC               	bsf	4012,5,c	;volatile
   729                           
   730                           ;serial.c: 14:     RCREG1 = 0;
   731  001262  0E00               	movlw	0
   732  001264  6EAE               	movwf	174,c	;volatile
   733  001266  0012               	return		;funcret
   734  001268                     __end_of_setSerial:
   735                           	callstack 0
   736                           
   737 ;; *************** function _setSPIInterrupt *****************
   738 ;; Defined at:
   739 ;;		line 9 in file "spi.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;		None
   742 ;; Auto vars:     Size  Location     Type
   743 ;;		None
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		None
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   757 ;;Total ram usage:        0 bytes
   758 ;; Hardware stack levels used: 1
   759 ;; Hardware stack levels required when called: 6
   760 ;; This function calls:
   761 ;;		Nothing
   762 ;; This function is called by:
   763 ;;		_main
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767                           	psect	text5
   768  0012D4                     __ptext5:
   769                           	callstack 0
   770  0012D4                     _setSPIInterrupt:
   771                           	callstack 24
   772  0012D4                     
   773                           ;spi.c: 10:     SSPIF = 0;
   774  0012D4  969E               	bcf	3998,3,c	;volatile
   775                           
   776                           ;spi.c: 11:     SSPIE = 1;
   777  0012D6  869D               	bsf	3997,3,c	;volatile
   778  0012D8  0012               	return		;funcret
   779  0012DA                     __end_of_setSPIInterrupt:
   780                           	callstack 0
   781                           
   782 ;; *************** function _setIo *****************
   783 ;; Defined at:
   784 ;;		line 9 in file "init.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		None
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;Total ram usage:        0 bytes
   803 ;; Hardware stack levels used: 1
   804 ;; Hardware stack levels required when called: 6
   805 ;; This function calls:
   806 ;;		Nothing
   807 ;; This function is called by:
   808 ;;		_main
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text6
   813  00130C                     __ptext6:
   814                           	callstack 0
   815  00130C                     _setIo:
   816                           	callstack 24
   817  00130C  0012               	return		;funcret
   818  00130E                     __end_of_setIo:
   819                           	callstack 0
   820                           
   821 ;; *************** function _setInterrupts *****************
   822 ;; Defined at:
   823 ;;		line 13 in file "init.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;		None
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		None
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   841 ;;Total ram usage:        0 bytes
   842 ;; Hardware stack levels used: 1
   843 ;; Hardware stack levels required when called: 6
   844 ;; This function calls:
   845 ;;		Nothing
   846 ;; This function is called by:
   847 ;;		_main
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           	psect	text7
   852  0012DA                     __ptext7:
   853                           	callstack 0
   854  0012DA                     _setInterrupts:
   855                           	callstack 24
   856  0012DA                     
   857                           ;init.c: 14:     GIE = 1;
   858  0012DA  8EF2               	bsf	4082,7,c	;volatile
   859                           
   860                           ;init.c: 15:     PEIE = 1;
   861  0012DC  8CF2               	bsf	4082,6,c	;volatile
   862  0012DE  0012               	return		;funcret
   863  0012E0                     __end_of_setInterrupts:
   864                           	callstack 0
   865                           
   866 ;; *************** function _setButtonIo *****************
   867 ;; Defined at:
   868 ;;		line 6 in file "button.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		None
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   886 ;;Total ram usage:        0 bytes
   887 ;; Hardware stack levels used: 1
   888 ;; Hardware stack levels required when called: 6
   889 ;; This function calls:
   890 ;;		Nothing
   891 ;; This function is called by:
   892 ;;		_main
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896                           	psect	text8
   897  0012FE                     __ptext8:
   898                           	callstack 0
   899  0012FE                     _setButtonIo:
   900                           	callstack 24
   901  0012FE                     
   902                           ;button.c: 7:     TRISB0 = 1;
   903  0012FE  8093               	bsf	3987,0,c	;volatile
   904  001300  0012               	return		;funcret
   905  001302                     __end_of_setButtonIo:
   906                           	callstack 0
   907                           
   908 ;; *************** function _setButtonInterrput *****************
   909 ;; Defined at:
   910 ;;		line 19 in file "init.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;		None
   913 ;; Auto vars:     Size  Location     Type
   914 ;;		None
   915 ;; Return value:  Size  Location     Type
   916 ;;                  1    wreg      void 
   917 ;; Registers used:
   918 ;;		None
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;Total ram usage:        0 bytes
   929 ;; Hardware stack levels used: 1
   930 ;; Hardware stack levels required when called: 6
   931 ;; This function calls:
   932 ;;		Nothing
   933 ;; This function is called by:
   934 ;;		_main
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text9
   939  0012E0                     __ptext9:
   940                           	callstack 0
   941  0012E0                     _setButtonInterrput:
   942                           	callstack 24
   943  0012E0                     
   944                           ;init.c: 20:     INTEDG0 = 1;
   945  0012E0  8CF1               	bsf	4081,6,c	;volatile
   946                           
   947                           ;init.c: 21:     INT0IE = 1;
   948  0012E2  88F2               	bsf	4082,4,c	;volatile
   949  0012E4  0012               	return		;funcret
   950  0012E6                     __end_of_setButtonInterrput:
   951                           	callstack 0
   952                           
   953 ;; *************** function _serialCallback *****************
   954 ;; Defined at:
   955 ;;		line 22 in file "serial.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;		None
   958 ;; Auto vars:     Size  Location     Type
   959 ;;		None
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		None
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;Total ram usage:        0 bytes
   974 ;; Hardware stack levels used: 1
   975 ;; Hardware stack levels required when called: 6
   976 ;; This function calls:
   977 ;;		Nothing
   978 ;; This function is called by:
   979 ;;		_main
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text10
   984  0012E6                     __ptext10:
   985                           	callstack 0
   986  0012E6                     _serialCallback:
   987                           	callstack 24
   988  0012E6                     
   989                           ;serial.c: 23:     FLAGS.bits.DISPLAY_READING = 1;
   990  0012E6  8A57               	bsf	_FLAGS^0,5,c
   991                           
   992                           ;serial.c: 24:     FLAGS.bits.DISPLAY_SERIAL_READING = 1;
   993  0012E8  8E57               	bsf	_FLAGS^0,7,c
   994  0012EA  0012               	return		;funcret
   995  0012EC                     __end_of_serialCallback:
   996                           	callstack 0
   997                           
   998 ;; *************** function _initialiseButton *****************
   999 ;; Defined at:
  1000 ;;		line 10 in file "button.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;		None
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		None
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;Total ram usage:        0 bytes
  1019 ;; Hardware stack levels used: 1
  1020 ;; Hardware stack levels required when called: 6
  1021 ;; This function calls:
  1022 ;;		Nothing
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text11
  1029  0012EC                     __ptext11:
  1030                           	callstack 0
  1031  0012EC                     _initialiseButton:
  1032                           	callstack 24
  1033  0012EC                     
  1034                           ;button.c: 11:     FLAGS.bits.PUSHED_BUTTON = 0;
  1035  0012EC  9857               	bcf	_FLAGS^0,4,c
  1036                           
  1037                           ;button.c: 12:     FLAGS.bits.PUSH_REQUEST_SERVICED = 1;
  1038  0012EE  8657               	bsf	_FLAGS^0,3,c
  1039  0012F0  0012               	return		;funcret
  1040  0012F2                     __end_of_initialiseButton:
  1041                           	callstack 0
  1042                           
  1043 ;; *************** function _displayRequestHandle *****************
  1044 ;; Defined at:
  1045 ;;		line 21 in file "display.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;Total ram usage:        0 bytes
  1064 ;; Hardware stack levels used: 1
  1065 ;; Hardware stack levels required when called: 8
  1066 ;; This function calls:
  1067 ;;		_displaySPI
  1068 ;;		_displaySerial
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           	psect	text12
  1075  0011E0                     __ptext12:
  1076                           	callstack 0
  1077  0011E0                     _displayRequestHandle:
  1078                           	callstack 22
  1079  0011E0                     
  1080                           ;display.c: 22:     if (FLAGS.bits.DISPLAY_SERIAL_READING) {
  1081  0011E0  AE57               	btfss	_FLAGS^0,7,c
  1082  0011E2  EFF5  F008         	goto	u121
  1083  0011E6  EFF7  F008         	goto	u120
  1084  0011EA                     u121:
  1085  0011EA  EFFC  F008         	goto	l280
  1086  0011EE                     u120:
  1087  0011EE                     
  1088                           ;display.c: 23:         displaySerial();
  1089  0011EE  EC47  F009         	call	_displaySerial	;wreg free
  1090  0011F2                     
  1091                           ;display.c: 24:         FLAGS.bits.DISPLAY_SERIAL_READING = 0;
  1092  0011F2  9E57               	bcf	_FLAGS^0,7,c
  1093                           
  1094                           ;display.c: 25:     } else {
  1095  0011F4  EF06  F009         	goto	l283
  1096  0011F8                     l280:
  1097                           
  1098                           ;display.c: 26:         if (FLAGS.bits.DISPLAY_SPI_READING) {
  1099  0011F8  AC57               	btfss	_FLAGS^0,6,c
  1100  0011FA  EF01  F009         	goto	u131
  1101  0011FE  EF03  F009         	goto	u130
  1102  001202                     u131:
  1103  001202  EF06  F009         	goto	l283
  1104  001206                     u130:
  1105  001206                     
  1106                           ;display.c: 27:             displaySPI();
  1107  001206  EC4C  F009         	call	_displaySPI	;wreg free
  1108  00120A                     
  1109                           ;display.c: 28:             FLAGS.bits.DISPLAY_SPI_READING = 0;
  1110  00120A  9C57               	bcf	_FLAGS^0,6,c
  1111  00120C                     l283:
  1112  00120C  0012               	return		;funcret
  1113  00120E                     __end_of_displayRequestHandle:
  1114                           	callstack 0
  1115                           
  1116 ;; *************** function _displaySerial *****************
  1117 ;; Defined at:
  1118 ;;		line 11 in file "display.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1136 ;;Total ram usage:        0 bytes
  1137 ;; Hardware stack levels used: 1
  1138 ;; Hardware stack levels required when called: 7
  1139 ;; This function calls:
  1140 ;;		_displayCallback
  1141 ;; This function is called by:
  1142 ;;		_displayRequestHandle
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text13
  1147  00128E                     __ptext13:
  1148                           	callstack 0
  1149  00128E                     _displaySerial:
  1150                           	callstack 22
  1151  00128E                     
  1152                           ;display.c: 12:     outValue = readSerialValue;
  1153  00128E  C056  F055         	movff	_readSerialValue,_outValue
  1154  001292                     
  1155                           ;display.c: 13:     displayCallback();
  1156  001292  EC79  F009         	call	_displayCallback	;wreg free
  1157  001296  0012               	return		;funcret
  1158  001298                     __end_of_displaySerial:
  1159                           	callstack 0
  1160                           
  1161 ;; *************** function _displaySPI *****************
  1162 ;; Defined at:
  1163 ;;		line 16 in file "display.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;		None
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      void 
  1170 ;; Registers used:
  1171 ;;		cstack
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;Total ram usage:        0 bytes
  1182 ;; Hardware stack levels used: 1
  1183 ;; Hardware stack levels required when called: 7
  1184 ;; This function calls:
  1185 ;;		_displayCallback
  1186 ;; This function is called by:
  1187 ;;		_displayRequestHandle
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           	psect	text14
  1192  001298                     __ptext14:
  1193                           	callstack 0
  1194  001298                     _displaySPI:
  1195                           	callstack 22
  1196  001298                     
  1197                           ;display.c: 17:     outValue = readSPIValue;
  1198  001298  C058  F055         	movff	_readSPIValue,_outValue
  1199  00129C                     
  1200                           ;display.c: 18:     displayCallback();
  1201  00129C  EC79  F009         	call	_displayCallback	;wreg free
  1202  0012A0  0012               	return		;funcret
  1203  0012A2                     __end_of_displaySPI:
  1204                           	callstack 0
  1205                           
  1206 ;; *************** function _displayCallback *****************
  1207 ;; Defined at:
  1208 ;;		line 33 in file "display.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;		None
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;		None
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  1    wreg      void 
  1215 ;; Registers used:
  1216 ;;		None
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1226 ;;Total ram usage:        0 bytes
  1227 ;; Hardware stack levels used: 1
  1228 ;; Hardware stack levels required when called: 6
  1229 ;; This function calls:
  1230 ;;		Nothing
  1231 ;; This function is called by:
  1232 ;;		_displaySerial
  1233 ;;		_displaySPI
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	text15
  1238  0012F2                     __ptext15:
  1239                           	callstack 0
  1240  0012F2                     _displayCallback:
  1241                           	callstack 22
  1242  0012F2                     
  1243                           ;display.c: 34:     PORTD = outValue;
  1244  0012F2  C055  FF83         	movff	_outValue,3971	;volatile
  1245  0012F6  0012               	return		;funcret
  1246  0012F8                     __end_of_displayCallback:
  1247                           	callstack 0
  1248                           
  1249 ;; *************** function _buttonDebounce *****************
  1250 ;; Defined at:
  1251 ;;		line 29 in file "button.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;		None
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;		None
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  1    wreg      void 
  1258 ;; Registers used:
  1259 ;;		wreg, status,2, status,0
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;Total ram usage:        0 bytes
  1270 ;; Hardware stack levels used: 1
  1271 ;; Hardware stack levels required when called: 6
  1272 ;; This function calls:
  1273 ;;		Nothing
  1274 ;; This function is called by:
  1275 ;;		_main
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           	psect	text16
  1280  00120E                     __ptext16:
  1281                           	callstack 0
  1282  00120E                     _buttonDebounce:
  1283                           	callstack 24
  1284  00120E                     
  1285                           ;button.c: 30:     static int counter = 255;;button.c: 31:     counter--;
  1286  00120E  0659               	decf	buttonDebounce@counter^0,f,c
  1287  001210  A0D8               	btfss	status,0,c
  1288  001212  065A               	decf	(buttonDebounce@counter+1)^0,f,c
  1289  001214                     
  1290                           ;button.c: 32:     if (counter == 0) {
  1291  001214  5059               	movf	buttonDebounce@counter^0,w,c
  1292  001216  105A               	iorwf	(buttonDebounce@counter+1)^0,w,c
  1293  001218  A4D8               	btfss	status,2,c
  1294  00121A  EF11  F009         	goto	u141
  1295  00121E  EF13  F009         	goto	u140
  1296  001222                     u141:
  1297  001222  EF17  F009         	goto	l254
  1298  001226                     u140:
  1299  001226                     
  1300                           ;button.c: 33:         FLAGS.bits.PUSH_REQUEST_SERVICED = 1;
  1301  001226  8657               	bsf	_FLAGS^0,3,c
  1302  001228                     
  1303                           ;button.c: 34:         counter = 255;
  1304  001228  0E00               	movlw	0
  1305  00122A  6E5A               	movwf	(buttonDebounce@counter+1)^0,c
  1306  00122C  6859               	setf	buttonDebounce@counter^0,c
  1307  00122E                     l254:
  1308  00122E  0012               	return		;funcret
  1309  001230                     __end_of_buttonDebounce:
  1310                           	callstack 0
  1311                           
  1312 ;; *************** function _buttonCallback *****************
  1313 ;; Defined at:
  1314 ;;		line 15 in file "button.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;		None
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;		None
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		None
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1332 ;;Total ram usage:        0 bytes
  1333 ;; Hardware stack levels used: 1
  1334 ;; Hardware stack levels required when called: 6
  1335 ;; This function calls:
  1336 ;;		Nothing
  1337 ;; This function is called by:
  1338 ;;		_main
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text17
  1343  001302                     __ptext17:
  1344                           	callstack 0
  1345  001302                     _buttonCallback:
  1346                           	callstack 24
  1347  001302                     
  1348                           ;button.c: 20:     FLAGS.bits.PUSHED_BUTTON = 0;
  1349  001302  9857               	bcf	_FLAGS^0,4,c
  1350  001304  0012               	return		;funcret
  1351  001306                     __end_of_buttonCallback:
  1352                           	callstack 0
  1353                           
  1354 ;; *************** function _SPICallback *****************
  1355 ;; Defined at:
  1356 ;;		line 61 in file "spi.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;		None
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;		None
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		wreg, status,2, cstack
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;Total ram usage:        0 bytes
  1375 ;; Hardware stack levels used: 1
  1376 ;; Hardware stack levels required when called: 7
  1377 ;; This function calls:
  1378 ;;		_spiWrite
  1379 ;; This function is called by:
  1380 ;;		_main
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text18
  1385  0012B6                     __ptext18:
  1386                           	callstack 0
  1387  0012B6                     _SPICallback:
  1388                           	callstack 23
  1389  0012B6                     
  1390                           ;spi.c: 62:     spiWrite(readSPIValue);
  1391  0012B6  5058               	movf	_readSPIValue^0,w,c
  1392  0012B8  EC5F  F009         	call	_spiWrite
  1393  0012BC  0012               	return		;funcret
  1394  0012BE                     __end_of_SPICallback:
  1395                           	callstack 0
  1396                           
  1397 ;; *************** function _spiWrite *****************
  1398 ;; Defined at:
  1399 ;;		line 36 in file "spi.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;  dat             1    wreg     unsigned char 
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;  dat             1    0[COMRAM] unsigned char 
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  1    wreg      void 
  1406 ;; Registers used:
  1407 ;;		wreg
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;Total ram usage:        1 bytes
  1418 ;; Hardware stack levels used: 1
  1419 ;; Hardware stack levels required when called: 6
  1420 ;; This function calls:
  1421 ;;		Nothing
  1422 ;; This function is called by:
  1423 ;;		_SPICallback
  1424 ;;		_testSpilSend
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           	psect	text19
  1429  0012BE                     __ptext19:
  1430                           	callstack 0
  1431  0012BE                     _spiWrite:
  1432                           	callstack 23
  1433                           
  1434                           ;incstack = 0
  1435                           ;spiWrite@dat stored from wreg
  1436  0012BE  6E01               	movwf	spiWrite@dat^0,c
  1437  0012C0                     
  1438                           ;spi.c: 36: void spiWrite(char dat);spi.c: 37: {;spi.c: 38:     SSPBUF = dat;
  1439  0012C0  C001  FFC9         	movff	spiWrite@dat,4041	;volatile
  1440  0012C4  0012               	return		;funcret
  1441  0012C6                     __end_of_spiWrite:
  1442                           	callstack 0
  1443                           
  1444 ;; *************** function _service *****************
  1445 ;; Defined at:
  1446 ;;		line 18 in file "newmain.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;		None
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;		None
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      void 
  1453 ;; Registers used:
  1454 ;;		wreg, status,2, cstack
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;Total ram usage:        0 bytes
  1465 ;; Hardware stack levels used: 1
  1466 ;; Hardware stack levels required when called: 5
  1467 ;; This function calls:
  1468 ;;		_interruptService
  1469 ;; This function is called by:
  1470 ;;		Interrupt level 2
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           	psect	intcode
  1475  000008                     __pintcode:
  1476                           	callstack 0
  1477  000008                     _service:
  1478                           	callstack 22
  1479                           
  1480                           ;incstack = 0
  1481  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1482  00000A  ED51  F009         	call	int_func,f	;refresh shadow registers
  1483                           
  1484                           	psect	intcode_body
  1485  0012A2                     __pintcode_body:
  1486                           	callstack 22
  1487  0012A2                     int_func:
  1488                           	callstack 22
  1489  0012A2  0006               	pop		; remove dummy address from shadow register refresh
  1490  0012A4                     
  1491                           ;newmain.c: 19:     interruptService();
  1492  0012A4  EC7C  F009         	call	_interruptService	;wreg free
  1493  0012A8  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1494  0012AA  0011               	retfie		f
  1495  0012AC                     __end_of_service:
  1496                           	callstack 0
  1497                           
  1498 ;; *************** function _interruptService *****************
  1499 ;; Defined at:
  1500 ;;		line 28 in file "interruptService.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;		None
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;		None
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  1    wreg      void 
  1507 ;; Registers used:
  1508 ;;		wreg, status,2, cstack
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1518 ;;Total ram usage:        0 bytes
  1519 ;; Hardware stack levels used: 1
  1520 ;; Hardware stack levels required when called: 4
  1521 ;; This function calls:
  1522 ;;		_processInterruptService
  1523 ;; This function is called by:
  1524 ;;		_service
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           	psect	text21
  1529  0012F8                     __ptext21:
  1530                           	callstack 0
  1531  0012F8                     _interruptService:
  1532                           	callstack 22
  1533  0012F8                     
  1534                           ;interruptService.c: 29:     processInterruptService();
  1535  0012F8  EC83  F008         	call	_processInterruptService	;wreg free
  1536  0012FC  0012               	return		;funcret
  1537  0012FE                     __end_of_interruptService:
  1538                           	callstack 0
  1539                           
  1540 ;; *************** function _processInterruptService *****************
  1541 ;; Defined at:
  1542 ;;		line 13 in file "interruptService.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;		None
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;		None
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  1    wreg      void 
  1549 ;; Registers used:
  1550 ;;		wreg, status,2, cstack
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1560 ;;Total ram usage:        0 bytes
  1561 ;; Hardware stack levels used: 1
  1562 ;; Hardware stack levels required when called: 3
  1563 ;; This function calls:
  1564 ;;		_SPIHandle
  1565 ;;		_buttonHandle
  1566 ;;		_serialHandle
  1567 ;; This function is called by:
  1568 ;;		_interruptService
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text22
  1573  001106                     __ptext22:
  1574                           	callstack 0
  1575  001106                     _processInterruptService:
  1576                           	callstack 22
  1577  001106                     
  1578                           ;interruptService.c: 14:     if (SSPIE == 1 && SSPIF == 1) {
  1579  001106  A69D               	btfss	3997,3,c	;volatile
  1580  001108  EF88  F008         	goto	i2u4_41
  1581  00110C  EF8A  F008         	goto	i2u4_40
  1582  001110                     i2u4_41:
  1583  001110  EF94  F008         	goto	i2l1002
  1584  001114                     i2u4_40:
  1585  001114  A69E               	btfss	3998,3,c	;volatile
  1586  001116  EF8F  F008         	goto	i2u5_41
  1587  00111A  EF91  F008         	goto	i2u5_40
  1588  00111E                     i2u5_41:
  1589  00111E  EF94  F008         	goto	i2l1002
  1590  001122                     i2u5_40:
  1591  001122                     
  1592                           ;interruptService.c: 15:         SPIHandle();
  1593  001122  EC3C  F009         	call	_SPIHandle	;wreg free
  1594  001126                     
  1595                           ;interruptService.c: 16:         SSPIF = 0;
  1596  001126  969E               	bcf	3998,3,c	;volatile
  1597  001128                     i2l1002:
  1598                           
  1599                           ;interruptService.c: 18:     if (RC1IE == 1 && RC1IF == 1 && FLAGS.bits.UART_RECEIVED ==
      +                           0) {
  1600  001128  AA9D               	btfss	3997,5,c	;volatile
  1601  00112A  EF99  F008         	goto	i2u6_41
  1602  00112E  EF9B  F008         	goto	i2u6_40
  1603  001132                     i2u6_41:
  1604  001132  EFAC  F008         	goto	i2l1012
  1605  001136                     i2u6_40:
  1606  001136  AA9E               	btfss	3998,5,c	;volatile
  1607  001138  EFA0  F008         	goto	i2u7_41
  1608  00113C  EFA2  F008         	goto	i2u7_40
  1609  001140                     i2u7_41:
  1610  001140  EFAC  F008         	goto	i2l1012
  1611  001144                     i2u7_40:
  1612  001144  B457               	btfsc	_FLAGS^0,2,c
  1613  001146  EFA7  F008         	goto	i2u8_41
  1614  00114A  EFA9  F008         	goto	i2u8_40
  1615  00114E                     i2u8_41:
  1616  00114E  EFAC  F008         	goto	i2l1012
  1617  001152                     i2u8_40:
  1618  001152                     
  1619                           ;interruptService.c: 19:         serialHandle();
  1620  001152  EC56  F009         	call	_serialHandle	;wreg free
  1621  001156                     
  1622                           ;interruptService.c: 20:         RC1IF = 0;
  1623  001156  9A9E               	bcf	3998,5,c	;volatile
  1624  001158                     i2l1012:
  1625                           
  1626                           ;interruptService.c: 22:     if (INTEDG0 == 1 && INT0IF == 1) {
  1627  001158  ACF1               	btfss	4081,6,c	;volatile
  1628  00115A  EFB1  F008         	goto	i2u9_41
  1629  00115E  EFB3  F008         	goto	i2u9_40
  1630  001162                     i2u9_41:
  1631  001162  EFBD  F008         	goto	i2l167
  1632  001166                     i2u9_40:
  1633  001166  A2F2               	btfss	4082,1,c	;volatile
  1634  001168  EFB8  F008         	goto	i2u10_41
  1635  00116C  EFBA  F008         	goto	i2u10_40
  1636  001170                     i2u10_41:
  1637  001170  EFBD  F008         	goto	i2l167
  1638  001174                     i2u10_40:
  1639  001174                     
  1640                           ;interruptService.c: 23:         buttonHandle();
  1641  001174  EC18  F009         	call	_buttonHandle	;wreg free
  1642  001178                     
  1643                           ;interruptService.c: 24:         INT0IF = 0;
  1644  001178  92F2               	bcf	4082,1,c	;volatile
  1645  00117A                     i2l167:
  1646  00117A  0012               	return		;funcret
  1647  00117C                     __end_of_processInterruptService:
  1648                           	callstack 0
  1649                           
  1650 ;; *************** function _serialHandle *****************
  1651 ;; Defined at:
  1652 ;;		line 28 in file "serial.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;		None
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;		None
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1    wreg      void 
  1659 ;; Registers used:
  1660 ;;		wreg, status,2, cstack
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1670 ;;Total ram usage:        0 bytes
  1671 ;; Hardware stack levels used: 1
  1672 ;; Hardware stack levels required when called: 1
  1673 ;; This function calls:
  1674 ;;		_readSerial
  1675 ;; This function is called by:
  1676 ;;		_processInterruptService
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           	psect	text23
  1681  0012AC                     __ptext23:
  1682                           	callstack 0
  1683  0012AC                     _serialHandle:
  1684                           	callstack 23
  1685  0012AC                     
  1686                           ;serial.c: 29:     FLAGS.bits.UART_RECEIVED = 1;
  1687  0012AC  8457               	bsf	_FLAGS^0,2,c
  1688  0012AE                     
  1689                           ;serial.c: 30:     readSerialValue = readSerial();
  1690  0012AE  EC83  F009         	call	_readSerial	;wreg free
  1691  0012B2  6E56               	movwf	_readSerialValue^0,c
  1692  0012B4  0012               	return		;funcret
  1693  0012B6                     __end_of_serialHandle:
  1694                           	callstack 0
  1695                           
  1696 ;; *************** function _readSerial *****************
  1697 ;; Defined at:
  1698 ;;		line 41 in file "serial.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      unsigned char 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;Total ram usage:        0 bytes
  1717 ;; Hardware stack levels used: 1
  1718 ;; This function calls:
  1719 ;;		Nothing
  1720 ;; This function is called by:
  1721 ;;		_serialHandle
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           	psect	text24
  1726  001306                     __ptext24:
  1727                           	callstack 0
  1728  001306                     _readSerial:
  1729                           	callstack 23
  1730  001306                     
  1731                           ;serial.c: 42:     return RCREG1;
  1732  001306  50AE               	movf	174,w,c	;volatile
  1733  001308  0012               	return		;funcret
  1734  00130A                     __end_of_readSerial:
  1735                           	callstack 0
  1736                           
  1737 ;; *************** function _buttonHandle *****************
  1738 ;; Defined at:
  1739 ;;		line 23 in file "button.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;		None
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;		None
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      void 
  1746 ;; Registers used:
  1747 ;;		None
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;Total ram usage:        0 bytes
  1758 ;; Hardware stack levels used: 1
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_processInterruptService
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text25
  1767  001230                     __ptext25:
  1768                           	callstack 0
  1769  001230                     _buttonHandle:
  1770                           	callstack 24
  1771  001230                     
  1772                           ;button.c: 24:     if (FLAGS.bits.PUSH_REQUEST_SERVICED == 1 && FLAGS.bits.PUSHED_BUTTON
      +                           == 0) {
  1773  001230  A657               	btfss	_FLAGS^0,3,c
  1774  001232  EF1D  F009         	goto	i2u2_41
  1775  001236  EF1F  F009         	goto	i2u2_40
  1776  00123A                     i2u2_41:
  1777  00123A  EF27  F009         	goto	i2l248
  1778  00123E                     i2u2_40:
  1779  00123E  B857               	btfsc	_FLAGS^0,4,c
  1780  001240  EF24  F009         	goto	i2u3_41
  1781  001244  EF26  F009         	goto	i2u3_40
  1782  001248                     i2u3_41:
  1783  001248  EF27  F009         	goto	i2l248
  1784  00124C                     i2u3_40:
  1785  00124C                     
  1786                           ;button.c: 25:         FLAGS.bits.PUSHED_BUTTON = 1;
  1787  00124C  8857               	bsf	_FLAGS^0,4,c
  1788  00124E                     i2l248:
  1789  00124E  0012               	return		;funcret
  1790  001250                     __end_of_buttonHandle:
  1791                           	callstack 0
  1792                           
  1793 ;; *************** function _SPIHandle *****************
  1794 ;; Defined at:
  1795 ;;		line 55 in file "spi.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;		None
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;		None
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  1    wreg      void 
  1802 ;; Registers used:
  1803 ;;		wreg, status,2, cstack
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1813 ;;Total ram usage:        0 bytes
  1814 ;; Hardware stack levels used: 1
  1815 ;; Hardware stack levels required when called: 2
  1816 ;; This function calls:
  1817 ;;		_spiRead
  1818 ;; This function is called by:
  1819 ;;		_processInterruptService
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           	psect	text26
  1824  001278                     __ptext26:
  1825                           	callstack 0
  1826  001278                     _SPIHandle:
  1827                           	callstack 22
  1828  001278                     
  1829                           ;spi.c: 56:     readSPIValue = spiRead();
  1830  001278  EC63  F009         	call	_spiRead	;wreg free
  1831  00127C  6E58               	movwf	_readSPIValue^0,c
  1832  00127E                     
  1833                           ;spi.c: 57:     FLAGS.bits.SPI_READ_REQUEST = 1;
  1834  00127E  8257               	bsf	_FLAGS^0,1,c
  1835  001280                     
  1836                           ;spi.c: 58:     FLAGS.bits.DISPLAY_SPI_READING = 1;
  1837  001280  8C57               	bsf	_FLAGS^0,6,c
  1838  001282  0012               	return		;funcret
  1839  001284                     __end_of_SPIHandle:
  1840                           	callstack 0
  1841                           
  1842 ;; *************** function _spiRead *****************
  1843 ;; Defined at:
  1844 ;;		line 49 in file "spi.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;		None
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;		None
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      unsigned char 
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;Total ram usage:        0 bytes
  1863 ;; Hardware stack levels used: 1
  1864 ;; Hardware stack levels required when called: 1
  1865 ;; This function calls:
  1866 ;;		_spiReceiveWait
  1867 ;; This function is called by:
  1868 ;;		_SPIHandle
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text27
  1873  0012C6                     __ptext27:
  1874                           	callstack 0
  1875  0012C6                     _spiRead:
  1876                           	callstack 22
  1877  0012C6                     
  1878                           ;spi.c: 51:     spiReceiveWait();
  1879  0012C6  EC34  F009         	call	_spiReceiveWait	;wreg free
  1880  0012CA                     
  1881                           ;spi.c: 52:     return (SSPBUF);
  1882  0012CA  50C9               	movf	201,w,c	;volatile
  1883  0012CC  0012               	return		;funcret
  1884  0012CE                     __end_of_spiRead:
  1885                           	callstack 0
  1886                           
  1887 ;; *************** function _spiReceiveWait *****************
  1888 ;; Defined at:
  1889 ;;		line 32 in file "spi.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;		None
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;		None
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		None
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;Total ram usage:        0 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; This function calls:
  1910 ;;		Nothing
  1911 ;; This function is called by:
  1912 ;;		_spiRead
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text28
  1917  001268                     __ptext28:
  1918                           	callstack 0
  1919  001268                     _spiReceiveWait:
  1920                           	callstack 22
  1921  001268                     i2l97:
  1922  001268  A0C7               	btfss	199,0,c	;volatile
  1923  00126A  EF39  F009         	goto	i2u1_41
  1924  00126E  EF3B  F009         	goto	i2u1_40
  1925  001272                     i2u1_41:
  1926  001272  EF34  F009         	goto	i2l97
  1927  001276                     i2u1_40:
  1928  001276  0012               	return		;funcret
  1929  001278                     __end_of_spiReceiveWait:
  1930                           	callstack 0
  1931                           
  1932                           	psect	rparam
  1933  0000                     
  1934                           	psect	temp
  1935  00005B                     btemp:
  1936                           	callstack 0
  1937  00005B                     	ds	1
  1938  0000                     int$flags	set	btemp
  1939  0000                     wtemp8	set	btemp+1
  1940  0000                     ttemp5	set	btemp+1
  1941  0000                     ttemp6	set	btemp+4
  1942  0000                     ttemp7	set	btemp+8
  1943                           
  1944                           	psect	idloc
  1945                           
  1946                           ;Config register IDLOC0 @ 0x200000
  1947                           ;	unspecified, using default values
  1948  200000                     	org	2097152
  1949  200000  FF                 	db	255
  1950                           
  1951                           ;Config register IDLOC1 @ 0x200001
  1952                           ;	unspecified, using default values
  1953  200001                     	org	2097153
  1954  200001  FF                 	db	255
  1955                           
  1956                           ;Config register IDLOC2 @ 0x200002
  1957                           ;	unspecified, using default values
  1958  200002                     	org	2097154
  1959  200002  FF                 	db	255
  1960                           
  1961                           ;Config register IDLOC3 @ 0x200003
  1962                           ;	unspecified, using default values
  1963  200003                     	org	2097155
  1964  200003  FF                 	db	255
  1965                           
  1966                           ;Config register IDLOC4 @ 0x200004
  1967                           ;	unspecified, using default values
  1968  200004                     	org	2097156
  1969  200004  FF                 	db	255
  1970                           
  1971                           ;Config register IDLOC5 @ 0x200005
  1972                           ;	unspecified, using default values
  1973  200005                     	org	2097157
  1974  200005  FF                 	db	255
  1975                           
  1976                           ;Config register IDLOC6 @ 0x200006
  1977                           ;	unspecified, using default values
  1978  200006                     	org	2097158
  1979  200006  FF                 	db	255
  1980                           
  1981                           ;Config register IDLOC7 @ 0x200007
  1982                           ;	unspecified, using default values
  1983  200007                     	org	2097159
  1984  200007  FF                 	db	255
  1985                           
  1986                           	psect	config
  1987                           
  1988                           ; Padding undefined space
  1989  300000                     	org	3145728
  1990  300000  FF                 	db	255
  1991                           
  1992                           ;Config register CONFIG1H @ 0x300001
  1993                           ;	Oscillator Selection bits
  1994                           ;	OSC = XT, XT oscillator
  1995                           ;	Fail-Safe Clock Monitor Enable bit
  1996                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1997                           ;	Internal/External Oscillator Switchover bit
  1998                           ;	IESO = OFF, Two-Speed Start-up disabled
  1999  300001                     	org	3145729
  2000  300001  01                 	db	1
  2001                           
  2002                           ;Config register CONFIG2L @ 0x300002
  2003                           ;	Power-up Timer Enable bit
  2004                           ;	PWRT = OFF, PWRT disabled
  2005                           ;	Brown-out Reset Enable bits
  2006                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2007                           ;	Brown-out Voltage bits
  2008                           ;	BORV = 3, Minimum setting
  2009  300002                     	org	3145730
  2010  300002  19                 	db	25
  2011                           
  2012                           ;Config register CONFIG2H @ 0x300003
  2013                           ;	Watchdog Timer
  2014                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2015                           ;	Watchdog Timer Postscale Select bits
  2016                           ;	WDTPS = 32768, 1:32768
  2017  300003                     	org	3145731
  2018  300003  1E                 	db	30
  2019                           
  2020                           ;Config register CONFIG3L @ 0x300004
  2021                           ;	Processor Data Memory Mode Select bits
  2022                           ;	MODE = MC, Microcontroller mode
  2023                           ;	Address Bus Width Select bits
  2024                           ;	ADDRBW = ADDR20BIT, 20-bit Address Bus
  2025                           ;	Data Bus Width Select bit
  2026                           ;	DATABW = DATA16BIT, 16-bit External Bus mode
  2027                           ;	External Bus Data Wait Enable bit
  2028                           ;	WAIT = OFF, Wait selections are unavailable for table reads and table writes
  2029  300004                     	org	3145732
  2030  300004  F3                 	db	243
  2031                           
  2032                           ;Config register CONFIG3H @ 0x300005
  2033                           ;	CCP2 MUX bit
  2034                           ;	CCP2MX = PORTC, ECCP2 input/output is multiplexed with RC1
  2035                           ;	ECCP MUX bit
  2036                           ;	ECCPMX = PORTE, ECCP1/3 (P1B/P1C/P3B/P3C) are multiplexed onto RE6, RE5, RE4 and RE3 r
      +                          espectively
  2037                           ;	Low-Power Timer1 Oscillator Enable bit
  2038                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2039                           ;	MCLR Pin Enable bit
  2040                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
  2041  300005                     	org	3145733
  2042  300005  83                 	db	131
  2043                           
  2044                           ;Config register CONFIG4L @ 0x300006
  2045                           ;	Stack Full/Underflow Reset Enable bit
  2046                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2047                           ;	Single-Supply ICSP Enable bit
  2048                           ;	LVP = OFF, Single-Supply ICSP disabled
  2049                           ;	Boot Block Size Select bits
  2050                           ;	BBSIZ = BB2K, 1K word (2 Kbytes) Boot Block size
  2051                           ;	Extended Instruction Set Enable bit
  2052                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2053                           ;	Background Debugger Enable bit
  2054                           ;	DEBUG = 0x1, unprogrammed default
  2055  300006                     	org	3145734
  2056  300006  81                 	db	129
  2057                           
  2058                           ; Padding undefined space
  2059  300007                     	org	3145735
  2060  300007  FF                 	db	255
  2061                           
  2062                           ;Config register CONFIG5L @ 0x300008
  2063                           ;	Code Protection bit Block 0
  2064                           ;	CP0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not code-protected
  2065                           ;	Code Protection bit Block 1
  2066                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2067                           ;	Code Protection bit Block 2
  2068                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2069                           ;	Code Protection bit Block 3
  2070                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2071                           ;	Code Protection bit Block 4
  2072                           ;	CP4 = OFF, Block 4 (010000-013FFFh) not code-protected
  2073                           ;	Code Protection bit Block 5
  2074                           ;	CP5 = OFF, Block 5 (014000-017FFFh) not code-protected
  2075                           ;	Code Protection bit Block 6
  2076                           ;	CP6 = OFF, Block 6 (01BFFF-018000h) not code-protected
  2077                           ;	Code Protection bit Block 7
  2078                           ;	CP7 = OFF, Block 7 (01C000-01FFFFh) not code-protected
  2079  300008                     	org	3145736
  2080  300008  FF                 	db	255
  2081                           
  2082                           ;Config register CONFIG5H @ 0x300009
  2083                           ;	Boot Block Code Protection bit
  2084                           ;	CPB = OFF, Boot Block (000000-0007FFh) not code-protected
  2085                           ;	Data EEPROM Code Protection bit
  2086                           ;	CPD = OFF, Data EEPROM not code-protected
  2087  300009                     	org	3145737
  2088  300009  C0                 	db	192
  2089                           
  2090                           ;Config register CONFIG6L @ 0x30000A
  2091                           ;	Write Protection bit Block 0
  2092                           ;	WRT0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not write-protected
  2093                           ;	Write Protection bit Block 1
  2094                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2095                           ;	Write Protection bit Block 2
  2096                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2097                           ;	Write Protection bit Block 3
  2098                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2099                           ;	Write Protection bit Block 4
  2100                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  2101                           ;	Write Protection bit Block 5
  2102                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  2103                           ;	Write Protection bit Block 6
  2104                           ;	WRT6 = OFF, Block 6 (01BFFF-018000h) not write-protected
  2105                           ;	Write Protection bit Block 7
  2106                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  2107  30000A                     	org	3145738
  2108  30000A  FF                 	db	255
  2109                           
  2110                           ;Config register CONFIG6H @ 0x30000B
  2111                           ;	Configuration Register Write Protection bit
  2112                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2113                           ;	Boot Block Write Protection bit
  2114                           ;	WRTB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not write-protected
  2115                           ;	Data EEPROM Write Protection bit
  2116                           ;	WRTD = OFF, Data EEPROM not write-protected
  2117  30000B                     	org	3145739
  2118  30000B  E0                 	db	224
  2119                           
  2120                           ;Config register CONFIG7L @ 0x30000C
  2121                           ;	Table Read Protection bit Block 0
  2122                           ;	EBTR0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not protected from table reads
      +                           executed in other blocks
  2123                           ;	Table Read Protection bit Block 1
  2124                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2125                           ;	Table Read Protection bit Block 2
  2126                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2127                           ;	Table Read Protection bit Block 3
  2128                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2129                           ;	Table Read Protection bit Block 4
  2130                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  2131                           ;	Table Read Protection bit Block 5
  2132                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  2133                           ;	Table Read Protection bit Block 6
  2134                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  2135                           ;	Table Read Protection bit Block 7
  2136                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  2137  30000C                     	org	3145740
  2138  30000C  FF                 	db	255
  2139                           
  2140                           ;Config register CONFIG7H @ 0x30000D
  2141                           ;	Boot Block Table Read Protection bit
  2142                           ;	EBTRB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not protected from table re
      +                          ads executed in other blocks
  2143  30000D                     	org	3145741
  2144  30000D  40                 	db	64
  2145                           tosu	equ	0xFFF
  2146                           tosh	equ	0xFFE
  2147                           tosl	equ	0xFFD
  2148                           stkptr	equ	0xFFC
  2149                           pclatu	equ	0xFFB
  2150                           pclath	equ	0xFFA
  2151                           pcl	equ	0xFF9
  2152                           tblptru	equ	0xFF8
  2153                           tblptrh	equ	0xFF7
  2154                           tblptrl	equ	0xFF6
  2155                           tablat	equ	0xFF5
  2156                           prodh	equ	0xFF4
  2157                           prodl	equ	0xFF3
  2158                           indf0	equ	0xFEF
  2159                           postinc0	equ	0xFEE
  2160                           postdec0	equ	0xFED
  2161                           preinc0	equ	0xFEC
  2162                           plusw0	equ	0xFEB
  2163                           fsr0h	equ	0xFEA
  2164                           fsr0l	equ	0xFE9
  2165                           wreg	equ	0xFE8
  2166                           indf1	equ	0xFE7
  2167                           postinc1	equ	0xFE6
  2168                           postdec1	equ	0xFE5
  2169                           preinc1	equ	0xFE4
  2170                           plusw1	equ	0xFE3
  2171                           fsr1h	equ	0xFE2
  2172                           fsr1l	equ	0xFE1
  2173                           bsr	equ	0xFE0
  2174                           indf2	equ	0xFDF
  2175                           postinc2	equ	0xFDE
  2176                           postdec2	equ	0xFDD
  2177                           preinc2	equ	0xFDC
  2178                           plusw2	equ	0xFDB
  2179                           fsr2h	equ	0xFDA
  2180                           fsr2l	equ	0xFD9
  2181                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    80
    Data        2
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      90
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_spiInit
    _SPICallback->_spiWrite

Critical Paths under _service in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _service in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _service in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _service in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _service in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _service in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _service in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _service in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _service in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _service in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _service in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _service in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _service in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _service in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _service in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _service in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _service in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                80    80      0     332
                                              4 COMRAM    80    80      0
                        _SPICallback
                     _buttonCallback
                     _buttonDebounce
               _displayRequestHandle
                   _initialiseButton
                     _serialCallback
                 _setButtonInterrput
                        _setButtonIo
                      _setInterrupts
                              _setIo
                    _setSPIInterrupt
                          _setSerial
                        _setSerialIo
                     _setupDisplayIo
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     316
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setupDisplayIo                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSerialIo                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSerial                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSPIInterrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setIo                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setInterrupts                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setButtonIo                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setButtonInterrput                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _serialCallback                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialiseButton                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displayRequestHandle                                 0     0      0       0
                         _displaySPI
                      _displaySerial
 ---------------------------------------------------------------------------------
 (2) _displaySerial                                        0     0      0       0
                    _displayCallback
 ---------------------------------------------------------------------------------
 (2) _displaySPI                                           0     0      0       0
                    _displayCallback
 ---------------------------------------------------------------------------------
 (3) _displayCallback                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttonDebounce                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttonCallback                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPICallback                                          0     0      0      15
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _spiWrite                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _service                                              0     0      0       0
                   _interruptService
 ---------------------------------------------------------------------------------
 (5) _interruptService                                     0     0      0       0
            _processInterruptService
 ---------------------------------------------------------------------------------
 (6) _processInterruptService                              0     0      0       0
                          _SPIHandle
                       _buttonHandle
                       _serialHandle
 ---------------------------------------------------------------------------------
 (7) _serialHandle                                         0     0      0       0
                         _readSerial
 ---------------------------------------------------------------------------------
 (8) _readSerial                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _buttonHandle                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _SPIHandle                                            0     0      0       0
                            _spiRead
 ---------------------------------------------------------------------------------
 (8) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (9) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPICallback
     _spiWrite
   _buttonCallback
   _buttonDebounce
   _displayRequestHandle
     _displaySPI
       _displayCallback
     _displaySerial
       _displayCallback
   _initialiseButton
   _serialCallback
   _setButtonInterrput
   _setButtonIo
   _setInterrupts
   _setIo
   _setSPIInterrupt
   _setSerial
   _setSerialIo
   _setupDisplayIo
   _spiInit

 _service (ROOT)
   _interruptService
     _processInterruptService
       _SPIHandle
         _spiRead
           _spiReceiveWait
       _buttonHandle
       _serialHandle
         _readSerial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      5A       1       95.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5A      32        0.0%
DATA                 0      0      5A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jul  6 14:14:55 2021

        ?_processInterruptService 0001                       _SSPSTATbits 000FC7  
                              l94 11DE                                l89 12D8  
                             l103 12C4                               l211 12EA  
                             l131 130C                               l117 12BC  
                             l205 1266                               l134 12DE  
                             l240 12F0                               l208 12D2  
                             l137 12E4                               l243 1302  
                             l244 1304                               l237 1300  
                             l254 122E                               l271 128C  
                             l280 11F8                               l274 1296  
                             l283 120C                               l277 12A0  
                             l286 12F6                               l990 12F2  
                             l992 12C0                               _GIE 007F97  
                             u120 11EE                               u121 11EA  
                             u130 1206                               u210 11C2  
                             u131 1202                               u211 11BE  
                             u140 1226                               u220 1092  
                             u141 1222                               u230 10AA  
                             u231 10A6                               u240 10BE  
                             u241 10BA                               u250 10D2  
                             u251 10CE                               u260 10E6  
                             u261 10E2                               u270 10FA  
                             u271 10F6                               wreg 000FE8  
                  ?_displaySerial 0001            ??_displayRequestHandle 0001  
                            l1020 128E                              l1022 1292  
                            l1030 12D4                              l1024 1298  
                            l1040 1258                              l1032 12CE  
                            l1200 10E8                              l1026 129C  
                            l1042 125A                              l1034 1250  
                            l1050 1284                              l1202 10EC  
                            l1052 12EC                              l1044 125C  
                            l1036 1252                              l1204 10FA  
                            l1054 12E0                              l1046 125E  
                            l1038 1256                              l1080 11F2  
                            l1056 12FE                              l1048 1260  
                            l1160 11D0                              l1074 12B6  
                            l1082 1206                              l1058 12DA  
                            l1162 11D6                              l1154 11B0  
                            l1170 105E                              l1092 120E  
                            l1084 120A                              l1076 11E0  
                            l1164 11D8                              l1156 11B4  
                            l1180 10AA                              l1172 1062  
                            l1094 1214                              l1078 11EE  
                            l1086 12E6                              l1166 11DA  
                            l1158 11C2                              l1190 10C4  
                            l1182 10AE                              l1174 1076  
                            l1088 1302                              l1096 1226  
                            l1192 10D2                              l1184 10B0  
                            l1176 1088                              l1168 1052  
                            l1098 1228                              l1194 10D6  
                            l1186 10BE                              l1178 109C  
                            l1196 10D8                              l1188 10C2  
                            l1198 10E6                              _PEIE 007F96  
                            i2l45 12A8                              i2l97 1268  
                            _main 1052                              btemp 005B  
                            start 000E                      ___param_bank 000000  
        __end_of_interruptService 12FE                             ?_main 0001  
                           _BRGH1 007D62                             _CREN1 007D5C  
                           _FLAGS 0057                             _LATC0 007C58  
                           _RC1IE 007CED                             _RC1IF 007CF5  
                           i2l100 1276                             i2l111 12CC  
                           i2l114 1282                             i2l214 12B4  
                           i2l223 1308                             i2l170 12FC  
                           i2l167 117A                             i2l248 124E  
                           i2l962 1268                             i2l970 1306  
                           i2l964 12C6                             i2l980 12AC  
                           i2l966 12CA                             i2l974 1278  
                           i2l982 12AE                             i2l976 127E  
                           i2l984 1230                             i2l978 1280  
                           i2l986 123E                             i2l994 1106  
                           i2l988 124C                             i2l996 1114  
                           i2l998 1122                             _SPEN1 007D5F  
                           _SPBRG 000FAF                             _PORTD 000F83  
                           _TRISD 000F95                             _SSPIE 007CEB  
                           _SSPIF 007CF3                             _TXEN1 007D65  
                           _SYNC1 007D64                             _setIo 130C  
                ?_displayCallback 0001                __size_of_SPIHandle 000C  
                 __end_of_spiInit 11E0                   __end_of_spiRead 12CE  
                           tablat 000FF5                   __end_of_service 12AC  
                           ttemp5 005C                             ttemp6 005F  
                           ttemp7 0063                             status 000FD8  
           __end_of_setInterrupts 12E0                             wtemp8 005C  
                ??_setupDisplayIo 0001                   __initialization 117C  
                    __end_of_main 1106                   _readSerialValue 0056  
                          ??_main 0005                     __activetblptr 000001  
                    ?_setButtonIo 0001                   ??_displaySerial 0001  
               ?_initialiseButton 0001                      ?_setSerialIo 0001  
                          ?_setIo 0001                ??_initialiseButton 0001  
                   ?_buttonHandle 0001                            _INT0IE 007F94  
                          _INT0IF 007F91                            i2l1000 1126  
                          i2l1010 1156                            i2l1002 1128  
                          i2l1004 1136                            i2l1012 1158  
                          i2l1100 12A4                            i2l1014 1166  
                          i2l1006 1144                            i2l1016 1174  
                          i2l1008 1152                            i2l1018 1178  
                          i2l1028 12F8                            _RCREG1 000FAE  
                          i2u1_40 1276                            i2u1_41 1272  
                          i2u2_40 123E                            i2u2_41 123A  
                          i2u3_40 124C                            i2u3_41 1248  
                          i2u4_40 1114                            i2u4_41 1110  
                          i2u5_40 1122                            i2u5_41 111E  
                          i2u6_40 1136                            i2u6_41 1132  
                          i2u7_40 1144                            i2u7_41 1140  
                          i2u8_40 1152                            i2u8_41 114E  
                          _TRISB0 007C98                            i2u9_40 1166  
                          _TRISC2 007CA2                            i2u9_41 1162  
                          _TRISC3 007CA3                            _TRISC4 007CA4  
                          _TRISC5 007CA5                            _TRISC6 007CA6  
                          _TRISC7 007CA7                            _SSPBUF 000FC9  
                          _TXREG1 000FAD                _setButtonInterrput 12E0  
             ?_setButtonInterrput 0001                 __end_of_SPIHandle 1284  
         __size_of_serialCallback 0006                            isa$std 000001  
                    __pdataCOMRAM 0059                      ?_SPICallback 0001  
                    __mediumconst 0000                  __end_of_spiWrite 12C6  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                         ??_spiInit 0004  
                       ??_spiRead 0001                         ??_service 0001  
                  ??_buttonHandle 0001              ??_setButtonInterrput 0001  
                      __accesstop 0060           __end_of__initialization 119C  
                   ___rparam_used 000001                    __pcstackCOMRAM 0001  
                   __end_of_setIo 130E          __size_of_setSPIInterrupt 0006  
__size_of_processInterruptService 0076                           ??_setIo 0001  
               ?_interruptService 0001           __size_of_spiReceiveWait 0010  
              __size_of_setSerial 0018                ??_interruptService 0001  
                         _INTEDG0 007F8E                           i2u10_40 1174  
                         i2u10_41 1170              __size_of_setButtonIo 0004  
                      _displaySPI 1298                           _SSPSTAT 000FC7  
         __size_of_buttonCallback 0004              __size_of_setSerialIo 0006  
         __size_of_buttonDebounce 0022     __size_of_displayRequestHandle 002E  
                   ?_serialHandle 0001                           __Hparam 0000  
                         __Lparam 0000                         ?_spiWrite 0001  
                      _readSerial 1306              __end_of_buttonHandle 1250  
                    __psmallconst 1000                    _serialCallback 12E6  
                         __pcinit 117C                           __ramtop 1000  
                         __ptext0 1052                           __ptext1 11AE  
                         __ptext2 1284                           __ptext3 12CE  
                         __ptext4 1250                           __ptext5 12D4  
                         __ptext6 130C                           __ptext7 12DA  
                         __ptext8 12FE                           __ptext9 12E0  
                         _spiInit 11AE                           _spiRead 12C6  
                         _service 0008              __size_of_SPICallback 0008  
                  __pintcode_body 12A2              end_of_initialization 119C  
               __end_of_setSerial 1268                    ??_serialHandle 0001  
                         int_func 12A2                 ??_setSPIInterrupt 0001  
               __end_ofmain@F4618 1051          __size_of_displayCallback 0006  
       __size_of_initialiseButton 0006                        ??_spiWrite 0001  
          __end_of_serialCallback 12EC                           postinc2 000FDE  
          __size_of_setInterrupts 0006                         _SPIHandle 1278  
         _processInterruptService 1106                       ?_displaySPI 0001  
           __end_of_displaySerial 1298                       spiWrite@dat 0001  
                 ?_serialCallback 0001                    _spiReceiveWait 1268  
                     ?_readSerial 0001           __size_of_setupDisplayIo 000A  
                   __pidataCOMRAM 130A                        ?_SPIHandle 0001  
             start_initialization 117C                    _buttonCallback 1302  
     __size_of_setButtonInterrput 0006                    _buttonDebounce 120E  
                   _setInterrupts 12DA                      _readSPIValue 0058  
           __size_of_buttonHandle 0020            __end_of_spiReceiveWait 1278  
             __size_of_displaySPI 000A                 ??_displayCallback 0001  
            __end_of_serialHandle 12B6         ??_processInterruptService 0001  
                     __pbssCOMRAM 0055            __end_of_buttonCallback 1306  
       __size_of_interruptService 0006             buttonDebounce@counter 0059  
          __end_of_buttonDebounce 1230                      _buttonHandle 1230  
             __size_of_readSerial 0004                    ?_setInterrupts 0001  
                _initialiseButton 12EC                   ?_spiReceiveWait 0001  
                       __pintcode 0008      __end_of_displayRequestHandle 120E  
               __size_of_spiWrite 0008                     ??_setButtonIo 0001  
                     __smallconst 1000                       ??_SPIHandle 0001  
                 _setSPIInterrupt 12D4                          ?_spiInit 0001  
                        ?_spiRead 0001                   ?_buttonCallback 0001  
                        ?_service 0001                     ??_setSerialIo 0001  
                 ?_buttonDebounce 0001                    __size_of_setIo 0002  
            spiInit@sTransmitEdge 0003   __end_of_processInterruptService 117C  
                       _setSerial 1250                spiInit@sDataSample 0001  
                       main@F4618 1001                          _SSP1CON1 000FC6  
                  _setupDisplayIo 1284                     ??_SPICallback 0002  
                    ??_displaySPI 0001               __end_of_setButtonIo 1302  
                 ??_setInterrupts 0001               __end_of_setSerialIo 12D4  
                ??_serialCallback 0001                        ?_setSerial 0001  
                        __Hrparam 0000                          __Lrparam 0000  
                    __Lsmallconst 1000            __end_of_setupDisplayIo 128E  
           __size_of_serialHandle 000A                      ??_readSerial 0001  
              __end_of_displaySPI 12A2           __end_of_setSPIInterrupt 12DA  
                _interruptService 12F8                          __ptext10 12E6  
                        __ptext11 12EC                          __ptext12 11E0  
                        __ptext21 12F8                          __ptext13 128E  
                        __ptext22 1106                          __ptext14 1298  
                        __ptext23 12AC                          __ptext15 12F2  
                        __ptext24 1306                          __ptext16 120E  
                        __ptext25 1230                          __ptext17 1302  
                        __ptext26 1278                          __ptext18 12B6  
                        __ptext27 12C6                          __ptext19 12BE  
                        __ptext28 1268                  __size_of_spiInit 0032  
                __size_of_spiRead 0008                  __size_of_service 12A4  
             __end_of_SPICallback 12BE              _displayRequestHandle 11E0  
              __end_of_readSerial 130A                     __size_of_main 00B4  
                    _serialHandle 12AC                   _displayCallback 12F2  
                        isa$xinst 000000                   ?_setupDisplayIo 0001  
                        _spiWrite 12BE                          _outValue 0055  
                        int$flags 005B                      spiInit@sType 0004  
          __size_of_displaySerial 000A                 spiInit@sClockIdle 0002  
                        main@test 0005                       _setButtonIo 12FE  
        __end_of_initialiseButton 12F2        __end_of_setButtonInterrput 12E6  
                     _setSerialIo 12CE                          intlevel2 0000  
           ?_displayRequestHandle 0001                  ??_spiReceiveWait 0001  
                     ??_setSerial 0001                  ?_setSPIInterrupt 0001  
                ??_buttonCallback 0001                  ??_buttonDebounce 0001  
                     _SPICallback 12B6                     _displaySerial 128E  
         __end_of_displayCallback 12F8  
