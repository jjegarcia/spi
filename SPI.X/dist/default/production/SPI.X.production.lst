

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jul 13 21:50:25 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F8722 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataCOMRAM
    84  001338                     __pidataCOMRAM:
    85                           	callstack 0
    86                           
    87                           ;initializer for buttonDebounce@counter
    88  001338  00FF               	dw	255
    89                           
    90                           	psect	smallconst
    91  001000                     __psmallconst:
    92                           	callstack 0
    93  001000  00                 	db	0
    94  001001                     main@F4619:
    95                           	callstack 0
    96  001001  73                 	db	115
    97  001002  73                 	db	115
    98  001003  73                 	db	115
    99  001004  64                 	db	100
   100  001005  64                 	db	100
   101  001006  64                 	db	100
   102  001007  64                 	db	100
   103  001008  00                 	db	0
   104  001009  00                 	db	0
   105  00100A  00                 	db	0
   106  00100B  00                 	db	0
   107  00100C  00                 	db	0
   108  00100D  00                 	db	0
   109  00100E  00                 	db	0
   110  00100F  00                 	db	0
   111  001010  00                 	db	0
   112  001011  00                 	db	0
   113  001012  00                 	db	0
   114  001013  00                 	db	0
   115  001014  00                 	db	0
   116  001015  00                 	db	0
   117  001016  00                 	db	0
   118  001017  00                 	db	0
   119  001018  00                 	db	0
   120  001019  00                 	db	0
   121  00101A  00                 	db	0
   122  00101B  00                 	db	0
   123  00101C  00                 	db	0
   124  00101D  00                 	db	0
   125  00101E  00                 	db	0
   126  00101F  00                 	db	0
   127  001020  00                 	db	0
   128  001021  00                 	db	0
   129  001022  00                 	db	0
   130  001023  00                 	db	0
   131  001024  00                 	db	0
   132  001025  00                 	db	0
   133  001026  00                 	db	0
   134  001027  00                 	db	0
   135  001028  00                 	db	0
   136  001029  00                 	db	0
   137  00102A  00                 	db	0
   138  00102B  00                 	db	0
   139  00102C  00                 	db	0
   140  00102D  00                 	db	0
   141  00102E  00                 	db	0
   142  00102F  00                 	db	0
   143  001030  00                 	db	0
   144  001031  00                 	db	0
   145  001032  00                 	db	0
   146  001033  00                 	db	0
   147  001034  00                 	db	0
   148  001035  00                 	db	0
   149  001036  00                 	db	0
   150  001037  00                 	db	0
   151  001038  00                 	db	0
   152  001039  00                 	db	0
   153  00103A  00                 	db	0
   154  00103B  00                 	db	0
   155  00103C  00                 	db	0
   156  00103D  00                 	db	0
   157  00103E  00                 	db	0
   158  00103F  00                 	db	0
   159  001040  00                 	db	0
   160  001041  00                 	db	0
   161  001042  00                 	db	0
   162  001043  00                 	db	0
   163  001044  00                 	db	0
   164  001045  00                 	db	0
   165  001046  00                 	db	0
   166  001047  00                 	db	0
   167  001048  00                 	db	0
   168  001049  00                 	db	0
   169  00104A  00                 	db	0
   170  00104B  00                 	db	0
   171  00104C  00                 	db	0
   172  00104D  00                 	db	0
   173  00104E  00                 	db	0
   174  00104F  00                 	db	0
   175  001050  00                 	db	0
   176  001051                     __end_ofmain@F4619:
   177                           	callstack 0
   178  0000                     _PORTD	set	3971
   179  0000                     _TRISD	set	3989
   180  0000                     _TXREG1	set	4013
   181  0000                     _RCREG1	set	4014
   182  0000                     _SPBRG	set	4015
   183  0000                     _SSP1BUF	set	4041
   184  0000                     _SSP1STATbits	set	4039
   185  0000                     _SSP1CON1	set	4038
   186  0000                     _SSP1STAT	set	4039
   187  0000                     _TRISB0	set	31896
   188  0000                     _TRISC6	set	31910
   189  0000                     _TRISC7	set	31911
   190  0000                     _TXEN1	set	32101
   191  0000                     _CREN1	set	32092
   192  0000                     _SPEN1	set	32095
   193  0000                     _SYNC1	set	32100
   194  0000                     _BRGH1	set	32098
   195  0000                     _INT0IF	set	32657
   196  0000                     _RC1IF	set	31989
   197  0000                     _RC1IE	set	31981
   198  0000                     _INT0IE	set	32660
   199  0000                     _INTEDG0	set	32654
   200  0000                     _PEIE	set	32662
   201  0000                     _GIE	set	32663
   202  0000                     _CKP1	set	32308
   203  0000                     _CKE1	set	32318
   204  0000                     _TRISC2	set	31906
   205  0000                     _LATC0	set	31832
   206  0000                     _TRISC3	set	31907
   207  0000                     _TRISC4	set	31908
   208  0000                     _TRISC5	set	31909
   209  0000                     _SSP1IE	set	31979
   210  0000                     _SSP1IF	set	31987
   211  001051  00                 	db	0	; dummy byte at the end
   212  0000                     
   213                           ; #config settings
   214                           
   215                           	psect	cinit
   216  0011B2                     __pcinit:
   217                           	callstack 0
   218  0011B2                     start_initialization:
   219                           	callstack 0
   220  0011B2                     __initialization:
   221                           	callstack 0
   222                           
   223                           ; Initialize objects allocated to COMRAM (2 bytes)
   224                           ; load TBLPTR registers with __pidataCOMRAM
   225  0011B2  0E38               	movlw	low __pidataCOMRAM
   226  0011B4  6EF6               	movwf	tblptrl,c
   227  0011B6  0E13               	movlw	high __pidataCOMRAM
   228  0011B8  6EF7               	movwf	tblptrh,c
   229  0011BA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   230  0011BC  6EF8               	movwf	tblptru,c
   231  0011BE  0009               	tblrd		*+	;fetch initializer
   232  0011C0  CFF5 F059          	movff	tablat,__pdataCOMRAM
   233  0011C4  0009               	tblrd		*+	;fetch initializer
   234  0011C6  CFF5 F05A          	movff	tablat,__pdataCOMRAM+1
   235                           
   236                           ; Clear objects allocated to COMRAM (4 bytes)
   237  0011CA  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   238  0011CC  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   239  0011CE  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   240  0011D0  6A55               	clrf	__pbssCOMRAM& (0+255),c
   241  0011D2                     end_of_initialization:
   242                           	callstack 0
   243  0011D2                     __end_of__initialization:
   244                           	callstack 0
   245  0011D2  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   246  0011D4  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   247  0011D6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   248  0011D8  6EF8               	movwf	tblptru,c
   249  0011DA  0E10               	movlw	high __Lsmallconst
   250  0011DC  6EF7               	movwf	tblptrh,c
   251  0011DE  0100               	movlb	0
   252  0011E0  EF29  F008         	goto	_main	;jump to C main() function
   253                           
   254                           	psect	bssCOMRAM
   255  000055                     __pbssCOMRAM:
   256                           	callstack 0
   257  000055                     _ledValue:
   258                           	callstack 0
   259  000055                     	ds	1
   260  000056                     _readSerialValue:
   261                           	callstack 0
   262  000056                     	ds	1
   263  000057                     _FLAGS:
   264                           	callstack 0
   265  000057                     	ds	1
   266  000058                     _readSPIValue:
   267                           	callstack 0
   268  000058                     	ds	1
   269                           
   270                           	psect	dataCOMRAM
   271  000059                     __pdataCOMRAM:
   272                           	callstack 0
   273  000059                     buttonDebounce@counter:
   274                           	callstack 0
   275  000059                     	ds	2
   276                           
   277                           	psect	cstackCOMRAM
   278  000001                     __pcstackCOMRAM:
   279                           	callstack 0
   280  000001                     spiInit@sDataSample:
   281                           	callstack 0
   282  000001                     spiWrite@dat:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x0
   286  000001                     	ds	1
   287  000002                     spiInit@sClockIdle:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0x1
   291  000002                     	ds	1
   292  000003                     spiInit@sTransmitEdge:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0x2
   296  000003                     	ds	1
   297  000004                     spiInit@sType:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x3
   301  000004                     	ds	1
   302  000005                     main@test:
   303                           	callstack 0
   304                           
   305                           ; 80 bytes @ 0x4
   306  000005                     	ds	80
   307                           
   308 ;;
   309 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   310 ;;
   311 ;; *************** function _main *****************
   312 ;; Defined at:
   313 ;;		line 22 in file "newmain.c"
   314 ;; Parameters:    Size  Location     Type
   315 ;;		None
   316 ;; Auto vars:     Size  Location     Type
   317 ;;  test           80    4[COMRAM] const unsigned char [80]
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      void 
   320 ;; Registers used:
   321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   322 ;; Tracked objects:
   323 ;;		On entry : 0/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   328 ;;      Locals:        80       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   330 ;;      Totals:        80       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   331 ;;Total ram usage:       80 bytes
   332 ;; Hardware stack levels required when called: 9
   333 ;; This function calls:
   334 ;;		_SPICallback
   335 ;;		_buttonCallback
   336 ;;		_buttonDebounce
   337 ;;		_displayRequestHandle
   338 ;;		_initialiseButton
   339 ;;		_serialCallback
   340 ;;		_setButtonInterrput
   341 ;;		_setButtonIo
   342 ;;		_setInterrupts
   343 ;;		_setIo
   344 ;;		_setSPIInterrupt
   345 ;;		_setSerial
   346 ;;		_setSerialIo
   347 ;;		_setupDisplayIo
   348 ;;		_spiInit
   349 ;; This function is called by:
   350 ;;		Startup code after reset
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           	psect	text0
   355  001052                     __ptext0:
   356                           	callstack 0
   357  001052                     _main:
   358                           	callstack 22
   359  001052                     
   360                           ;newmain.c: 23:     setIo();
   361  001052  EC9D  F009         	call	_setIo	;wreg free
   362                           
   363                           ;newmain.c: 24:     setSPIInterrupt();
   364  001056  EC83  F009         	call	_setSPIInterrupt	;wreg free
   365                           
   366                           ;newmain.c: 25:     setSerialIo();
   367  00105A  EC80  F009         	call	_setSerialIo	;wreg free
   368  00105E                     
   369                           ;newmain.c: 26:     setSerial();
   370  00105E  EC3C  F009         	call	_setSerial	;wreg free
   371  001062                     
   372                           ;newmain.c: 27:     setupDisplayIo();
   373  001062  EC56  F009         	call	_setupDisplayIo	;wreg free
   374                           
   375                           ;newmain.c: 28:     initialiseButton();
   376  001066  EC8F  F009         	call	_initialiseButton	;wreg free
   377                           
   378                           ;newmain.c: 29:     setButtonInterrput();
   379  00106A  EC89  F009         	call	_setButtonInterrput	;wreg free
   380                           
   381                           ;newmain.c: 30:     setButtonIo();
   382  00106E  EC98  F009         	call	_setButtonIo	;wreg free
   383                           
   384                           ;newmain.c: 31:     setInterrupts();
   385  001072  EC86  F009         	call	_setInterrupts	;wreg free
   386  001076                     
   387                           ;newmain.c: 33:     spiInit(SPI_SLAVE_SS_DIS, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
   388  001076  0E00               	movlw	0
   389  001078  6E01               	movwf	spiInit@sDataSample^0,c
   390  00107A  0E00               	movlw	0
   391  00107C  6E02               	movwf	spiInit@sClockIdle^0,c
   392  00107E  0E00               	movlw	0
   393  001080  6E03               	movwf	spiInit@sTransmitEdge^0,c
   394  001082  0E25               	movlw	37
   395  001084  ECBE  F008         	call	_spiInit
   396  001088                     
   397                           ;newmain.c: 35:     const unsigned char test[80] = "sssdddd";
   398  001088  0E01               	movlw	low main@F4619
   399  00108A  6EF6               	movwf	tblptrl,c
   400  00108C                     	if	0	;There is only one active tblptr byte
   401  00108C                     	endif
   402  00108C                     	if	0	;There are less than 3 active tblptr bytes
   403  00108C                     	endif
   404  00108C  EE20  F005         	lfsr	2,main@test
   405  001090  0E4F               	movlw	79
   406  001092                     u240:
   407  001092  0009               	tblrd		*+
   408  001094  CFF5 FFDE          	movff	tablat,postinc2
   409  001098  06E8               	decf	wreg,f,c
   410  00109A  E2FB               	bc	u240
   411  00109C                     l1196:
   412                           
   413                           ;newmain.c: 38:         if (FLAGS.bits.SPI_READ_REQUEST == 1) {
   414  00109C  A257               	btfss	_FLAGS^0,1,c
   415  00109E  EF53  F008         	goto	u251
   416  0010A2  EF55  F008         	goto	u250
   417  0010A6                     u251:
   418  0010A6  EF58  F008         	goto	l1202
   419  0010AA                     u250:
   420  0010AA                     
   421                           ;newmain.c: 39:             SPICallback();
   422  0010AA  EC65  F009         	call	_SPICallback	;wreg free
   423  0010AE                     
   424                           ;newmain.c: 40:             FLAGS.bits.SPI_READ_REQUEST = 0;
   425  0010AE  9257               	bcf	_FLAGS^0,1,c
   426  0010B0                     l1202:
   427                           
   428                           ;newmain.c: 42:         if (FLAGS.bits.DISPLAY_READING) {
   429  0010B0  AA57               	btfss	_FLAGS^0,5,c
   430  0010B2  EF5D  F008         	goto	u261
   431  0010B6  EF5F  F008         	goto	u260
   432  0010BA                     u261:
   433  0010BA  EF62  F008         	goto	l1208
   434  0010BE                     u260:
   435  0010BE                     
   436                           ;newmain.c: 43:             displayRequestHandle();
   437  0010BE  ECF2  F008         	call	_displayRequestHandle	;wreg free
   438  0010C2                     
   439                           ;newmain.c: 44:             FLAGS.bits.DISPLAY_READING = 0;
   440  0010C2  9A57               	bcf	_FLAGS^0,5,c
   441  0010C4                     l1208:
   442                           
   443                           ;newmain.c: 46:         if (FLAGS.bits.UART_RECEIVED) {
   444  0010C4  A457               	btfss	_FLAGS^0,2,c
   445  0010C6  EF67  F008         	goto	u271
   446  0010CA  EF69  F008         	goto	u270
   447  0010CE                     u271:
   448  0010CE  EF6C  F008         	goto	l1214
   449  0010D2                     u270:
   450  0010D2                     
   451                           ;newmain.c: 47:             serialCallback();
   452  0010D2  EC8C  F009         	call	_serialCallback	;wreg free
   453  0010D6                     
   454                           ;newmain.c: 48:             FLAGS.bits.UART_RECEIVED = 0;
   455  0010D6  9457               	bcf	_FLAGS^0,2,c
   456  0010D8                     l1214:
   457                           
   458                           ;newmain.c: 50:         if (FLAGS.bits.PUSHED_BUTTON) {
   459  0010D8  A857               	btfss	_FLAGS^0,4,c
   460  0010DA  EF71  F008         	goto	u281
   461  0010DE  EF73  F008         	goto	u280
   462  0010E2                     u281:
   463  0010E2  EF76  F008         	goto	l1220
   464  0010E6                     u280:
   465  0010E6                     
   466                           ;newmain.c: 51:             FLAGS.bits.PUSH_REQUEST_SERVICED = 0;
   467  0010E6  9657               	bcf	_FLAGS^0,3,c
   468  0010E8                     
   469                           ;newmain.c: 52:             buttonCallback();
   470  0010E8  EC09  F009         	call	_buttonCallback	;wreg free
   471  0010EC                     l1220:
   472                           
   473                           ;newmain.c: 54:         if (FLAGS.bits.PUSH_REQUEST_SERVICED == 0) {
   474  0010EC  B657               	btfsc	_FLAGS^0,3,c
   475  0010EE  EF7B  F008         	goto	u291
   476  0010F2  EF7D  F008         	goto	u290
   477  0010F6                     u291:
   478  0010F6  EF4E  F008         	goto	l1196
   479  0010FA                     u290:
   480  0010FA                     
   481                           ;newmain.c: 55:             buttonDebounce();
   482  0010FA  EC1B  F009         	call	_buttonDebounce	;wreg free
   483  0010FE  EF4E  F008         	goto	l1196
   484  001102  EF07  F000         	goto	start
   485  001106                     __end_of_main:
   486                           	callstack 0
   487                           
   488 ;; *************** function _spiInit *****************
   489 ;; Defined at:
   490 ;;		line 14 in file "spi.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;  sType           1    wreg     enum E4544
   493 ;;  sDataSample     1    0[COMRAM] enum E4552
   494 ;;  sClockIdle      1    1[COMRAM] enum E4556
   495 ;;  sTransmitEdg    1    2[COMRAM] enum E4560
   496 ;; Auto vars:     Size  Location     Type
   497 ;;  sType           1    3[COMRAM] enum E4544
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg, status,2, status,0
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   507 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   508 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   510 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   511 ;;Total ram usage:        4 bytes
   512 ;; Hardware stack levels used: 1
   513 ;; Hardware stack levels required when called: 6
   514 ;; This function calls:
   515 ;;		Nothing
   516 ;; This function is called by:
   517 ;;		_main
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           	psect	text1
   522  00117C                     __ptext1:
   523                           	callstack 0
   524  00117C                     _spiInit:
   525                           	callstack 24
   526                           
   527                           ;incstack = 0
   528                           ;spiInit@sType stored from wreg
   529  00117C  6E04               	movwf	spiInit@sType^0,c
   530  00117E                     
   531                           ;spi.c: 15:     TRISC5 = 0;
   532  00117E  9A94               	bcf	3988,5,c	;volatile
   533                           
   534                           ;spi.c: 16:     TRISC4 = 1;
   535  001180  8894               	bsf	3988,4,c	;volatile
   536  001182                     
   537                           ;spi.c: 19:     if (sType & 0b00000100)
   538  001182  A404               	btfss	spiInit@sType^0,2,c
   539  001184  EFC6  F008         	goto	u231
   540  001188  EFC8  F008         	goto	u230
   541  00118C                     u231:
   542  00118C  EFCE  F008         	goto	l1176
   543  001190                     u230:
   544  001190                     
   545                           ;spi.c: 20:     {;spi.c: 21:         SSP1STAT = sTransmitEdge;
   546  001190  C003  FFC7         	movff	spiInit@sTransmitEdge,4039	;volatile
   547                           
   548                           ;spi.c: 22:         TRISC3 = 1;
   549  001194  8694               	bsf	3988,3,c	;volatile
   550                           
   551                           ;spi.c: 23:         LATC0 = 1;
   552  001196  808B               	bsf	3979,0,c	;volatile
   553                           
   554                           ;spi.c: 24:     } else
   555  001198  EFD3  F008         	goto	l97
   556  00119C                     l1176:
   557                           
   558                           ;spi.c: 25:     {;spi.c: 26:         SSP1STAT = sDataSample | sTransmitEdge;
   559  00119C  5001               	movf	spiInit@sDataSample^0,w,c
   560  00119E  1003               	iorwf	spiInit@sTransmitEdge^0,w,c
   561  0011A0  6EC7               	movwf	199,c	;volatile
   562  0011A2                     
   563                           ;spi.c: 27:         TRISC3 = 0;
   564  0011A2  9694               	bcf	3988,3,c	;volatile
   565  0011A4                     
   566                           ;spi.c: 28:         TRISC2 = 0;
   567  0011A4  9494               	bcf	3988,2,c	;volatile
   568  0011A6                     l97:
   569                           
   570                           ;spi.c: 30:     SSP1CON1 = sType | sClockIdle;
   571  0011A6  5004               	movf	spiInit@sType^0,w,c
   572  0011A8  1002               	iorwf	spiInit@sClockIdle^0,w,c
   573  0011AA  6EC6               	movwf	198,c	;volatile
   574  0011AC                     
   575                           ;spi.c: 32:     CKE1 = 0;
   576  0011AC  9CC7               	bcf	4039,6,c	;volatile
   577  0011AE                     
   578                           ;spi.c: 33:     CKP1 = 0;
   579  0011AE  98C6               	bcf	4038,4,c	;volatile
   580  0011B0  0012               	return		;funcret
   581  0011B2                     __end_of_spiInit:
   582                           	callstack 0
   583                           
   584 ;; *************** function _setupDisplayIo *****************
   585 ;; Defined at:
   586 ;;		line 6 in file "display.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   604 ;;Total ram usage:        0 bytes
   605 ;; Hardware stack levels used: 1
   606 ;; Hardware stack levels required when called: 6
   607 ;; This function calls:
   608 ;;		Nothing
   609 ;; This function is called by:
   610 ;;		_main
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           	psect	text2
   615  0012AC                     __ptext2:
   616                           	callstack 0
   617  0012AC                     _setupDisplayIo:
   618                           	callstack 24
   619  0012AC                     
   620                           ;display.c: 7:     TRISD = 0x00;
   621  0012AC  0E00               	movlw	0
   622  0012AE  6E95               	movwf	149,c	;volatile
   623                           
   624                           ;display.c: 8:     PORTD = 0x00;
   625  0012B0  0E00               	movlw	0
   626  0012B2  6E83               	movwf	131,c	;volatile
   627  0012B4  0012               	return		;funcret
   628  0012B6                     __end_of_setupDisplayIo:
   629                           	callstack 0
   630                           
   631 ;; *************** function _setSerialIo *****************
   632 ;; Defined at:
   633 ;;		line 17 in file "serial.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;		None
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		None
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   651 ;;Total ram usage:        0 bytes
   652 ;; Hardware stack levels used: 1
   653 ;; Hardware stack levels required when called: 6
   654 ;; This function calls:
   655 ;;		Nothing
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text3
   662  001300                     __ptext3:
   663                           	callstack 0
   664  001300                     _setSerialIo:
   665                           	callstack 24
   666  001300                     
   667                           ;serial.c: 18:     TRISC7 = 1;
   668  001300  8E94               	bsf	3988,7,c	;volatile
   669                           
   670                           ;serial.c: 19:     TRISC6 = 0;
   671  001302  9C94               	bcf	3988,6,c	;volatile
   672  001304  0012               	return		;funcret
   673  001306                     __end_of_setSerialIo:
   674                           	callstack 0
   675                           
   676 ;; *************** function _setSerial *****************
   677 ;; Defined at:
   678 ;;		line 5 in file "serial.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;		None
   681 ;; Auto vars:     Size  Location     Type
   682 ;;		None
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg, status,2
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;Total ram usage:        0 bytes
   697 ;; Hardware stack levels used: 1
   698 ;; Hardware stack levels required when called: 6
   699 ;; This function calls:
   700 ;;		Nothing
   701 ;; This function is called by:
   702 ;;		_main
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           	psect	text4
   707  001278                     __ptext4:
   708                           	callstack 0
   709  001278                     _setSerial:
   710                           	callstack 24
   711  001278                     
   712                           ;serial.c: 6:     BRGH1 = 0;
   713  001278  94AC               	bcf	4012,2,c	;volatile
   714  00127A                     
   715                           ;serial.c: 7:     SPBRG = 15;
   716  00127A  0E0F               	movlw	15
   717  00127C  6EAF               	movwf	175,c	;volatile
   718  00127E                     
   719                           ;serial.c: 8:     SYNC1 = 0;
   720  00127E  98AC               	bcf	4012,4,c	;volatile
   721  001280                     
   722                           ;serial.c: 9:     SPEN1 = 1;
   723  001280  8EAB               	bsf	4011,7,c	;volatile
   724  001282                     
   725                           ;serial.c: 10:     RC1IE = 1;
   726  001282  8A9D               	bsf	3997,5,c	;volatile
   727  001284                     
   728                           ;serial.c: 11:     CREN1 = 1;
   729  001284  88AB               	bsf	4011,4,c	;volatile
   730  001286                     
   731                           ;serial.c: 12:     RC1IF = 0;
   732  001286  9A9E               	bcf	3998,5,c	;volatile
   733  001288                     
   734                           ;serial.c: 13:     TXEN1 = 1;
   735  001288  8AAC               	bsf	4012,5,c	;volatile
   736                           
   737                           ;serial.c: 14:     RCREG1 = 0;
   738  00128A  0E00               	movlw	0
   739  00128C  6EAE               	movwf	174,c	;volatile
   740  00128E  0012               	return		;funcret
   741  001290                     __end_of_setSerial:
   742                           	callstack 0
   743                           
   744 ;; *************** function _setSPIInterrupt *****************
   745 ;; Defined at:
   746 ;;		line 9 in file "spi.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;		None
   749 ;; Auto vars:     Size  Location     Type
   750 ;;		None
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      void 
   753 ;; Registers used:
   754 ;;		None
   755 ;; Tracked objects:
   756 ;;		On entry : 0/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   764 ;;Total ram usage:        0 bytes
   765 ;; Hardware stack levels used: 1
   766 ;; Hardware stack levels required when called: 6
   767 ;; This function calls:
   768 ;;		Nothing
   769 ;; This function is called by:
   770 ;;		_main
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           	psect	text5
   775  001306                     __ptext5:
   776                           	callstack 0
   777  001306                     _setSPIInterrupt:
   778                           	callstack 24
   779  001306                     
   780                           ;spi.c: 10:     SSP1IF = 0;
   781  001306  969E               	bcf	3998,3,c	;volatile
   782                           
   783                           ;spi.c: 11:     SSP1IE = 1;
   784  001308  869D               	bsf	3997,3,c	;volatile
   785  00130A  0012               	return		;funcret
   786  00130C                     __end_of_setSPIInterrupt:
   787                           	callstack 0
   788                           
   789 ;; *************** function _setIo *****************
   790 ;; Defined at:
   791 ;;		line 9 in file "init.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;		None
   794 ;; Auto vars:     Size  Location     Type
   795 ;;		None
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		None
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   809 ;;Total ram usage:        0 bytes
   810 ;; Hardware stack levels used: 1
   811 ;; Hardware stack levels required when called: 6
   812 ;; This function calls:
   813 ;;		Nothing
   814 ;; This function is called by:
   815 ;;		_main
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text6
   820  00133A                     __ptext6:
   821                           	callstack 0
   822  00133A                     _setIo:
   823                           	callstack 24
   824  00133A  0012               	return		;funcret
   825  00133C                     __end_of_setIo:
   826                           	callstack 0
   827                           
   828 ;; *************** function _setInterrupts *****************
   829 ;; Defined at:
   830 ;;		line 13 in file "init.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;		None
   833 ;; Auto vars:     Size  Location     Type
   834 ;;		None
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		None
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   848 ;;Total ram usage:        0 bytes
   849 ;; Hardware stack levels used: 1
   850 ;; Hardware stack levels required when called: 6
   851 ;; This function calls:
   852 ;;		Nothing
   853 ;; This function is called by:
   854 ;;		_main
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           	psect	text7
   859  00130C                     __ptext7:
   860                           	callstack 0
   861  00130C                     _setInterrupts:
   862                           	callstack 24
   863  00130C                     
   864                           ;init.c: 14:     GIE = 1;
   865  00130C  8EF2               	bsf	4082,7,c	;volatile
   866                           
   867                           ;init.c: 15:     PEIE = 1;
   868  00130E  8CF2               	bsf	4082,6,c	;volatile
   869  001310  0012               	return		;funcret
   870  001312                     __end_of_setInterrupts:
   871                           	callstack 0
   872                           
   873 ;; *************** function _setButtonIo *****************
   874 ;; Defined at:
   875 ;;		line 6 in file "button.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;		None
   878 ;; Auto vars:     Size  Location     Type
   879 ;;		None
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		None
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   893 ;;Total ram usage:        0 bytes
   894 ;; Hardware stack levels used: 1
   895 ;; Hardware stack levels required when called: 6
   896 ;; This function calls:
   897 ;;		Nothing
   898 ;; This function is called by:
   899 ;;		_main
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text8
   904  001330                     __ptext8:
   905                           	callstack 0
   906  001330                     _setButtonIo:
   907                           	callstack 24
   908  001330                     
   909                           ;button.c: 7:     TRISB0 = 1;
   910  001330  8093               	bsf	3987,0,c	;volatile
   911  001332  0012               	return		;funcret
   912  001334                     __end_of_setButtonIo:
   913                           	callstack 0
   914                           
   915 ;; *************** function _setButtonInterrput *****************
   916 ;; Defined at:
   917 ;;		line 19 in file "init.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;		None
   920 ;; Auto vars:     Size  Location     Type
   921 ;;		None
   922 ;; Return value:  Size  Location     Type
   923 ;;                  1    wreg      void 
   924 ;; Registers used:
   925 ;;		None
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;Total ram usage:        0 bytes
   936 ;; Hardware stack levels used: 1
   937 ;; Hardware stack levels required when called: 6
   938 ;; This function calls:
   939 ;;		Nothing
   940 ;; This function is called by:
   941 ;;		_main
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text9
   946  001312                     __ptext9:
   947                           	callstack 0
   948  001312                     _setButtonInterrput:
   949                           	callstack 24
   950  001312                     
   951                           ;init.c: 20:     INTEDG0 = 1;
   952  001312  8CF1               	bsf	4081,6,c	;volatile
   953                           
   954                           ;init.c: 21:     INT0IE = 1;
   955  001314  88F2               	bsf	4082,4,c	;volatile
   956  001316  0012               	return		;funcret
   957  001318                     __end_of_setButtonInterrput:
   958                           	callstack 0
   959                           
   960 ;; *************** function _serialCallback *****************
   961 ;; Defined at:
   962 ;;		line 22 in file "serial.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;		None
   965 ;; Auto vars:     Size  Location     Type
   966 ;;		None
   967 ;; Return value:  Size  Location     Type
   968 ;;                  1    wreg      void 
   969 ;; Registers used:
   970 ;;		None
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   980 ;;Total ram usage:        0 bytes
   981 ;; Hardware stack levels used: 1
   982 ;; Hardware stack levels required when called: 6
   983 ;; This function calls:
   984 ;;		Nothing
   985 ;; This function is called by:
   986 ;;		_main
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text10
   991  001318                     __ptext10:
   992                           	callstack 0
   993  001318                     _serialCallback:
   994                           	callstack 24
   995  001318                     
   996                           ;serial.c: 23:     FLAGS.bits.DISPLAY_READING = 1;
   997  001318  8A57               	bsf	_FLAGS^0,5,c
   998                           
   999                           ;serial.c: 24:     FLAGS.bits.DISPLAY_SERIAL_READING = 1;
  1000  00131A  8E57               	bsf	_FLAGS^0,7,c
  1001  00131C  0012               	return		;funcret
  1002  00131E                     __end_of_serialCallback:
  1003                           	callstack 0
  1004                           
  1005 ;; *************** function _initialiseButton *****************
  1006 ;; Defined at:
  1007 ;;		line 10 in file "button.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;		None
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;		None
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  1    wreg      void 
  1014 ;; Registers used:
  1015 ;;		None
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1025 ;;Total ram usage:        0 bytes
  1026 ;; Hardware stack levels used: 1
  1027 ;; Hardware stack levels required when called: 6
  1028 ;; This function calls:
  1029 ;;		Nothing
  1030 ;; This function is called by:
  1031 ;;		_main
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           	psect	text11
  1036  00131E                     __ptext11:
  1037                           	callstack 0
  1038  00131E                     _initialiseButton:
  1039                           	callstack 24
  1040  00131E                     
  1041                           ;button.c: 11:     FLAGS.bits.PUSHED_BUTTON = 0;
  1042  00131E  9857               	bcf	_FLAGS^0,4,c
  1043                           
  1044                           ;button.c: 12:     FLAGS.bits.PUSH_REQUEST_SERVICED = 1;
  1045  001320  8657               	bsf	_FLAGS^0,3,c
  1046  001322  0012               	return		;funcret
  1047  001324                     __end_of_initialiseButton:
  1048                           	callstack 0
  1049                           
  1050 ;; *************** function _displayRequestHandle *****************
  1051 ;; Defined at:
  1052 ;;		line 21 in file "display.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;		None
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;		None
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		cstack
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;Total ram usage:        0 bytes
  1071 ;; Hardware stack levels used: 1
  1072 ;; Hardware stack levels required when called: 8
  1073 ;; This function calls:
  1074 ;;		_displaySPI
  1075 ;;		_displaySerial
  1076 ;; This function is called by:
  1077 ;;		_main
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text12
  1082  0011E4                     __ptext12:
  1083                           	callstack 0
  1084  0011E4                     _displayRequestHandle:
  1085                           	callstack 22
  1086  0011E4                     
  1087                           ;display.c: 22:     if (FLAGS.bits.DISPLAY_SERIAL_READING) {
  1088  0011E4  AE57               	btfss	_FLAGS^0,7,c
  1089  0011E6  EFF7  F008         	goto	u121
  1090  0011EA  EFF9  F008         	goto	u120
  1091  0011EE                     u121:
  1092  0011EE  EFFE  F008         	goto	l286
  1093  0011F2                     u120:
  1094  0011F2                     
  1095                           ;display.c: 23:         displaySerial();
  1096  0011F2  EC5B  F009         	call	_displaySerial	;wreg free
  1097  0011F6                     
  1098                           ;display.c: 24:         FLAGS.bits.DISPLAY_SERIAL_READING = 0;
  1099  0011F6  9E57               	bcf	_FLAGS^0,7,c
  1100                           
  1101                           ;display.c: 25:     } else {
  1102  0011F8  EF08  F009         	goto	l289
  1103  0011FC                     l286:
  1104                           
  1105                           ;display.c: 26:         if (FLAGS.bits.DISPLAY_SPI_READING) {
  1106  0011FC  AC57               	btfss	_FLAGS^0,6,c
  1107  0011FE  EF03  F009         	goto	u131
  1108  001202  EF05  F009         	goto	u130
  1109  001206                     u131:
  1110  001206  EF08  F009         	goto	l289
  1111  00120A                     u130:
  1112  00120A                     
  1113                           ;display.c: 27:             displaySPI();
  1114  00120A  EC60  F009         	call	_displaySPI	;wreg free
  1115  00120E                     
  1116                           ;display.c: 28:             FLAGS.bits.DISPLAY_SPI_READING = 0;
  1117  00120E  9C57               	bcf	_FLAGS^0,6,c
  1118  001210                     l289:
  1119  001210  0012               	return		;funcret
  1120  001212                     __end_of_displayRequestHandle:
  1121                           	callstack 0
  1122                           
  1123 ;; *************** function _displaySerial *****************
  1124 ;; Defined at:
  1125 ;;		line 11 in file "display.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1143 ;;Total ram usage:        0 bytes
  1144 ;; Hardware stack levels used: 1
  1145 ;; Hardware stack levels required when called: 7
  1146 ;; This function calls:
  1147 ;;		_displayCallback
  1148 ;; This function is called by:
  1149 ;;		_displayRequestHandle
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           	psect	text13
  1154  0012B6                     __ptext13:
  1155                           	callstack 0
  1156  0012B6                     _displaySerial:
  1157                           	callstack 22
  1158  0012B6                     
  1159                           ;display.c: 12:     ledValue = readSerialValue;
  1160  0012B6  C056  F055         	movff	_readSerialValue,_ledValue
  1161  0012BA                     
  1162                           ;display.c: 13:     displayCallback();
  1163  0012BA  EC92  F009         	call	_displayCallback	;wreg free
  1164  0012BE  0012               	return		;funcret
  1165  0012C0                     __end_of_displaySerial:
  1166                           	callstack 0
  1167                           
  1168 ;; *************** function _displaySPI *****************
  1169 ;; Defined at:
  1170 ;;		line 16 in file "display.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;		None
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;		None
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      void 
  1177 ;; Registers used:
  1178 ;;		cstack
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;Total ram usage:        0 bytes
  1189 ;; Hardware stack levels used: 1
  1190 ;; Hardware stack levels required when called: 7
  1191 ;; This function calls:
  1192 ;;		_displayCallback
  1193 ;; This function is called by:
  1194 ;;		_displayRequestHandle
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text14
  1199  0012C0                     __ptext14:
  1200                           	callstack 0
  1201  0012C0                     _displaySPI:
  1202                           	callstack 22
  1203  0012C0                     
  1204                           ;display.c: 17:     ledValue = readSPIValue;
  1205  0012C0  C058  F055         	movff	_readSPIValue,_ledValue
  1206  0012C4                     
  1207                           ;display.c: 18:     displayCallback();
  1208  0012C4  EC92  F009         	call	_displayCallback	;wreg free
  1209  0012C8  0012               	return		;funcret
  1210  0012CA                     __end_of_displaySPI:
  1211                           	callstack 0
  1212                           
  1213 ;; *************** function _displayCallback *****************
  1214 ;; Defined at:
  1215 ;;		line 33 in file "display.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;		None
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;		None
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		None
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;Total ram usage:        0 bytes
  1234 ;; Hardware stack levels used: 1
  1235 ;; Hardware stack levels required when called: 6
  1236 ;; This function calls:
  1237 ;;		Nothing
  1238 ;; This function is called by:
  1239 ;;		_displaySerial
  1240 ;;		_displaySPI
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text15
  1245  001324                     __ptext15:
  1246                           	callstack 0
  1247  001324                     _displayCallback:
  1248                           	callstack 22
  1249  001324                     
  1250                           ;display.c: 34:     PORTD = ledValue;
  1251  001324  C055  FF83         	movff	_ledValue,3971	;volatile
  1252  001328  0012               	return		;funcret
  1253  00132A                     __end_of_displayCallback:
  1254                           	callstack 0
  1255                           
  1256 ;; *************** function _buttonDebounce *****************
  1257 ;; Defined at:
  1258 ;;		line 29 in file "button.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;		None
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;		None
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, status,2, status,0
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;Total ram usage:        0 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; Hardware stack levels required when called: 6
  1279 ;; This function calls:
  1280 ;;		Nothing
  1281 ;; This function is called by:
  1282 ;;		_main
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           	psect	text16
  1287  001236                     __ptext16:
  1288                           	callstack 0
  1289  001236                     _buttonDebounce:
  1290                           	callstack 24
  1291  001236                     
  1292                           ;button.c: 30:     static int counter = 255;;button.c: 31:     counter--;
  1293  001236  0659               	decf	buttonDebounce@counter^0,f,c
  1294  001238  A0D8               	btfss	status,0,c
  1295  00123A  065A               	decf	(buttonDebounce@counter+1)^0,f,c
  1296  00123C                     
  1297                           ;button.c: 32:     if (counter == 0) {
  1298  00123C  5059               	movf	buttonDebounce@counter^0,w,c
  1299  00123E  105A               	iorwf	(buttonDebounce@counter+1)^0,w,c
  1300  001240  A4D8               	btfss	status,2,c
  1301  001242  EF25  F009         	goto	u161
  1302  001246  EF27  F009         	goto	u160
  1303  00124A                     u161:
  1304  00124A  EF2B  F009         	goto	l260
  1305  00124E                     u160:
  1306  00124E                     
  1307                           ;button.c: 33:         FLAGS.bits.PUSH_REQUEST_SERVICED = 1;
  1308  00124E  8657               	bsf	_FLAGS^0,3,c
  1309  001250                     
  1310                           ;button.c: 34:         counter = 255;
  1311  001250  0E00               	movlw	0
  1312  001252  6E5A               	movwf	(buttonDebounce@counter+1)^0,c
  1313  001254  6859               	setf	buttonDebounce@counter^0,c
  1314  001256                     l260:
  1315  001256  0012               	return		;funcret
  1316  001258                     __end_of_buttonDebounce:
  1317                           	callstack 0
  1318                           
  1319 ;; *************** function _buttonCallback *****************
  1320 ;; Defined at:
  1321 ;;		line 15 in file "button.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;		None
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;		None
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;Total ram usage:        0 bytes
  1340 ;; Hardware stack levels used: 1
  1341 ;; Hardware stack levels required when called: 8
  1342 ;; This function calls:
  1343 ;;		_testSpiSend
  1344 ;; This function is called by:
  1345 ;;		_main
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text17
  1350  001212                     __ptext17:
  1351                           	callstack 0
  1352  001212                     _buttonCallback:
  1353                           	callstack 22
  1354  001212                     
  1355                           ;button.c: 16:     if (FLAGS.bits.PUSH_REQUEST_SERVICED == 0 && FLAGS.bits.PUSHED_BUTTON
      +                           == 1) {
  1356  001212  B657               	btfsc	_FLAGS^0,3,c
  1357  001214  EF0E  F009         	goto	u141
  1358  001218  EF10  F009         	goto	u140
  1359  00121C                     u141:
  1360  00121C  EF19  F009         	goto	l1106
  1361  001220                     u140:
  1362  001220  A857               	btfss	_FLAGS^0,4,c
  1363  001222  EF15  F009         	goto	u151
  1364  001226  EF17  F009         	goto	u150
  1365  00122A                     u151:
  1366  00122A  EF19  F009         	goto	l1106
  1367  00122E                     u150:
  1368  00122E                     
  1369                           ;button.c: 18:         testSpiSend();
  1370  00122E  EC74  F009         	call	_testSpiSend	;wreg free
  1371  001232                     l1106:
  1372                           
  1373                           ;button.c: 20:     FLAGS.bits.PUSHED_BUTTON = 0;
  1374  001232  9857               	bcf	_FLAGS^0,4,c
  1375  001234  0012               	return		;funcret
  1376  001236                     __end_of_buttonCallback:
  1377                           	callstack 0
  1378                           
  1379 ;; *************** function _testSpiSend *****************
  1380 ;; Defined at:
  1381 ;;		line 70 in file "spi.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;		None
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1399 ;;Total ram usage:        0 bytes
  1400 ;; Hardware stack levels used: 1
  1401 ;; Hardware stack levels required when called: 7
  1402 ;; This function calls:
  1403 ;;		_spiWrite
  1404 ;; This function is called by:
  1405 ;;		_buttonCallback
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text18
  1410  0012E8                     __ptext18:
  1411                           	callstack 0
  1412  0012E8                     _testSpiSend:
  1413                           	callstack 22
  1414  0012E8                     
  1415                           ;spi.c: 71:     spiWrite(0x88);
  1416  0012E8  0E88               	movlw	136
  1417  0012EA  EC78  F009         	call	_spiWrite
  1418  0012EE  0012               	return		;funcret
  1419  0012F0                     __end_of_testSpiSend:
  1420                           	callstack 0
  1421                           
  1422 ;; *************** function _SPICallback *****************
  1423 ;; Defined at:
  1424 ;;		line 65 in file "spi.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;		None
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		wreg, status,2, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;Total ram usage:        0 bytes
  1443 ;; Hardware stack levels used: 1
  1444 ;; Hardware stack levels required when called: 7
  1445 ;; This function calls:
  1446 ;;		_spiWrite
  1447 ;; This function is called by:
  1448 ;;		_main
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text19
  1453  0012CA                     __ptext19:
  1454                           	callstack 0
  1455  0012CA                     _SPICallback:
  1456                           	callstack 23
  1457  0012CA                     
  1458                           ;spi.c: 66:     spiWrite(readSPIValue);
  1459  0012CA  5058               	movf	_readSPIValue^0,w,c
  1460  0012CC  EC78  F009         	call	_spiWrite
  1461  0012D0                     
  1462                           ;spi.c: 67:     FLAGS.bits.DISPLAY_READING = 1;
  1463  0012D0  8A57               	bsf	_FLAGS^0,5,c
  1464  0012D2  0012               	return		;funcret
  1465  0012D4                     __end_of_SPICallback:
  1466                           	callstack 0
  1467                           
  1468 ;; *************** function _spiWrite *****************
  1469 ;; Defined at:
  1470 ;;		line 40 in file "spi.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  dat             1    wreg     unsigned char 
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  dat             1    0[COMRAM] unsigned char 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		wreg
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;Total ram usage:        1 bytes
  1489 ;; Hardware stack levels used: 1
  1490 ;; Hardware stack levels required when called: 6
  1491 ;; This function calls:
  1492 ;;		Nothing
  1493 ;; This function is called by:
  1494 ;;		_SPICallback
  1495 ;;		_testSpiSend
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text20
  1500  0012F0                     __ptext20:
  1501                           	callstack 0
  1502  0012F0                     _spiWrite:
  1503                           	callstack 22
  1504                           
  1505                           ;incstack = 0
  1506                           ;spiWrite@dat stored from wreg
  1507  0012F0  6E01               	movwf	spiWrite@dat^0,c
  1508  0012F2                     
  1509                           ;spi.c: 40: void spiWrite(char dat);spi.c: 41: {;spi.c: 42:     SSP1BUF = dat;
  1510  0012F2  C001  FFC9         	movff	spiWrite@dat,4041	;volatile
  1511  0012F6  0012               	return		;funcret
  1512  0012F8                     __end_of_spiWrite:
  1513                           	callstack 0
  1514                           
  1515 ;; *************** function _service *****************
  1516 ;; Defined at:
  1517 ;;		line 18 in file "newmain.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;		None
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;		None
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      void 
  1524 ;; Registers used:
  1525 ;;		wreg, status,2, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;Total ram usage:        0 bytes
  1536 ;; Hardware stack levels used: 1
  1537 ;; Hardware stack levels required when called: 5
  1538 ;; This function calls:
  1539 ;;		_interruptService
  1540 ;; This function is called by:
  1541 ;;		Interrupt level 2
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           	psect	intcode
  1546  000008                     __pintcode:
  1547                           	callstack 0
  1548  000008                     _service:
  1549                           	callstack 22
  1550                           
  1551                           ;incstack = 0
  1552  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1553  00000A  ED6A  F009         	call	int_func,f	;refresh shadow registers
  1554                           
  1555                           	psect	intcode_body
  1556  0012D4                     __pintcode_body:
  1557                           	callstack 22
  1558  0012D4                     int_func:
  1559                           	callstack 22
  1560  0012D4  0006               	pop		; remove dummy address from shadow register refresh
  1561  0012D6                     
  1562                           ;newmain.c: 19:     interruptService();
  1563  0012D6  EC95  F009         	call	_interruptService	;wreg free
  1564  0012DA  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1565  0012DC  0011               	retfie		f
  1566  0012DE                     __end_of_service:
  1567                           	callstack 0
  1568                           
  1569 ;; *************** function _interruptService *****************
  1570 ;; Defined at:
  1571 ;;		line 28 in file "interruptService.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;		None
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;		None
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      void 
  1578 ;; Registers used:
  1579 ;;		wreg, status,2, cstack
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;Total ram usage:        0 bytes
  1590 ;; Hardware stack levels used: 1
  1591 ;; Hardware stack levels required when called: 4
  1592 ;; This function calls:
  1593 ;;		_processInterruptService
  1594 ;; This function is called by:
  1595 ;;		_service
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text22
  1600  00132A                     __ptext22:
  1601                           	callstack 0
  1602  00132A                     _interruptService:
  1603                           	callstack 22
  1604  00132A                     
  1605                           ;interruptService.c: 29:     processInterruptService();
  1606  00132A  EC83  F008         	call	_processInterruptService	;wreg free
  1607  00132E  0012               	return		;funcret
  1608  001330                     __end_of_interruptService:
  1609                           	callstack 0
  1610                           
  1611 ;; *************** function _processInterruptService *****************
  1612 ;; Defined at:
  1613 ;;		line 13 in file "interruptService.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;		None
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, status,2, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1631 ;;Total ram usage:        0 bytes
  1632 ;; Hardware stack levels used: 1
  1633 ;; Hardware stack levels required when called: 3
  1634 ;; This function calls:
  1635 ;;		_SPIHandle
  1636 ;;		_buttonHandle
  1637 ;;		_serialHandle
  1638 ;; This function is called by:
  1639 ;;		_interruptService
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           	psect	text23
  1644  001106                     __ptext23:
  1645                           	callstack 0
  1646  001106                     _processInterruptService:
  1647                           	callstack 22
  1648  001106                     
  1649                           ;interruptService.c: 14:     if (SSP1IE == 1 && SSP1IF == 1) {
  1650  001106  A69D               	btfss	3997,3,c	;volatile
  1651  001108  EF88  F008         	goto	i2u4_41
  1652  00110C  EF8A  F008         	goto	i2u4_40
  1653  001110                     i2u4_41:
  1654  001110  EF94  F008         	goto	i2l1010
  1655  001114                     i2u4_40:
  1656  001114  A69E               	btfss	3998,3,c	;volatile
  1657  001116  EF8F  F008         	goto	i2u5_41
  1658  00111A  EF91  F008         	goto	i2u5_40
  1659  00111E                     i2u5_41:
  1660  00111E  EF94  F008         	goto	i2l1010
  1661  001122                     i2u5_40:
  1662  001122                     
  1663                           ;interruptService.c: 15:         SPIHandle();
  1664  001122  EC50  F009         	call	_SPIHandle	;wreg free
  1665  001126                     
  1666                           ;interruptService.c: 16:         SSP1IF = 0;
  1667  001126  969E               	bcf	3998,3,c	;volatile
  1668  001128                     i2l1010:
  1669                           
  1670                           ;interruptService.c: 18:     if (RC1IE == 1 && RC1IF == 1 && FLAGS.bits.UART_RECEIVED ==
      +                           0) {
  1671  001128  AA9D               	btfss	3997,5,c	;volatile
  1672  00112A  EF99  F008         	goto	i2u6_41
  1673  00112E  EF9B  F008         	goto	i2u6_40
  1674  001132                     i2u6_41:
  1675  001132  EFAC  F008         	goto	i2l1020
  1676  001136                     i2u6_40:
  1677  001136  AA9E               	btfss	3998,5,c	;volatile
  1678  001138  EFA0  F008         	goto	i2u7_41
  1679  00113C  EFA2  F008         	goto	i2u7_40
  1680  001140                     i2u7_41:
  1681  001140  EFAC  F008         	goto	i2l1020
  1682  001144                     i2u7_40:
  1683  001144  B457               	btfsc	_FLAGS^0,2,c
  1684  001146  EFA7  F008         	goto	i2u8_41
  1685  00114A  EFA9  F008         	goto	i2u8_40
  1686  00114E                     i2u8_41:
  1687  00114E  EFAC  F008         	goto	i2l1020
  1688  001152                     i2u8_40:
  1689  001152                     
  1690                           ;interruptService.c: 19:         serialHandle();
  1691  001152  EC6F  F009         	call	_serialHandle	;wreg free
  1692  001156                     
  1693                           ;interruptService.c: 20:         RC1IF = 0;
  1694  001156  9A9E               	bcf	3998,5,c	;volatile
  1695  001158                     i2l1020:
  1696                           
  1697                           ;interruptService.c: 22:     if (INTEDG0 == 1 && INT0IF == 1) {
  1698  001158  ACF1               	btfss	4081,6,c	;volatile
  1699  00115A  EFB1  F008         	goto	i2u9_41
  1700  00115E  EFB3  F008         	goto	i2u9_40
  1701  001162                     i2u9_41:
  1702  001162  EFBD  F008         	goto	i2l171
  1703  001166                     i2u9_40:
  1704  001166  A2F2               	btfss	4082,1,c	;volatile
  1705  001168  EFB8  F008         	goto	i2u10_41
  1706  00116C  EFBA  F008         	goto	i2u10_40
  1707  001170                     i2u10_41:
  1708  001170  EFBD  F008         	goto	i2l171
  1709  001174                     i2u10_40:
  1710  001174                     
  1711                           ;interruptService.c: 23:         buttonHandle();
  1712  001174  EC2C  F009         	call	_buttonHandle	;wreg free
  1713  001178                     
  1714                           ;interruptService.c: 24:         INT0IF = 0;
  1715  001178  92F2               	bcf	4082,1,c	;volatile
  1716  00117A                     i2l171:
  1717  00117A  0012               	return		;funcret
  1718  00117C                     __end_of_processInterruptService:
  1719                           	callstack 0
  1720                           
  1721 ;; *************** function _serialHandle *****************
  1722 ;; Defined at:
  1723 ;;		line 28 in file "serial.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;		None
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;Total ram usage:        0 bytes
  1742 ;; Hardware stack levels used: 1
  1743 ;; Hardware stack levels required when called: 1
  1744 ;; This function calls:
  1745 ;;		_readSerial
  1746 ;; This function is called by:
  1747 ;;		_processInterruptService
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text24
  1752  0012DE                     __ptext24:
  1753                           	callstack 0
  1754  0012DE                     _serialHandle:
  1755                           	callstack 23
  1756  0012DE                     
  1757                           ;serial.c: 29:     FLAGS.bits.UART_RECEIVED = 1;
  1758  0012DE  8457               	bsf	_FLAGS^0,2,c
  1759  0012E0                     
  1760                           ;serial.c: 30:     readSerialValue = readSerial();
  1761  0012E0  EC9A  F009         	call	_readSerial	;wreg free
  1762  0012E4  6E56               	movwf	_readSerialValue^0,c
  1763  0012E6  0012               	return		;funcret
  1764  0012E8                     __end_of_serialHandle:
  1765                           	callstack 0
  1766                           
  1767 ;; *************** function _readSerial *****************
  1768 ;; Defined at:
  1769 ;;		line 41 in file "serial.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;		None
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      unsigned char 
  1776 ;; Registers used:
  1777 ;;		wreg, status,2
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;Total ram usage:        0 bytes
  1788 ;; Hardware stack levels used: 1
  1789 ;; This function calls:
  1790 ;;		Nothing
  1791 ;; This function is called by:
  1792 ;;		_serialHandle
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text25
  1797  001334                     __ptext25:
  1798                           	callstack 0
  1799  001334                     _readSerial:
  1800                           	callstack 23
  1801  001334                     
  1802                           ;serial.c: 42:     return RCREG1;
  1803  001334  50AE               	movf	174,w,c	;volatile
  1804  001336  0012               	return		;funcret
  1805  001338                     __end_of_readSerial:
  1806                           	callstack 0
  1807                           
  1808 ;; *************** function _buttonHandle *****************
  1809 ;; Defined at:
  1810 ;;		line 23 in file "button.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;		None
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;		None
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		None
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1828 ;;Total ram usage:        0 bytes
  1829 ;; Hardware stack levels used: 1
  1830 ;; This function calls:
  1831 ;;		Nothing
  1832 ;; This function is called by:
  1833 ;;		_processInterruptService
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           	psect	text26
  1838  001258                     __ptext26:
  1839                           	callstack 0
  1840  001258                     _buttonHandle:
  1841                           	callstack 24
  1842  001258                     
  1843                           ;button.c: 24:     if (FLAGS.bits.PUSH_REQUEST_SERVICED == 1 && FLAGS.bits.PUSHED_BUTTON
      +                           == 0) {
  1844  001258  A657               	btfss	_FLAGS^0,3,c
  1845  00125A  EF31  F009         	goto	i2u2_41
  1846  00125E  EF33  F009         	goto	i2u2_40
  1847  001262                     i2u2_41:
  1848  001262  EF3B  F009         	goto	i2l254
  1849  001266                     i2u2_40:
  1850  001266  B857               	btfsc	_FLAGS^0,4,c
  1851  001268  EF38  F009         	goto	i2u3_41
  1852  00126C  EF3A  F009         	goto	i2u3_40
  1853  001270                     i2u3_41:
  1854  001270  EF3B  F009         	goto	i2l254
  1855  001274                     i2u3_40:
  1856  001274                     
  1857                           ;button.c: 25:         FLAGS.bits.PUSHED_BUTTON = 1;
  1858  001274  8857               	bsf	_FLAGS^0,4,c
  1859  001276                     i2l254:
  1860  001276  0012               	return		;funcret
  1861  001278                     __end_of_buttonHandle:
  1862                           	callstack 0
  1863                           
  1864 ;; *************** function _SPIHandle *****************
  1865 ;; Defined at:
  1866 ;;		line 59 in file "spi.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;		None
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;		None
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  1    wreg      void 
  1873 ;; Registers used:
  1874 ;;		wreg, status,2, cstack
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1884 ;;Total ram usage:        0 bytes
  1885 ;; Hardware stack levels used: 1
  1886 ;; Hardware stack levels required when called: 2
  1887 ;; This function calls:
  1888 ;;		_spiRead
  1889 ;; This function is called by:
  1890 ;;		_processInterruptService
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           	psect	text27
  1895  0012A0                     __ptext27:
  1896                           	callstack 0
  1897  0012A0                     _SPIHandle:
  1898                           	callstack 22
  1899  0012A0                     
  1900                           ;spi.c: 60:     readSPIValue = spiRead();
  1901  0012A0  EC7C  F009         	call	_spiRead	;wreg free
  1902  0012A4  6E58               	movwf	_readSPIValue^0,c
  1903  0012A6                     
  1904                           ;spi.c: 61:     FLAGS.bits.SPI_READ_REQUEST = 1;
  1905  0012A6  8257               	bsf	_FLAGS^0,1,c
  1906  0012A8                     
  1907                           ;spi.c: 62:     FLAGS.bits.DISPLAY_SPI_READING = 1;
  1908  0012A8  8C57               	bsf	_FLAGS^0,6,c
  1909  0012AA  0012               	return		;funcret
  1910  0012AC                     __end_of_SPIHandle:
  1911                           	callstack 0
  1912                           
  1913 ;; *************** function _spiRead *****************
  1914 ;; Defined at:
  1915 ;;		line 53 in file "spi.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;		None
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;		None
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      unsigned char 
  1922 ;; Registers used:
  1923 ;;		wreg, status,2, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;Total ram usage:        0 bytes
  1934 ;; Hardware stack levels used: 1
  1935 ;; Hardware stack levels required when called: 1
  1936 ;; This function calls:
  1937 ;;		_spiReceiveWait
  1938 ;; This function is called by:
  1939 ;;		_SPIHandle
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           	psect	text28
  1944  0012F8                     __ptext28:
  1945                           	callstack 0
  1946  0012F8                     _spiRead:
  1947                           	callstack 22
  1948  0012F8                     
  1949                           ;spi.c: 55:     spiReceiveWait();
  1950  0012F8  EC48  F009         	call	_spiReceiveWait	;wreg free
  1951  0012FC                     
  1952                           ;spi.c: 56:     return (SSP1BUF);
  1953  0012FC  50C9               	movf	201,w,c	;volatile
  1954  0012FE  0012               	return		;funcret
  1955  001300                     __end_of_spiRead:
  1956                           	callstack 0
  1957                           
  1958 ;; *************** function _spiReceiveWait *****************
  1959 ;; Defined at:
  1960 ;;		line 36 in file "spi.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;		None
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;		None
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      void 
  1967 ;; Registers used:
  1968 ;;		None
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1978 ;;Total ram usage:        0 bytes
  1979 ;; Hardware stack levels used: 1
  1980 ;; This function calls:
  1981 ;;		Nothing
  1982 ;; This function is called by:
  1983 ;;		_spiRead
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text29
  1988  001290                     __ptext29:
  1989                           	callstack 0
  1990  001290                     _spiReceiveWait:
  1991                           	callstack 22
  1992  001290                     i2l101:
  1993  001290  A0C7               	btfss	199,0,c	;volatile
  1994  001292  EF4D  F009         	goto	i2u1_41
  1995  001296  EF4F  F009         	goto	i2u1_40
  1996  00129A                     i2u1_41:
  1997  00129A  EF48  F009         	goto	i2l101
  1998  00129E                     i2u1_40:
  1999  00129E  0012               	return		;funcret
  2000  0012A0                     __end_of_spiReceiveWait:
  2001                           	callstack 0
  2002                           
  2003                           	psect	rparam
  2004  0000                     
  2005                           	psect	temp
  2006  00005B                     btemp:
  2007                           	callstack 0
  2008  00005B                     	ds	1
  2009  0000                     int$flags	set	btemp
  2010  0000                     wtemp8	set	btemp+1
  2011  0000                     ttemp5	set	btemp+1
  2012  0000                     ttemp6	set	btemp+4
  2013  0000                     ttemp7	set	btemp+8
  2014                           
  2015                           	psect	idloc
  2016                           
  2017                           ;Config register IDLOC0 @ 0x200000
  2018                           ;	unspecified, using default values
  2019  200000                     	org	2097152
  2020  200000  FF                 	db	255
  2021                           
  2022                           ;Config register IDLOC1 @ 0x200001
  2023                           ;	unspecified, using default values
  2024  200001                     	org	2097153
  2025  200001  FF                 	db	255
  2026                           
  2027                           ;Config register IDLOC2 @ 0x200002
  2028                           ;	unspecified, using default values
  2029  200002                     	org	2097154
  2030  200002  FF                 	db	255
  2031                           
  2032                           ;Config register IDLOC3 @ 0x200003
  2033                           ;	unspecified, using default values
  2034  200003                     	org	2097155
  2035  200003  FF                 	db	255
  2036                           
  2037                           ;Config register IDLOC4 @ 0x200004
  2038                           ;	unspecified, using default values
  2039  200004                     	org	2097156
  2040  200004  FF                 	db	255
  2041                           
  2042                           ;Config register IDLOC5 @ 0x200005
  2043                           ;	unspecified, using default values
  2044  200005                     	org	2097157
  2045  200005  FF                 	db	255
  2046                           
  2047                           ;Config register IDLOC6 @ 0x200006
  2048                           ;	unspecified, using default values
  2049  200006                     	org	2097158
  2050  200006  FF                 	db	255
  2051                           
  2052                           ;Config register IDLOC7 @ 0x200007
  2053                           ;	unspecified, using default values
  2054  200007                     	org	2097159
  2055  200007  FF                 	db	255
  2056                           
  2057                           	psect	config
  2058                           
  2059                           ; Padding undefined space
  2060  300000                     	org	3145728
  2061  300000  FF                 	db	255
  2062                           
  2063                           ;Config register CONFIG1H @ 0x300001
  2064                           ;	Oscillator Selection bits
  2065                           ;	OSC = XT, XT oscillator
  2066                           ;	Fail-Safe Clock Monitor Enable bit
  2067                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2068                           ;	Internal/External Oscillator Switchover bit
  2069                           ;	IESO = OFF, Two-Speed Start-up disabled
  2070  300001                     	org	3145729
  2071  300001  01                 	db	1
  2072                           
  2073                           ;Config register CONFIG2L @ 0x300002
  2074                           ;	Power-up Timer Enable bit
  2075                           ;	PWRT = OFF, PWRT disabled
  2076                           ;	Brown-out Reset Enable bits
  2077                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2078                           ;	Brown-out Voltage bits
  2079                           ;	BORV = 3, Minimum setting
  2080  300002                     	org	3145730
  2081  300002  19                 	db	25
  2082                           
  2083                           ;Config register CONFIG2H @ 0x300003
  2084                           ;	Watchdog Timer
  2085                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2086                           ;	Watchdog Timer Postscale Select bits
  2087                           ;	WDTPS = 32768, 1:32768
  2088  300003                     	org	3145731
  2089  300003  1E                 	db	30
  2090                           
  2091                           ;Config register CONFIG3L @ 0x300004
  2092                           ;	Processor Data Memory Mode Select bits
  2093                           ;	MODE = MC, Microcontroller mode
  2094                           ;	Address Bus Width Select bits
  2095                           ;	ADDRBW = ADDR20BIT, 20-bit Address Bus
  2096                           ;	Data Bus Width Select bit
  2097                           ;	DATABW = DATA16BIT, 16-bit External Bus mode
  2098                           ;	External Bus Data Wait Enable bit
  2099                           ;	WAIT = OFF, Wait selections are unavailable for table reads and table writes
  2100  300004                     	org	3145732
  2101  300004  F3                 	db	243
  2102                           
  2103                           ;Config register CONFIG3H @ 0x300005
  2104                           ;	CCP2 MUX bit
  2105                           ;	CCP2MX = PORTC, ECCP2 input/output is multiplexed with RC1
  2106                           ;	ECCP MUX bit
  2107                           ;	ECCPMX = PORTE, ECCP1/3 (P1B/P1C/P3B/P3C) are multiplexed onto RE6, RE5, RE4 and RE3 r
      +                          espectively
  2108                           ;	Low-Power Timer1 Oscillator Enable bit
  2109                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2110                           ;	MCLR Pin Enable bit
  2111                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
  2112  300005                     	org	3145733
  2113  300005  83                 	db	131
  2114                           
  2115                           ;Config register CONFIG4L @ 0x300006
  2116                           ;	Stack Full/Underflow Reset Enable bit
  2117                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2118                           ;	Single-Supply ICSP Enable bit
  2119                           ;	LVP = OFF, Single-Supply ICSP disabled
  2120                           ;	Boot Block Size Select bits
  2121                           ;	BBSIZ = BB2K, 1K word (2 Kbytes) Boot Block size
  2122                           ;	Extended Instruction Set Enable bit
  2123                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2124                           ;	Background Debugger Enable bit
  2125                           ;	DEBUG = 0x1, unprogrammed default
  2126  300006                     	org	3145734
  2127  300006  81                 	db	129
  2128                           
  2129                           ; Padding undefined space
  2130  300007                     	org	3145735
  2131  300007  FF                 	db	255
  2132                           
  2133                           ;Config register CONFIG5L @ 0x300008
  2134                           ;	Code Protection bit Block 0
  2135                           ;	CP0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not code-protected
  2136                           ;	Code Protection bit Block 1
  2137                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2138                           ;	Code Protection bit Block 2
  2139                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2140                           ;	Code Protection bit Block 3
  2141                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2142                           ;	Code Protection bit Block 4
  2143                           ;	CP4 = OFF, Block 4 (010000-013FFFh) not code-protected
  2144                           ;	Code Protection bit Block 5
  2145                           ;	CP5 = OFF, Block 5 (014000-017FFFh) not code-protected
  2146                           ;	Code Protection bit Block 6
  2147                           ;	CP6 = OFF, Block 6 (01BFFF-018000h) not code-protected
  2148                           ;	Code Protection bit Block 7
  2149                           ;	CP7 = OFF, Block 7 (01C000-01FFFFh) not code-protected
  2150  300008                     	org	3145736
  2151  300008  FF                 	db	255
  2152                           
  2153                           ;Config register CONFIG5H @ 0x300009
  2154                           ;	Boot Block Code Protection bit
  2155                           ;	CPB = OFF, Boot Block (000000-0007FFh) not code-protected
  2156                           ;	Data EEPROM Code Protection bit
  2157                           ;	CPD = OFF, Data EEPROM not code-protected
  2158  300009                     	org	3145737
  2159  300009  C0                 	db	192
  2160                           
  2161                           ;Config register CONFIG6L @ 0x30000A
  2162                           ;	Write Protection bit Block 0
  2163                           ;	WRT0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not write-protected
  2164                           ;	Write Protection bit Block 1
  2165                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2166                           ;	Write Protection bit Block 2
  2167                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2168                           ;	Write Protection bit Block 3
  2169                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2170                           ;	Write Protection bit Block 4
  2171                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  2172                           ;	Write Protection bit Block 5
  2173                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  2174                           ;	Write Protection bit Block 6
  2175                           ;	WRT6 = OFF, Block 6 (01BFFF-018000h) not write-protected
  2176                           ;	Write Protection bit Block 7
  2177                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  2178  30000A                     	org	3145738
  2179  30000A  FF                 	db	255
  2180                           
  2181                           ;Config register CONFIG6H @ 0x30000B
  2182                           ;	Configuration Register Write Protection bit
  2183                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2184                           ;	Boot Block Write Protection bit
  2185                           ;	WRTB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not write-protected
  2186                           ;	Data EEPROM Write Protection bit
  2187                           ;	WRTD = OFF, Data EEPROM not write-protected
  2188  30000B                     	org	3145739
  2189  30000B  E0                 	db	224
  2190                           
  2191                           ;Config register CONFIG7L @ 0x30000C
  2192                           ;	Table Read Protection bit Block 0
  2193                           ;	EBTR0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not protected from table reads
      +                           executed in other blocks
  2194                           ;	Table Read Protection bit Block 1
  2195                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2196                           ;	Table Read Protection bit Block 2
  2197                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2198                           ;	Table Read Protection bit Block 3
  2199                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2200                           ;	Table Read Protection bit Block 4
  2201                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  2202                           ;	Table Read Protection bit Block 5
  2203                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  2204                           ;	Table Read Protection bit Block 6
  2205                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  2206                           ;	Table Read Protection bit Block 7
  2207                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  2208  30000C                     	org	3145740
  2209  30000C  FF                 	db	255
  2210                           
  2211                           ;Config register CONFIG7H @ 0x30000D
  2212                           ;	Boot Block Table Read Protection bit
  2213                           ;	EBTRB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not protected from table re
      +                          ads executed in other blocks
  2214  30000D                     	org	3145741
  2215  30000D  40                 	db	64
  2216                           tosu	equ	0xFFF
  2217                           tosh	equ	0xFFE
  2218                           tosl	equ	0xFFD
  2219                           stkptr	equ	0xFFC
  2220                           pclatu	equ	0xFFB
  2221                           pclath	equ	0xFFA
  2222                           pcl	equ	0xFF9
  2223                           tblptru	equ	0xFF8
  2224                           tblptrh	equ	0xFF7
  2225                           tblptrl	equ	0xFF6
  2226                           tablat	equ	0xFF5
  2227                           prodh	equ	0xFF4
  2228                           prodl	equ	0xFF3
  2229                           indf0	equ	0xFEF
  2230                           postinc0	equ	0xFEE
  2231                           postdec0	equ	0xFED
  2232                           preinc0	equ	0xFEC
  2233                           plusw0	equ	0xFEB
  2234                           fsr0h	equ	0xFEA
  2235                           fsr0l	equ	0xFE9
  2236                           wreg	equ	0xFE8
  2237                           indf1	equ	0xFE7
  2238                           postinc1	equ	0xFE6
  2239                           postdec1	equ	0xFE5
  2240                           preinc1	equ	0xFE4
  2241                           plusw1	equ	0xFE3
  2242                           fsr1h	equ	0xFE2
  2243                           fsr1l	equ	0xFE1
  2244                           bsr	equ	0xFE0
  2245                           indf2	equ	0xFDF
  2246                           postinc2	equ	0xFDE
  2247                           postdec2	equ	0xFDD
  2248                           preinc2	equ	0xFDC
  2249                           plusw2	equ	0xFDB
  2250                           fsr2h	equ	0xFDA
  2251                           fsr2l	equ	0xFD9
  2252                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    80
    Data        2
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      90
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_spiInit
    _testSpiSend->_spiWrite
    _SPICallback->_spiWrite

Critical Paths under _service in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _service in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _service in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _service in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _service in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _service in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _service in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _service in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _service in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _service in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _service in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _service in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _service in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _service in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _service in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _service in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _service in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                80    80      0     391
                                              4 COMRAM    80    80      0
                        _SPICallback
                     _buttonCallback
                     _buttonDebounce
               _displayRequestHandle
                   _initialiseButton
                     _serialCallback
                 _setButtonInterrput
                        _setButtonIo
                      _setInterrupts
                              _setIo
                    _setSPIInterrupt
                          _setSerial
                        _setSerialIo
                     _setupDisplayIo
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setupDisplayIo                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSerialIo                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSerial                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSPIInterrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setIo                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setInterrupts                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setButtonIo                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setButtonInterrput                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _serialCallback                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialiseButton                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displayRequestHandle                                 0     0      0       0
                         _displaySPI
                      _displaySerial
 ---------------------------------------------------------------------------------
 (2) _displaySerial                                        0     0      0       0
                    _displayCallback
 ---------------------------------------------------------------------------------
 (2) _displaySPI                                           0     0      0       0
                    _displayCallback
 ---------------------------------------------------------------------------------
 (3) _displayCallback                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttonDebounce                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttonCallback                                       0     0      0      15
                        _testSpiSend
 ---------------------------------------------------------------------------------
 (2) _testSpiSend                                          0     0      0      15
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _SPICallback                                          0     0      0      15
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _service                                              0     0      0       0
                   _interruptService
 ---------------------------------------------------------------------------------
 (5) _interruptService                                     0     0      0       0
            _processInterruptService
 ---------------------------------------------------------------------------------
 (6) _processInterruptService                              0     0      0       0
                          _SPIHandle
                       _buttonHandle
                       _serialHandle
 ---------------------------------------------------------------------------------
 (7) _serialHandle                                         0     0      0       0
                         _readSerial
 ---------------------------------------------------------------------------------
 (8) _readSerial                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _buttonHandle                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _SPIHandle                                            0     0      0       0
                            _spiRead
 ---------------------------------------------------------------------------------
 (8) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (9) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPICallback
     _spiWrite
   _buttonCallback
     _testSpiSend
       _spiWrite
   _buttonDebounce
   _displayRequestHandle
     _displaySPI
       _displayCallback
     _displaySerial
       _displayCallback
   _initialiseButton
   _serialCallback
   _setButtonInterrput
   _setButtonIo
   _setInterrupts
   _setIo
   _setSPIInterrupt
   _setSerial
   _setSerialIo
   _setupDisplayIo
   _spiInit

 _service (ROOT)
   _interruptService
     _processInterruptService
       _SPIHandle
         _spiRead
           _spiReceiveWait
       _buttonHandle
       _serialHandle
         _readSerial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      5A       1       95.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5A      32        0.0%
DATA                 0      0      5A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jul 13 21:50:25 2021

        ?_processInterruptService 0001                                l93 130A  
                              l97 11A6                                l98 11B0  
                             l121 12D2                               l107 12F6  
                             l124 12EE                               l212 1304  
                             l141 1316                               l215 131C  
                             l135 133A                               l209 128E  
                             l250 1234                               l138 1310  
                             l243 1332                               l260 1256  
                             l246 1322                               l280 12BE  
                             l283 12C8                               l292 1328  
                             l277 12B4                               l286 11FC  
                             l289 1210                               l980 12F2  
                             _GIE 007F97                               l998 1324  
                             u120 11F2                               u121 11EE  
                             u130 120A                               u131 1206  
                             u140 1220                               u141 121C  
                             u150 122E                               u230 1190  
                             u151 122A                               u231 118C  
                             u160 124E                               u240 1092  
                             u161 124A                               u250 10AA  
                             u251 10A6                               u260 10BE  
                             u261 10BA                               u270 10D2  
                             u271 10CE                               u280 10E6  
                             u281 10E2                               u290 10FA  
                             u291 10F6                               wreg 000FE8  
                  ?_displaySerial 0001            ??_displayRequestHandle 0001  
                            l1000 12E8                              l1100 1212  
                            l1102 1220                              l1110 123C  
                            l1030 12BA                              l1104 122E  
                            l1112 124E                              l1032 12C0  
                            l1040 1300                              l1200 10AE  
                            l1106 1232                              l1114 1250  
                            l1034 12C4                              l1050 1282  
                            l1042 1278                              l1210 10D2  
                            l1202 10B0                              l1108 1236  
                            l1028 12B6                              l1060 131E  
                            l1052 1284                              l1044 127A  
                            l1220 10EC                              l1212 10D6  
                            l1204 10BE                              l1062 1312  
                            l1038 1306                              l1054 1286  
                            l1046 127E                              l1222 10FA  
                            l1214 10D8                              l1206 10C2  
                            l1064 1330                              l1056 1288  
                            l1048 1280                              l1216 10E6  
                            l1208 10C4                              l1090 11F2  
                            l1066 130C                              l1058 12AC  
                            l1170 117E                              l1218 10E8  
                            l1084 12CA                              l1092 11F6  
                            l1180 11A4                              l1172 1182  
                            l1086 12D0                              l1094 120A  
                            l1182 11AC                              l1174 1190  
                            l1190 1062                              l1096 120E  
                            l1088 11E4                              l1184 11AE  
                            l1176 119C                              l1192 1076  
                            l1098 1318                              l1178 11A2  
                            l1194 1088                              l1186 1052  
                            l1196 109C                              l1188 105E  
                            l1198 10AA                              _CKE1 007E3E  
                            _CKP1 007E34                              _PEIE 007F96  
                            i2l45 12DA                              _main 1052  
                            btemp 005B                              start 000E  
                    ___param_bank 000000          __end_of_interruptService 1330  
                           ?_main 0001                             _BRGH1 007D62  
                           _CREN1 007D5C                             _FLAGS 0057  
                           _LATC0 007C58                             _RC1IE 007CED  
                           _RC1IF 007CF5                             i2l101 1290  
                           i2l104 129E                             i2l115 12FE  
                           i2l118 12AA                             i2l218 12E6  
                           i2l227 1336                             i2l171 117A  
                           i2l254 1276                             i2l174 132E  
                           i2l970 12F8                             i2l972 12FC  
                           i2l982 12A0                             i2l990 12E0  
                           i2l968 1290                             i2l984 12A6  
                           i2l992 1258                             i2l976 1334  
                           i2l986 12A8                             i2l994 1266  
                           i2l996 1274                             i2l988 12DE  
                           _SPEN1 007D5F                             _SPBRG 000FAF  
                           _PORTD 000F83                             _TRISD 000F95  
                           _TXEN1 007D65                             _SYNC1 007D64  
                           _setIo 133A                  ?_displayCallback 0001  
              __size_of_SPIHandle 000C                   __end_of_spiInit 11B2  
                 __end_of_spiRead 1300                             tablat 000FF5  
                 __end_of_service 12DE                             ttemp5 005C  
                           ttemp6 005F                             ttemp7 0063  
                           status 000FD8             __end_of_setInterrupts 1312  
                           wtemp8 005C                  ??_setupDisplayIo 0001  
                 __initialization 11B2                      __end_of_main 1106  
                 _readSerialValue 0056                            ??_main 0005  
                   __activetblptr 000001                      ?_setButtonIo 0001  
                 ??_displaySerial 0001                 ?_initialiseButton 0001  
                    ?_setSerialIo 0001                            ?_setIo 0001  
              ??_initialiseButton 0001                     ?_buttonHandle 0001  
                          _INT0IE 007F94                            _INT0IF 007F91  
                          i2l1010 1128                            i2l1002 1106  
                          i2l1012 1136                            i2l1020 1158  
                          i2l1004 1114                            i2l1022 1166  
                          i2l1014 1144                            i2l1006 1122  
                          i2l1024 1174                            i2l1016 1152  
                          i2l1008 1126                            i2l1026 1178  
                          i2l1018 1156                            i2l1036 132A  
                          i2l1116 12D6                            _RCREG1 000FAE  
                          _SSP1IE 007CEB                            i2u1_40 129E  
                          _SSP1IF 007CF3                            i2u1_41 129A  
                          i2u2_40 1266                            i2u2_41 1262  
                          i2u3_40 1274                            i2u3_41 1270  
                          i2u4_40 1114                            i2u4_41 1110  
                          i2u5_40 1122                            i2u5_41 111E  
                          i2u6_40 1136                            i2u6_41 1132  
                          i2u7_40 1144                            i2u7_41 1140  
                          i2u8_40 1152                            i2u8_41 114E  
                          _TRISB0 007C98                            i2u9_40 1166  
                          _TRISC2 007CA2                            i2u9_41 1162  
                          _TRISC3 007CA3                            _TRISC4 007CA4  
                          _TRISC5 007CA5                            _TRISC6 007CA6  
                          _TRISC7 007CA7                            _TXREG1 000FAD  
              _setButtonInterrput 1312               ?_setButtonInterrput 0001  
               __end_of_SPIHandle 12AC           __size_of_serialCallback 0006  
                          isa$std 000001                      __pdataCOMRAM 0059  
                    ?_SPICallback 0001                      __mediumconst 0000  
                __end_of_spiWrite 12F8                      ?_testSpiSend 0001  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                         ??_spiInit 0004  
                       ??_spiRead 0001                         ??_service 0001  
                  ??_buttonHandle 0001              ??_setButtonInterrput 0001  
                      __accesstop 0060           __end_of__initialization 11D2  
                   ___rparam_used 000001                    __pcstackCOMRAM 0001  
                   __end_of_setIo 133C          __size_of_setSPIInterrupt 0006  
__size_of_processInterruptService 0076                           ??_setIo 0001  
               ?_interruptService 0001           __size_of_spiReceiveWait 0010  
              __size_of_setSerial 0018                ??_interruptService 0001  
                         _INTEDG0 007F8E                           i2u10_40 1174  
                         i2u10_41 1170              __size_of_setButtonIo 0004  
                         _SSP1BUF 000FC9                        _displaySPI 12C0  
         __size_of_buttonCallback 0024              __size_of_setSerialIo 0006  
         __size_of_buttonDebounce 0022     __size_of_displayRequestHandle 002E  
                   ?_serialHandle 0001                           __Hparam 0000  
                         __Lparam 0000                         ?_spiWrite 0001  
                      _readSerial 1334              __end_of_buttonHandle 1278  
                    __psmallconst 1000                    _serialCallback 1318  
                         __pcinit 11B2                           __ramtop 1000  
                         __ptext0 1052                           __ptext1 117C  
                         __ptext2 12AC                           __ptext3 1300  
                         __ptext4 1278                           __ptext5 1306  
                         __ptext6 133A                           __ptext7 130C  
                         __ptext8 1330                           __ptext9 1312  
                         _spiInit 117C                           _spiRead 12F8  
                         _service 0008              __size_of_SPICallback 000A  
            __size_of_testSpiSend 0008                    __pintcode_body 12D4  
            end_of_initialization 11D2                 __end_of_setSerial 1290  
                  ??_serialHandle 0001                           int_func 12D4  
               ??_setSPIInterrupt 0001                 __end_ofmain@F4619 1051  
        __size_of_displayCallback 0006         __size_of_initialiseButton 0006  
                      ??_spiWrite 0001            __end_of_serialCallback 131E  
                         postinc2 000FDE            __size_of_setInterrupts 0006  
                       _SPIHandle 12A0           _processInterruptService 1106  
                     ?_displaySPI 0001             __end_of_displaySerial 12C0  
                     spiWrite@dat 0001                   ?_serialCallback 0001  
                  _spiReceiveWait 1290                       ?_readSerial 0001  
         __size_of_setupDisplayIo 000A                     __pidataCOMRAM 1338  
                      ?_SPIHandle 0001               start_initialization 11B2  
                  _buttonCallback 1212       __size_of_setButtonInterrput 0006  
                  _buttonDebounce 1236                     _setInterrupts 130C  
                    _readSPIValue 0058             __size_of_buttonHandle 0020  
          __end_of_spiReceiveWait 12A0               __size_of_displaySPI 000A  
               ??_displayCallback 0001              __end_of_serialHandle 12E8  
       ??_processInterruptService 0001                       __pbssCOMRAM 0055  
          __end_of_buttonCallback 1236         __size_of_interruptService 0006  
           buttonDebounce@counter 0059            __end_of_buttonDebounce 1258  
                    _buttonHandle 1258               __size_of_readSerial 0004  
                  ?_setInterrupts 0001                  _initialiseButton 131E  
                 ?_spiReceiveWait 0001                         __pintcode 0008  
    __end_of_displayRequestHandle 1212                 __size_of_spiWrite 0008  
                   ??_setButtonIo 0001                       __smallconst 1000  
                     ??_SPIHandle 0001                   _setSPIInterrupt 1306  
                        ?_spiInit 0001                          ?_spiRead 0001  
                 ?_buttonCallback 0001                          ?_service 0001  
                   ??_setSerialIo 0001                   ?_buttonDebounce 0001  
                  __size_of_setIo 0002              spiInit@sTransmitEdge 0003  
 __end_of_processInterruptService 117C                         _setSerial 1278  
              spiInit@sDataSample 0001                         main@F4619 1001  
                        _SSP1CON1 000FC6                          _SSP1STAT 000FC7  
                  _setupDisplayIo 12AC                     ??_SPICallback 0002  
                   ??_testSpiSend 0002                      ??_displaySPI 0001  
             __end_of_setButtonIo 1334                   ??_setInterrupts 0001  
             __end_of_setSerialIo 1306                  ??_serialCallback 0001  
                      ?_setSerial 0001                          __Hrparam 0000  
                        __Lrparam 0000                      __Lsmallconst 1000  
          __end_of_setupDisplayIo 12B6             __size_of_serialHandle 000A  
                    ??_readSerial 0001                __end_of_displaySPI 12CA  
         __end_of_setSPIInterrupt 130C                  _interruptService 132A  
                        __ptext10 1318                          __ptext11 131E  
                        __ptext20 12F0                          __ptext12 11E4  
                        __ptext13 12B6                          __ptext22 132A  
                        __ptext14 12C0                          __ptext23 1106  
                        __ptext15 1324                          __ptext24 12DE  
                        __ptext16 1236                          __ptext25 1334  
                        __ptext17 1212                          __ptext26 1258  
                        __ptext18 12E8                          __ptext27 12A0  
                        __ptext19 12CA                          __ptext28 12F8  
                        __ptext29 1290                  __size_of_spiInit 0036  
                __size_of_spiRead 0008                  __size_of_service 12D6  
                        _ledValue 0055               __end_of_SPICallback 12D4  
             __end_of_testSpiSend 12F0              _displayRequestHandle 11E4  
              __end_of_readSerial 1338                     __size_of_main 00B4  
                    _serialHandle 12DE                   _displayCallback 1324  
                        isa$xinst 000000                   ?_setupDisplayIo 0001  
                        _spiWrite 12F0                          int$flags 005B  
                    spiInit@sType 0004            __size_of_displaySerial 000A  
                    _SSP1STATbits 000FC7                 spiInit@sClockIdle 0002  
                        main@test 0005                       _setButtonIo 1330  
        __end_of_initialiseButton 1324        __end_of_setButtonInterrput 1318  
                     _setSerialIo 1300                          intlevel2 0000  
           ?_displayRequestHandle 0001                  ??_spiReceiveWait 0001  
                     ??_setSerial 0001                  ?_setSPIInterrupt 0001  
                ??_buttonCallback 0002                  ??_buttonDebounce 0001  
                     _SPICallback 12CA                       _testSpiSend 12E8  
                   _displaySerial 12B6           __end_of_displayCallback 132A  
