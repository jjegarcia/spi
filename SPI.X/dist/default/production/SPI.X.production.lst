

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jul  8 15:23:36 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F8722 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataCOMRAM
    84  00133A                     __pidataCOMRAM:
    85                           	callstack 0
    86                           
    87                           ;initializer for buttonDebounce@counter
    88  00133A  00FF               	dw	255
    89                           
    90                           	psect	smallconst
    91  001000                     __psmallconst:
    92                           	callstack 0
    93  001000  00                 	db	0
    94  001001                     main@F4619:
    95                           	callstack 0
    96  001001  73                 	db	115
    97  001002  73                 	db	115
    98  001003  73                 	db	115
    99  001004  64                 	db	100
   100  001005  64                 	db	100
   101  001006  64                 	db	100
   102  001007  64                 	db	100
   103  001008  00                 	db	0
   104  001009  00                 	db	0
   105  00100A  00                 	db	0
   106  00100B  00                 	db	0
   107  00100C  00                 	db	0
   108  00100D  00                 	db	0
   109  00100E  00                 	db	0
   110  00100F  00                 	db	0
   111  001010  00                 	db	0
   112  001011  00                 	db	0
   113  001012  00                 	db	0
   114  001013  00                 	db	0
   115  001014  00                 	db	0
   116  001015  00                 	db	0
   117  001016  00                 	db	0
   118  001017  00                 	db	0
   119  001018  00                 	db	0
   120  001019  00                 	db	0
   121  00101A  00                 	db	0
   122  00101B  00                 	db	0
   123  00101C  00                 	db	0
   124  00101D  00                 	db	0
   125  00101E  00                 	db	0
   126  00101F  00                 	db	0
   127  001020  00                 	db	0
   128  001021  00                 	db	0
   129  001022  00                 	db	0
   130  001023  00                 	db	0
   131  001024  00                 	db	0
   132  001025  00                 	db	0
   133  001026  00                 	db	0
   134  001027  00                 	db	0
   135  001028  00                 	db	0
   136  001029  00                 	db	0
   137  00102A  00                 	db	0
   138  00102B  00                 	db	0
   139  00102C  00                 	db	0
   140  00102D  00                 	db	0
   141  00102E  00                 	db	0
   142  00102F  00                 	db	0
   143  001030  00                 	db	0
   144  001031  00                 	db	0
   145  001032  00                 	db	0
   146  001033  00                 	db	0
   147  001034  00                 	db	0
   148  001035  00                 	db	0
   149  001036  00                 	db	0
   150  001037  00                 	db	0
   151  001038  00                 	db	0
   152  001039  00                 	db	0
   153  00103A  00                 	db	0
   154  00103B  00                 	db	0
   155  00103C  00                 	db	0
   156  00103D  00                 	db	0
   157  00103E  00                 	db	0
   158  00103F  00                 	db	0
   159  001040  00                 	db	0
   160  001041  00                 	db	0
   161  001042  00                 	db	0
   162  001043  00                 	db	0
   163  001044  00                 	db	0
   164  001045  00                 	db	0
   165  001046  00                 	db	0
   166  001047  00                 	db	0
   167  001048  00                 	db	0
   168  001049  00                 	db	0
   169  00104A  00                 	db	0
   170  00104B  00                 	db	0
   171  00104C  00                 	db	0
   172  00104D  00                 	db	0
   173  00104E  00                 	db	0
   174  00104F  00                 	db	0
   175  001050  00                 	db	0
   176  001051                     __end_ofmain@F4619:
   177                           	callstack 0
   178  0000                     _PORTD	set	3971
   179  0000                     _TRISD	set	3989
   180  0000                     _TXREG1	set	4013
   181  0000                     _RCREG1	set	4014
   182  0000                     _SPBRG	set	4015
   183  0000                     _SSP1BUF	set	4041
   184  0000                     _SSP1STATbits	set	4039
   185  0000                     _SSP1CON1	set	4038
   186  0000                     _SSP1STAT	set	4039
   187  0000                     _TRISB0	set	31896
   188  0000                     _TRISC6	set	31910
   189  0000                     _TRISC7	set	31911
   190  0000                     _TXEN1	set	32101
   191  0000                     _CREN1	set	32092
   192  0000                     _SPEN1	set	32095
   193  0000                     _SYNC1	set	32100
   194  0000                     _BRGH1	set	32098
   195  0000                     _INT0IF	set	32657
   196  0000                     _RC1IF	set	31989
   197  0000                     _RC1IE	set	31981
   198  0000                     _INT0IE	set	32660
   199  0000                     _INTEDG0	set	32654
   200  0000                     _PEIE	set	32662
   201  0000                     _GIE	set	32663
   202  0000                     _CKP1	set	32308
   203  0000                     _CKE1	set	32318
   204  0000                     _LATC0	set	31832
   205  0000                     _TRISC2	set	31906
   206  0000                     _TRISC3	set	31907
   207  0000                     _TRISC4	set	31908
   208  0000                     _TRISC5	set	31909
   209  0000                     _SSP1IE	set	31979
   210  0000                     _SSP1IF	set	31987
   211  001051  00                 	db	0	; dummy byte at the end
   212  0000                     
   213                           ; #config settings
   214                           
   215                           	psect	cinit
   216  0011B4                     __pcinit:
   217                           	callstack 0
   218  0011B4                     start_initialization:
   219                           	callstack 0
   220  0011B4                     __initialization:
   221                           	callstack 0
   222                           
   223                           ; Initialize objects allocated to COMRAM (2 bytes)
   224                           ; load TBLPTR registers with __pidataCOMRAM
   225  0011B4  0E3A               	movlw	low __pidataCOMRAM
   226  0011B6  6EF6               	movwf	tblptrl,c
   227  0011B8  0E13               	movlw	high __pidataCOMRAM
   228  0011BA  6EF7               	movwf	tblptrh,c
   229  0011BC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   230  0011BE  6EF8               	movwf	tblptru,c
   231  0011C0  0009               	tblrd		*+	;fetch initializer
   232  0011C2  CFF5 F059          	movff	tablat,__pdataCOMRAM
   233  0011C6  0009               	tblrd		*+	;fetch initializer
   234  0011C8  CFF5 F05A          	movff	tablat,__pdataCOMRAM+1
   235                           
   236                           ; Clear objects allocated to COMRAM (4 bytes)
   237  0011CC  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   238  0011CE  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   239  0011D0  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   240  0011D2  6A55               	clrf	__pbssCOMRAM& (0+255),c
   241  0011D4                     end_of_initialization:
   242                           	callstack 0
   243  0011D4                     __end_of__initialization:
   244                           	callstack 0
   245  0011D4  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   246  0011D6  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   247  0011D8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   248  0011DA  6EF8               	movwf	tblptru,c
   249  0011DC  0E10               	movlw	high __Lsmallconst
   250  0011DE  6EF7               	movwf	tblptrh,c
   251  0011E0  0100               	movlb	0
   252  0011E2  EF29  F008         	goto	_main	;jump to C main() function
   253                           
   254                           	psect	bssCOMRAM
   255  000055                     __pbssCOMRAM:
   256                           	callstack 0
   257  000055                     _ledValue:
   258                           	callstack 0
   259  000055                     	ds	1
   260  000056                     _readSerialValue:
   261                           	callstack 0
   262  000056                     	ds	1
   263  000057                     _FLAGS:
   264                           	callstack 0
   265  000057                     	ds	1
   266  000058                     _readSPIValue:
   267                           	callstack 0
   268  000058                     	ds	1
   269                           
   270                           	psect	dataCOMRAM
   271  000059                     __pdataCOMRAM:
   272                           	callstack 0
   273  000059                     buttonDebounce@counter:
   274                           	callstack 0
   275  000059                     	ds	2
   276                           
   277                           	psect	cstackCOMRAM
   278  000001                     __pcstackCOMRAM:
   279                           	callstack 0
   280  000001                     spiInit@sDataSample:
   281                           	callstack 0
   282  000001                     spiWrite@dat:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x0
   286  000001                     	ds	1
   287  000002                     spiInit@sClockIdle:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0x1
   291  000002                     	ds	1
   292  000003                     spiInit@sTransmitEdge:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0x2
   296  000003                     	ds	1
   297  000004                     spiInit@sType:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x3
   301  000004                     	ds	1
   302  000005                     main@test:
   303                           	callstack 0
   304                           
   305                           ; 80 bytes @ 0x4
   306  000005                     	ds	80
   307                           
   308 ;;
   309 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   310 ;;
   311 ;; *************** function _main *****************
   312 ;; Defined at:
   313 ;;		line 22 in file "newmain.c"
   314 ;; Parameters:    Size  Location     Type
   315 ;;		None
   316 ;; Auto vars:     Size  Location     Type
   317 ;;  test           80    4[COMRAM] const unsigned char [80]
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      void 
   320 ;; Registers used:
   321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   322 ;; Tracked objects:
   323 ;;		On entry : 0/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   328 ;;      Locals:        80       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   330 ;;      Totals:        80       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   331 ;;Total ram usage:       80 bytes
   332 ;; Hardware stack levels required when called: 9
   333 ;; This function calls:
   334 ;;		_SPICallback
   335 ;;		_buttonCallback
   336 ;;		_buttonDebounce
   337 ;;		_displayRequestHandle
   338 ;;		_initialiseButton
   339 ;;		_serialCallback
   340 ;;		_setButtonInterrput
   341 ;;		_setButtonIo
   342 ;;		_setInterrupts
   343 ;;		_setIo
   344 ;;		_setSPIInterrupt
   345 ;;		_setSerial
   346 ;;		_setSerialIo
   347 ;;		_setupDisplayIo
   348 ;;		_spiInit
   349 ;; This function is called by:
   350 ;;		Startup code after reset
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           	psect	text0
   355  001052                     __ptext0:
   356                           	callstack 0
   357  001052                     _main:
   358                           	callstack 22
   359  001052                     
   360                           ;newmain.c: 23:     setIo();
   361  001052  EC9E  F009         	call	_setIo	;wreg free
   362                           
   363                           ;newmain.c: 24:     setSPIInterrupt();
   364  001056  EC84  F009         	call	_setSPIInterrupt	;wreg free
   365                           
   366                           ;newmain.c: 25:     setSerialIo();
   367  00105A  EC81  F009         	call	_setSerialIo	;wreg free
   368  00105E                     
   369                           ;newmain.c: 26:     setSerial();
   370  00105E  EC3D  F009         	call	_setSerial	;wreg free
   371  001062                     
   372                           ;newmain.c: 27:     setupDisplayIo();
   373  001062  EC57  F009         	call	_setupDisplayIo	;wreg free
   374                           
   375                           ;newmain.c: 28:     initialiseButton();
   376  001066  EC90  F009         	call	_initialiseButton	;wreg free
   377                           
   378                           ;newmain.c: 29:     setButtonInterrput();
   379  00106A  EC8A  F009         	call	_setButtonInterrput	;wreg free
   380                           
   381                           ;newmain.c: 30:     setButtonIo();
   382  00106E  EC99  F009         	call	_setButtonIo	;wreg free
   383                           
   384                           ;newmain.c: 31:     setInterrupts();
   385  001072  EC87  F009         	call	_setInterrupts	;wreg free
   386  001076                     
   387                           ;newmain.c: 33:     spiInit(SPI_SLAVE_SS_DIS, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
   388  001076  0E00               	movlw	0
   389  001078  6E01               	movwf	spiInit@sDataSample^0,c
   390  00107A  0E00               	movlw	0
   391  00107C  6E02               	movwf	spiInit@sClockIdle^0,c
   392  00107E  0E00               	movlw	0
   393  001080  6E03               	movwf	spiInit@sTransmitEdge^0,c
   394  001082  0E25               	movlw	37
   395  001084  ECBE  F008         	call	_spiInit
   396  001088                     
   397                           ;newmain.c: 35:     const unsigned char test[80] = "sssdddd";
   398  001088  0E01               	movlw	low main@F4619
   399  00108A  6EF6               	movwf	tblptrl,c
   400  00108C                     	if	0	;There is only one active tblptr byte
   401  00108C                     	endif
   402  00108C                     	if	0	;There are less than 3 active tblptr bytes
   403  00108C                     	endif
   404  00108C  EE20  F005         	lfsr	2,main@test
   405  001090  0E4F               	movlw	79
   406  001092                     u240:
   407  001092  0009               	tblrd		*+
   408  001094  CFF5 FFDE          	movff	tablat,postinc2
   409  001098  06E8               	decf	wreg,f,c
   410  00109A  E2FB               	bc	u240
   411  00109C                     l1194:
   412                           
   413                           ;newmain.c: 38:         if (FLAGS.bits.SPI_READ_REQUEST == 1) {
   414  00109C  A257               	btfss	_FLAGS^0,1,c
   415  00109E  EF53  F008         	goto	u251
   416  0010A2  EF55  F008         	goto	u250
   417  0010A6                     u251:
   418  0010A6  EF58  F008         	goto	l1200
   419  0010AA                     u250:
   420  0010AA                     
   421                           ;newmain.c: 39:             SPICallback();
   422  0010AA  EC66  F009         	call	_SPICallback	;wreg free
   423  0010AE                     
   424                           ;newmain.c: 40:             FLAGS.bits.SPI_READ_REQUEST = 0;
   425  0010AE  9257               	bcf	_FLAGS^0,1,c
   426  0010B0                     l1200:
   427                           
   428                           ;newmain.c: 42:         if (FLAGS.bits.DISPLAY_READING) {
   429  0010B0  AA57               	btfss	_FLAGS^0,5,c
   430  0010B2  EF5D  F008         	goto	u261
   431  0010B6  EF5F  F008         	goto	u260
   432  0010BA                     u261:
   433  0010BA  EF62  F008         	goto	l1206
   434  0010BE                     u260:
   435  0010BE                     
   436                           ;newmain.c: 43:             displayRequestHandle();
   437  0010BE  ECF3  F008         	call	_displayRequestHandle	;wreg free
   438  0010C2                     
   439                           ;newmain.c: 44:             FLAGS.bits.DISPLAY_READING = 0;
   440  0010C2  9A57               	bcf	_FLAGS^0,5,c
   441  0010C4                     l1206:
   442                           
   443                           ;newmain.c: 46:         if (FLAGS.bits.UART_RECEIVED) {
   444  0010C4  A457               	btfss	_FLAGS^0,2,c
   445  0010C6  EF67  F008         	goto	u271
   446  0010CA  EF69  F008         	goto	u270
   447  0010CE                     u271:
   448  0010CE  EF6C  F008         	goto	l1212
   449  0010D2                     u270:
   450  0010D2                     
   451                           ;newmain.c: 47:             serialCallback();
   452  0010D2  EC8D  F009         	call	_serialCallback	;wreg free
   453  0010D6                     
   454                           ;newmain.c: 48:             FLAGS.bits.UART_RECEIVED = 0;
   455  0010D6  9457               	bcf	_FLAGS^0,2,c
   456  0010D8                     l1212:
   457                           
   458                           ;newmain.c: 50:         if (FLAGS.bits.PUSHED_BUTTON) {
   459  0010D8  A857               	btfss	_FLAGS^0,4,c
   460  0010DA  EF71  F008         	goto	u281
   461  0010DE  EF73  F008         	goto	u280
   462  0010E2                     u281:
   463  0010E2  EF76  F008         	goto	l1218
   464  0010E6                     u280:
   465  0010E6                     
   466                           ;newmain.c: 51:             FLAGS.bits.PUSH_REQUEST_SERVICED = 0;
   467  0010E6  9657               	bcf	_FLAGS^0,3,c
   468  0010E8                     
   469                           ;newmain.c: 52:             buttonCallback();
   470  0010E8  EC0A  F009         	call	_buttonCallback	;wreg free
   471  0010EC                     l1218:
   472                           
   473                           ;newmain.c: 54:         if (FLAGS.bits.PUSH_REQUEST_SERVICED == 0) {
   474  0010EC  B657               	btfsc	_FLAGS^0,3,c
   475  0010EE  EF7B  F008         	goto	u291
   476  0010F2  EF7D  F008         	goto	u290
   477  0010F6                     u291:
   478  0010F6  EF4E  F008         	goto	l1194
   479  0010FA                     u290:
   480  0010FA                     
   481                           ;newmain.c: 55:             buttonDebounce();
   482  0010FA  EC1C  F009         	call	_buttonDebounce	;wreg free
   483  0010FE  EF4E  F008         	goto	l1194
   484  001102  EF07  F000         	goto	start
   485  001106                     __end_of_main:
   486                           	callstack 0
   487                           
   488 ;; *************** function _spiInit *****************
   489 ;; Defined at:
   490 ;;		line 14 in file "spi.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;  sType           1    wreg     enum E4544
   493 ;;  sDataSample     1    0[COMRAM] enum E4552
   494 ;;  sClockIdle      1    1[COMRAM] enum E4556
   495 ;;  sTransmitEdg    1    2[COMRAM] enum E4560
   496 ;; Auto vars:     Size  Location     Type
   497 ;;  sType           1    3[COMRAM] enum E4544
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg, status,2, status,0
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   507 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   508 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   510 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   511 ;;Total ram usage:        4 bytes
   512 ;; Hardware stack levels used: 1
   513 ;; Hardware stack levels required when called: 6
   514 ;; This function calls:
   515 ;;		Nothing
   516 ;; This function is called by:
   517 ;;		_main
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           	psect	text1
   522  00117C                     __ptext1:
   523                           	callstack 0
   524  00117C                     _spiInit:
   525                           	callstack 24
   526                           
   527                           ;incstack = 0
   528                           ;spiInit@sType stored from wreg
   529  00117C  6E04               	movwf	spiInit@sType^0,c
   530  00117E                     
   531                           ;spi.c: 15:     TRISC5 = 0;
   532  00117E  9A94               	bcf	3988,5,c	;volatile
   533                           
   534                           ;spi.c: 16:     TRISC4 = 1;
   535  001180  8894               	bsf	3988,4,c	;volatile
   536  001182                     
   537                           ;spi.c: 17:     if (sType & 0b00000100)
   538  001182  A404               	btfss	spiInit@sType^0,2,c
   539  001184  EFC6  F008         	goto	u231
   540  001188  EFC8  F008         	goto	u230
   541  00118C                     u231:
   542  00118C  EFCF  F008         	goto	l1174
   543  001190                     u230:
   544  001190                     
   545                           ;spi.c: 18:     {;spi.c: 19:         SSP1STAT = sTransmitEdge;
   546  001190  C003  FFC7         	movff	spiInit@sTransmitEdge,4039	;volatile
   547                           
   548                           ;spi.c: 20:         TRISC3 = 1;
   549  001194  8694               	bsf	3988,3,c	;volatile
   550                           
   551                           ;spi.c: 21:         TRISC2 = 1;
   552  001196  8494               	bsf	3988,2,c	;volatile
   553                           
   554                           ;spi.c: 22:         LATC0 = 1;
   555  001198  808B               	bsf	3979,0,c	;volatile
   556                           
   557                           ;spi.c: 23:     } else
   558  00119A  EFD4  F008         	goto	l97
   559  00119E                     l1174:
   560                           
   561                           ;spi.c: 24:     {;spi.c: 25:         SSP1STAT = sDataSample | sTransmitEdge;
   562  00119E  5001               	movf	spiInit@sDataSample^0,w,c
   563  0011A0  1003               	iorwf	spiInit@sTransmitEdge^0,w,c
   564  0011A2  6EC7               	movwf	199,c	;volatile
   565  0011A4                     
   566                           ;spi.c: 26:         TRISC3 = 0;
   567  0011A4  9694               	bcf	3988,3,c	;volatile
   568  0011A6                     
   569                           ;spi.c: 27:         TRISC2 = 0;
   570  0011A6  9494               	bcf	3988,2,c	;volatile
   571  0011A8                     l97:
   572                           
   573                           ;spi.c: 29:     SSP1CON1 = sType | sClockIdle;
   574  0011A8  5004               	movf	spiInit@sType^0,w,c
   575  0011AA  1002               	iorwf	spiInit@sClockIdle^0,w,c
   576  0011AC  6EC6               	movwf	198,c	;volatile
   577  0011AE                     
   578                           ;spi.c: 31:     CKE1=0;
   579  0011AE  9CC7               	bcf	4039,6,c	;volatile
   580  0011B0                     
   581                           ;spi.c: 32:     CKP1=0;
   582  0011B0  98C6               	bcf	4038,4,c	;volatile
   583  0011B2  0012               	return		;funcret
   584  0011B4                     __end_of_spiInit:
   585                           	callstack 0
   586                           
   587 ;; *************** function _setupDisplayIo *****************
   588 ;; Defined at:
   589 ;;		line 6 in file "display.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;		None
   592 ;; Auto vars:     Size  Location     Type
   593 ;;		None
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		wreg, status,2
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   607 ;;Total ram usage:        0 bytes
   608 ;; Hardware stack levels used: 1
   609 ;; Hardware stack levels required when called: 6
   610 ;; This function calls:
   611 ;;		Nothing
   612 ;; This function is called by:
   613 ;;		_main
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           	psect	text2
   618  0012AE                     __ptext2:
   619                           	callstack 0
   620  0012AE                     _setupDisplayIo:
   621                           	callstack 24
   622  0012AE                     
   623                           ;display.c: 7:     TRISD = 0x00;
   624  0012AE  0E00               	movlw	0
   625  0012B0  6E95               	movwf	149,c	;volatile
   626                           
   627                           ;display.c: 8:     PORTD = 0x00;
   628  0012B2  0E00               	movlw	0
   629  0012B4  6E83               	movwf	131,c	;volatile
   630  0012B6  0012               	return		;funcret
   631  0012B8                     __end_of_setupDisplayIo:
   632                           	callstack 0
   633                           
   634 ;; *************** function _setSerialIo *****************
   635 ;; Defined at:
   636 ;;		line 17 in file "serial.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		None
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;Total ram usage:        0 bytes
   655 ;; Hardware stack levels used: 1
   656 ;; Hardware stack levels required when called: 6
   657 ;; This function calls:
   658 ;;		Nothing
   659 ;; This function is called by:
   660 ;;		_main
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           	psect	text3
   665  001302                     __ptext3:
   666                           	callstack 0
   667  001302                     _setSerialIo:
   668                           	callstack 24
   669  001302                     
   670                           ;serial.c: 18:     TRISC7 = 1;
   671  001302  8E94               	bsf	3988,7,c	;volatile
   672                           
   673                           ;serial.c: 19:     TRISC6 = 0;
   674  001304  9C94               	bcf	3988,6,c	;volatile
   675  001306  0012               	return		;funcret
   676  001308                     __end_of_setSerialIo:
   677                           	callstack 0
   678                           
   679 ;; *************** function _setSerial *****************
   680 ;; Defined at:
   681 ;;		line 5 in file "serial.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;		None
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, status,2
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   699 ;;Total ram usage:        0 bytes
   700 ;; Hardware stack levels used: 1
   701 ;; Hardware stack levels required when called: 6
   702 ;; This function calls:
   703 ;;		Nothing
   704 ;; This function is called by:
   705 ;;		_main
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           	psect	text4
   710  00127A                     __ptext4:
   711                           	callstack 0
   712  00127A                     _setSerial:
   713                           	callstack 24
   714  00127A                     
   715                           ;serial.c: 6:     BRGH1 = 0;
   716  00127A  94AC               	bcf	4012,2,c	;volatile
   717  00127C                     
   718                           ;serial.c: 7:     SPBRG = 15;
   719  00127C  0E0F               	movlw	15
   720  00127E  6EAF               	movwf	175,c	;volatile
   721  001280                     
   722                           ;serial.c: 8:     SYNC1 = 0;
   723  001280  98AC               	bcf	4012,4,c	;volatile
   724  001282                     
   725                           ;serial.c: 9:     SPEN1 = 1;
   726  001282  8EAB               	bsf	4011,7,c	;volatile
   727  001284                     
   728                           ;serial.c: 10:     RC1IE = 1;
   729  001284  8A9D               	bsf	3997,5,c	;volatile
   730  001286                     
   731                           ;serial.c: 11:     CREN1 = 1;
   732  001286  88AB               	bsf	4011,4,c	;volatile
   733  001288                     
   734                           ;serial.c: 12:     RC1IF = 0;
   735  001288  9A9E               	bcf	3998,5,c	;volatile
   736  00128A                     
   737                           ;serial.c: 13:     TXEN1 = 1;
   738  00128A  8AAC               	bsf	4012,5,c	;volatile
   739                           
   740                           ;serial.c: 14:     RCREG1 = 0;
   741  00128C  0E00               	movlw	0
   742  00128E  6EAE               	movwf	174,c	;volatile
   743  001290  0012               	return		;funcret
   744  001292                     __end_of_setSerial:
   745                           	callstack 0
   746                           
   747 ;; *************** function _setSPIInterrupt *****************
   748 ;; Defined at:
   749 ;;		line 9 in file "spi.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		None
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   767 ;;Total ram usage:        0 bytes
   768 ;; Hardware stack levels used: 1
   769 ;; Hardware stack levels required when called: 6
   770 ;; This function calls:
   771 ;;		Nothing
   772 ;; This function is called by:
   773 ;;		_main
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           	psect	text5
   778  001308                     __ptext5:
   779                           	callstack 0
   780  001308                     _setSPIInterrupt:
   781                           	callstack 24
   782  001308                     
   783                           ;spi.c: 10:     SSP1IF = 0;
   784  001308  969E               	bcf	3998,3,c	;volatile
   785                           
   786                           ;spi.c: 11:     SSP1IE = 1;
   787  00130A  869D               	bsf	3997,3,c	;volatile
   788  00130C  0012               	return		;funcret
   789  00130E                     __end_of_setSPIInterrupt:
   790                           	callstack 0
   791                           
   792 ;; *************** function _setIo *****************
   793 ;; Defined at:
   794 ;;		line 9 in file "init.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;		None
   797 ;; Auto vars:     Size  Location     Type
   798 ;;		None
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      void 
   801 ;; Registers used:
   802 ;;		None
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;Total ram usage:        0 bytes
   813 ;; Hardware stack levels used: 1
   814 ;; Hardware stack levels required when called: 6
   815 ;; This function calls:
   816 ;;		Nothing
   817 ;; This function is called by:
   818 ;;		_main
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           	psect	text6
   823  00133C                     __ptext6:
   824                           	callstack 0
   825  00133C                     _setIo:
   826                           	callstack 24
   827  00133C  0012               	return		;funcret
   828  00133E                     __end_of_setIo:
   829                           	callstack 0
   830                           
   831 ;; *************** function _setInterrupts *****************
   832 ;; Defined at:
   833 ;;		line 13 in file "init.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;		None
   836 ;; Auto vars:     Size  Location     Type
   837 ;;		None
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		None
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   851 ;;Total ram usage:        0 bytes
   852 ;; Hardware stack levels used: 1
   853 ;; Hardware stack levels required when called: 6
   854 ;; This function calls:
   855 ;;		Nothing
   856 ;; This function is called by:
   857 ;;		_main
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           	psect	text7
   862  00130E                     __ptext7:
   863                           	callstack 0
   864  00130E                     _setInterrupts:
   865                           	callstack 24
   866  00130E                     
   867                           ;init.c: 14:     GIE = 1;
   868  00130E  8EF2               	bsf	4082,7,c	;volatile
   869                           
   870                           ;init.c: 15:     PEIE = 1;
   871  001310  8CF2               	bsf	4082,6,c	;volatile
   872  001312  0012               	return		;funcret
   873  001314                     __end_of_setInterrupts:
   874                           	callstack 0
   875                           
   876 ;; *************** function _setButtonIo *****************
   877 ;; Defined at:
   878 ;;		line 6 in file "button.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;		None
   881 ;; Auto vars:     Size  Location     Type
   882 ;;		None
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		None
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   896 ;;Total ram usage:        0 bytes
   897 ;; Hardware stack levels used: 1
   898 ;; Hardware stack levels required when called: 6
   899 ;; This function calls:
   900 ;;		Nothing
   901 ;; This function is called by:
   902 ;;		_main
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	text8
   907  001332                     __ptext8:
   908                           	callstack 0
   909  001332                     _setButtonIo:
   910                           	callstack 24
   911  001332                     
   912                           ;button.c: 7:     TRISB0 = 1;
   913  001332  8093               	bsf	3987,0,c	;volatile
   914  001334  0012               	return		;funcret
   915  001336                     __end_of_setButtonIo:
   916                           	callstack 0
   917                           
   918 ;; *************** function _setButtonInterrput *****************
   919 ;; Defined at:
   920 ;;		line 19 in file "init.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;		None
   923 ;; Auto vars:     Size  Location     Type
   924 ;;		None
   925 ;; Return value:  Size  Location     Type
   926 ;;                  1    wreg      void 
   927 ;; Registers used:
   928 ;;		None
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   938 ;;Total ram usage:        0 bytes
   939 ;; Hardware stack levels used: 1
   940 ;; Hardware stack levels required when called: 6
   941 ;; This function calls:
   942 ;;		Nothing
   943 ;; This function is called by:
   944 ;;		_main
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text9
   949  001314                     __ptext9:
   950                           	callstack 0
   951  001314                     _setButtonInterrput:
   952                           	callstack 24
   953  001314                     
   954                           ;init.c: 20:     INTEDG0 = 1;
   955  001314  8CF1               	bsf	4081,6,c	;volatile
   956                           
   957                           ;init.c: 21:     INT0IE = 1;
   958  001316  88F2               	bsf	4082,4,c	;volatile
   959  001318  0012               	return		;funcret
   960  00131A                     __end_of_setButtonInterrput:
   961                           	callstack 0
   962                           
   963 ;; *************** function _serialCallback *****************
   964 ;; Defined at:
   965 ;;		line 22 in file "serial.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;		None
   968 ;; Auto vars:     Size  Location     Type
   969 ;;		None
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      void 
   972 ;; Registers used:
   973 ;;		None
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;Total ram usage:        0 bytes
   984 ;; Hardware stack levels used: 1
   985 ;; Hardware stack levels required when called: 6
   986 ;; This function calls:
   987 ;;		Nothing
   988 ;; This function is called by:
   989 ;;		_main
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           	psect	text10
   994  00131A                     __ptext10:
   995                           	callstack 0
   996  00131A                     _serialCallback:
   997                           	callstack 24
   998  00131A                     
   999                           ;serial.c: 23:     FLAGS.bits.DISPLAY_READING = 1;
  1000  00131A  8A57               	bsf	_FLAGS^0,5,c
  1001                           
  1002                           ;serial.c: 24:     FLAGS.bits.DISPLAY_SERIAL_READING = 1;
  1003  00131C  8E57               	bsf	_FLAGS^0,7,c
  1004  00131E  0012               	return		;funcret
  1005  001320                     __end_of_serialCallback:
  1006                           	callstack 0
  1007                           
  1008 ;; *************** function _initialiseButton *****************
  1009 ;; Defined at:
  1010 ;;		line 10 in file "button.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;		None
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;		None
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      void 
  1017 ;; Registers used:
  1018 ;;		None
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1028 ;;Total ram usage:        0 bytes
  1029 ;; Hardware stack levels used: 1
  1030 ;; Hardware stack levels required when called: 6
  1031 ;; This function calls:
  1032 ;;		Nothing
  1033 ;; This function is called by:
  1034 ;;		_main
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           	psect	text11
  1039  001320                     __ptext11:
  1040                           	callstack 0
  1041  001320                     _initialiseButton:
  1042                           	callstack 24
  1043  001320                     
  1044                           ;button.c: 11:     FLAGS.bits.PUSHED_BUTTON = 0;
  1045  001320  9857               	bcf	_FLAGS^0,4,c
  1046                           
  1047                           ;button.c: 12:     FLAGS.bits.PUSH_REQUEST_SERVICED = 1;
  1048  001322  8657               	bsf	_FLAGS^0,3,c
  1049  001324  0012               	return		;funcret
  1050  001326                     __end_of_initialiseButton:
  1051                           	callstack 0
  1052                           
  1053 ;; *************** function _displayRequestHandle *****************
  1054 ;; Defined at:
  1055 ;;		line 21 in file "display.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;Total ram usage:        0 bytes
  1074 ;; Hardware stack levels used: 1
  1075 ;; Hardware stack levels required when called: 8
  1076 ;; This function calls:
  1077 ;;		_displaySPI
  1078 ;;		_displaySerial
  1079 ;; This function is called by:
  1080 ;;		_main
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           	psect	text12
  1085  0011E6                     __ptext12:
  1086                           	callstack 0
  1087  0011E6                     _displayRequestHandle:
  1088                           	callstack 22
  1089  0011E6                     
  1090                           ;display.c: 22:     if (FLAGS.bits.DISPLAY_SERIAL_READING) {
  1091  0011E6  AE57               	btfss	_FLAGS^0,7,c
  1092  0011E8  EFF8  F008         	goto	u121
  1093  0011EC  EFFA  F008         	goto	u120
  1094  0011F0                     u121:
  1095  0011F0  EFFF  F008         	goto	l286
  1096  0011F4                     u120:
  1097  0011F4                     
  1098                           ;display.c: 23:         displaySerial();
  1099  0011F4  EC5C  F009         	call	_displaySerial	;wreg free
  1100  0011F8                     
  1101                           ;display.c: 24:         FLAGS.bits.DISPLAY_SERIAL_READING = 0;
  1102  0011F8  9E57               	bcf	_FLAGS^0,7,c
  1103                           
  1104                           ;display.c: 25:     } else {
  1105  0011FA  EF09  F009         	goto	l289
  1106  0011FE                     l286:
  1107                           
  1108                           ;display.c: 26:         if (FLAGS.bits.DISPLAY_SPI_READING) {
  1109  0011FE  AC57               	btfss	_FLAGS^0,6,c
  1110  001200  EF04  F009         	goto	u131
  1111  001204  EF06  F009         	goto	u130
  1112  001208                     u131:
  1113  001208  EF09  F009         	goto	l289
  1114  00120C                     u130:
  1115  00120C                     
  1116                           ;display.c: 27:             displaySPI();
  1117  00120C  EC61  F009         	call	_displaySPI	;wreg free
  1118  001210                     
  1119                           ;display.c: 28:             FLAGS.bits.DISPLAY_SPI_READING = 0;
  1120  001210  9C57               	bcf	_FLAGS^0,6,c
  1121  001212                     l289:
  1122  001212  0012               	return		;funcret
  1123  001214                     __end_of_displayRequestHandle:
  1124                           	callstack 0
  1125                           
  1126 ;; *************** function _displaySerial *****************
  1127 ;; Defined at:
  1128 ;;		line 11 in file "display.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;		None
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;		None
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      void 
  1135 ;; Registers used:
  1136 ;;		cstack
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1146 ;;Total ram usage:        0 bytes
  1147 ;; Hardware stack levels used: 1
  1148 ;; Hardware stack levels required when called: 7
  1149 ;; This function calls:
  1150 ;;		_displayCallback
  1151 ;; This function is called by:
  1152 ;;		_displayRequestHandle
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text13
  1157  0012B8                     __ptext13:
  1158                           	callstack 0
  1159  0012B8                     _displaySerial:
  1160                           	callstack 22
  1161  0012B8                     
  1162                           ;display.c: 12:     ledValue = readSerialValue;
  1163  0012B8  C056  F055         	movff	_readSerialValue,_ledValue
  1164  0012BC                     
  1165                           ;display.c: 13:     displayCallback();
  1166  0012BC  EC93  F009         	call	_displayCallback	;wreg free
  1167  0012C0  0012               	return		;funcret
  1168  0012C2                     __end_of_displaySerial:
  1169                           	callstack 0
  1170                           
  1171 ;; *************** function _displaySPI *****************
  1172 ;; Defined at:
  1173 ;;		line 16 in file "display.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;		None
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;		None
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;Total ram usage:        0 bytes
  1192 ;; Hardware stack levels used: 1
  1193 ;; Hardware stack levels required when called: 7
  1194 ;; This function calls:
  1195 ;;		_displayCallback
  1196 ;; This function is called by:
  1197 ;;		_displayRequestHandle
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text14
  1202  0012C2                     __ptext14:
  1203                           	callstack 0
  1204  0012C2                     _displaySPI:
  1205                           	callstack 22
  1206  0012C2                     
  1207                           ;display.c: 17:     ledValue = readSPIValue;
  1208  0012C2  C058  F055         	movff	_readSPIValue,_ledValue
  1209  0012C6                     
  1210                           ;display.c: 18:     displayCallback();
  1211  0012C6  EC93  F009         	call	_displayCallback	;wreg free
  1212  0012CA  0012               	return		;funcret
  1213  0012CC                     __end_of_displaySPI:
  1214                           	callstack 0
  1215                           
  1216 ;; *************** function _displayCallback *****************
  1217 ;; Defined at:
  1218 ;;		line 33 in file "display.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;		None
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		None
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1236 ;;Total ram usage:        0 bytes
  1237 ;; Hardware stack levels used: 1
  1238 ;; Hardware stack levels required when called: 6
  1239 ;; This function calls:
  1240 ;;		Nothing
  1241 ;; This function is called by:
  1242 ;;		_displaySerial
  1243 ;;		_displaySPI
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text15
  1248  001326                     __ptext15:
  1249                           	callstack 0
  1250  001326                     _displayCallback:
  1251                           	callstack 22
  1252  001326                     
  1253                           ;display.c: 34:     PORTD = ledValue;
  1254  001326  C055  FF83         	movff	_ledValue,3971	;volatile
  1255  00132A  0012               	return		;funcret
  1256  00132C                     __end_of_displayCallback:
  1257                           	callstack 0
  1258                           
  1259 ;; *************** function _buttonDebounce *****************
  1260 ;; Defined at:
  1261 ;;		line 29 in file "button.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;		None
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;		None
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      void 
  1268 ;; Registers used:
  1269 ;;		wreg, status,2, status,0
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;Total ram usage:        0 bytes
  1280 ;; Hardware stack levels used: 1
  1281 ;; Hardware stack levels required when called: 6
  1282 ;; This function calls:
  1283 ;;		Nothing
  1284 ;; This function is called by:
  1285 ;;		_main
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           	psect	text16
  1290  001238                     __ptext16:
  1291                           	callstack 0
  1292  001238                     _buttonDebounce:
  1293                           	callstack 24
  1294  001238                     
  1295                           ;button.c: 30:     static int counter = 255;;button.c: 31:     counter--;
  1296  001238  0659               	decf	buttonDebounce@counter^0,f,c
  1297  00123A  A0D8               	btfss	status,0,c
  1298  00123C  065A               	decf	(buttonDebounce@counter+1)^0,f,c
  1299  00123E                     
  1300                           ;button.c: 32:     if (counter == 0) {
  1301  00123E  5059               	movf	buttonDebounce@counter^0,w,c
  1302  001240  105A               	iorwf	(buttonDebounce@counter+1)^0,w,c
  1303  001242  A4D8               	btfss	status,2,c
  1304  001244  EF26  F009         	goto	u161
  1305  001248  EF28  F009         	goto	u160
  1306  00124C                     u161:
  1307  00124C  EF2C  F009         	goto	l260
  1308  001250                     u160:
  1309  001250                     
  1310                           ;button.c: 33:         FLAGS.bits.PUSH_REQUEST_SERVICED = 1;
  1311  001250  8657               	bsf	_FLAGS^0,3,c
  1312  001252                     
  1313                           ;button.c: 34:         counter = 255;
  1314  001252  0E00               	movlw	0
  1315  001254  6E5A               	movwf	(buttonDebounce@counter+1)^0,c
  1316  001256  6859               	setf	buttonDebounce@counter^0,c
  1317  001258                     l260:
  1318  001258  0012               	return		;funcret
  1319  00125A                     __end_of_buttonDebounce:
  1320                           	callstack 0
  1321                           
  1322 ;; *************** function _buttonCallback *****************
  1323 ;; Defined at:
  1324 ;;		line 15 in file "button.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;		None
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  1    wreg      void 
  1331 ;; Registers used:
  1332 ;;		wreg, cstack
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1342 ;;Total ram usage:        0 bytes
  1343 ;; Hardware stack levels used: 1
  1344 ;; Hardware stack levels required when called: 8
  1345 ;; This function calls:
  1346 ;;		_testSpiSend
  1347 ;; This function is called by:
  1348 ;;		_main
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text17
  1353  001214                     __ptext17:
  1354                           	callstack 0
  1355  001214                     _buttonCallback:
  1356                           	callstack 22
  1357  001214                     
  1358                           ;button.c: 16:     if (FLAGS.bits.PUSH_REQUEST_SERVICED == 0 && FLAGS.bits.PUSHED_BUTTON
      +                           == 1) {
  1359  001214  B657               	btfsc	_FLAGS^0,3,c
  1360  001216  EF0F  F009         	goto	u141
  1361  00121A  EF11  F009         	goto	u140
  1362  00121E                     u141:
  1363  00121E  EF1A  F009         	goto	l1106
  1364  001222                     u140:
  1365  001222  A857               	btfss	_FLAGS^0,4,c
  1366  001224  EF16  F009         	goto	u151
  1367  001228  EF18  F009         	goto	u150
  1368  00122C                     u151:
  1369  00122C  EF1A  F009         	goto	l1106
  1370  001230                     u150:
  1371  001230                     
  1372                           ;button.c: 18:         testSpiSend();
  1373  001230  EC75  F009         	call	_testSpiSend	;wreg free
  1374  001234                     l1106:
  1375                           
  1376                           ;button.c: 20:     FLAGS.bits.PUSHED_BUTTON = 0;
  1377  001234  9857               	bcf	_FLAGS^0,4,c
  1378  001236  0012               	return		;funcret
  1379  001238                     __end_of_buttonCallback:
  1380                           	callstack 0
  1381                           
  1382 ;; *************** function _testSpiSend *****************
  1383 ;; Defined at:
  1384 ;;		line 70 in file "spi.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;		None
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;		None
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      void 
  1391 ;; Registers used:
  1392 ;;		wreg, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;Total ram usage:        0 bytes
  1403 ;; Hardware stack levels used: 1
  1404 ;; Hardware stack levels required when called: 7
  1405 ;; This function calls:
  1406 ;;		_spiWrite
  1407 ;; This function is called by:
  1408 ;;		_buttonCallback
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text18
  1413  0012EA                     __ptext18:
  1414                           	callstack 0
  1415  0012EA                     _testSpiSend:
  1416                           	callstack 22
  1417  0012EA                     
  1418                           ;spi.c: 71:     spiWrite(0x88);
  1419  0012EA  0E88               	movlw	136
  1420  0012EC  EC79  F009         	call	_spiWrite
  1421  0012F0  0012               	return		;funcret
  1422  0012F2                     __end_of_testSpiSend:
  1423                           	callstack 0
  1424                           
  1425 ;; *************** function _SPICallback *****************
  1426 ;; Defined at:
  1427 ;;		line 66 in file "spi.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;		None
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;		None
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      void 
  1434 ;; Registers used:
  1435 ;;		wreg, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;Total ram usage:        0 bytes
  1446 ;; Hardware stack levels used: 1
  1447 ;; Hardware stack levels required when called: 7
  1448 ;; This function calls:
  1449 ;;		_spiWrite
  1450 ;; This function is called by:
  1451 ;;		_main
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           	psect	text19
  1456  0012CC                     __ptext19:
  1457                           	callstack 0
  1458  0012CC                     _SPICallback:
  1459                           	callstack 23
  1460  0012CC                     
  1461                           ;spi.c: 67:     spiWrite(0x87);
  1462  0012CC  0E87               	movlw	135
  1463  0012CE  EC79  F009         	call	_spiWrite
  1464  0012D2                     
  1465                           ;spi.c: 68:     FLAGS.bits.DISPLAY_READING = 1;
  1466  0012D2  8A57               	bsf	_FLAGS^0,5,c
  1467  0012D4  0012               	return		;funcret
  1468  0012D6                     __end_of_SPICallback:
  1469                           	callstack 0
  1470                           
  1471 ;; *************** function _spiWrite *****************
  1472 ;; Defined at:
  1473 ;;		line 41 in file "spi.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;  dat             1    wreg     unsigned char 
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;  dat             1    0[COMRAM] unsigned char 
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  1    wreg      void 
  1480 ;; Registers used:
  1481 ;;		wreg
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;Total ram usage:        1 bytes
  1492 ;; Hardware stack levels used: 1
  1493 ;; Hardware stack levels required when called: 6
  1494 ;; This function calls:
  1495 ;;		Nothing
  1496 ;; This function is called by:
  1497 ;;		_SPICallback
  1498 ;;		_testSpiSend
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text20
  1503  0012F2                     __ptext20:
  1504                           	callstack 0
  1505  0012F2                     _spiWrite:
  1506                           	callstack 22
  1507                           
  1508                           ;incstack = 0
  1509                           ;spiWrite@dat stored from wreg
  1510  0012F2  6E01               	movwf	spiWrite@dat^0,c
  1511  0012F4                     
  1512                           ;spi.c: 41: void spiWrite(char dat);spi.c: 42: {;spi.c: 43:     SSP1BUF = dat;
  1513  0012F4  C001  FFC9         	movff	spiWrite@dat,4041	;volatile
  1514  0012F8  0012               	return		;funcret
  1515  0012FA                     __end_of_spiWrite:
  1516                           	callstack 0
  1517                           
  1518 ;; *************** function _service *****************
  1519 ;; Defined at:
  1520 ;;		line 18 in file "newmain.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;		None
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;		None
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  1    wreg      void 
  1527 ;; Registers used:
  1528 ;;		wreg, status,2, cstack
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1538 ;;Total ram usage:        0 bytes
  1539 ;; Hardware stack levels used: 1
  1540 ;; Hardware stack levels required when called: 5
  1541 ;; This function calls:
  1542 ;;		_interruptService
  1543 ;; This function is called by:
  1544 ;;		Interrupt level 2
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	intcode
  1549  000008                     __pintcode:
  1550                           	callstack 0
  1551  000008                     _service:
  1552                           	callstack 22
  1553                           
  1554                           ;incstack = 0
  1555  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1556  00000A  ED6B  F009         	call	int_func,f	;refresh shadow registers
  1557                           
  1558                           	psect	intcode_body
  1559  0012D6                     __pintcode_body:
  1560                           	callstack 22
  1561  0012D6                     int_func:
  1562                           	callstack 22
  1563  0012D6  0006               	pop		; remove dummy address from shadow register refresh
  1564  0012D8                     
  1565                           ;newmain.c: 19:     interruptService();
  1566  0012D8  EC96  F009         	call	_interruptService	;wreg free
  1567  0012DC  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1568  0012DE  0011               	retfie		f
  1569  0012E0                     __end_of_service:
  1570                           	callstack 0
  1571                           
  1572 ;; *************** function _interruptService *****************
  1573 ;; Defined at:
  1574 ;;		line 28 in file "interruptService.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, status,2, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;Total ram usage:        0 bytes
  1593 ;; Hardware stack levels used: 1
  1594 ;; Hardware stack levels required when called: 4
  1595 ;; This function calls:
  1596 ;;		_processInterruptService
  1597 ;; This function is called by:
  1598 ;;		_service
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text22
  1603  00132C                     __ptext22:
  1604                           	callstack 0
  1605  00132C                     _interruptService:
  1606                           	callstack 22
  1607  00132C                     
  1608                           ;interruptService.c: 29:     processInterruptService();
  1609  00132C  EC83  F008         	call	_processInterruptService	;wreg free
  1610  001330  0012               	return		;funcret
  1611  001332                     __end_of_interruptService:
  1612                           	callstack 0
  1613                           
  1614 ;; *************** function _processInterruptService *****************
  1615 ;; Defined at:
  1616 ;;		line 13 in file "interruptService.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;		None
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;		None
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg, status,2, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;Total ram usage:        0 bytes
  1635 ;; Hardware stack levels used: 1
  1636 ;; Hardware stack levels required when called: 3
  1637 ;; This function calls:
  1638 ;;		_SPIHandle
  1639 ;;		_buttonHandle
  1640 ;;		_serialHandle
  1641 ;; This function is called by:
  1642 ;;		_interruptService
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text23
  1647  001106                     __ptext23:
  1648                           	callstack 0
  1649  001106                     _processInterruptService:
  1650                           	callstack 22
  1651  001106                     
  1652                           ;interruptService.c: 14:     if (SSP1IE == 1 && SSP1IF == 1) {
  1653  001106  A69D               	btfss	3997,3,c	;volatile
  1654  001108  EF88  F008         	goto	i2u4_41
  1655  00110C  EF8A  F008         	goto	i2u4_40
  1656  001110                     i2u4_41:
  1657  001110  EF94  F008         	goto	i2l1010
  1658  001114                     i2u4_40:
  1659  001114  A69E               	btfss	3998,3,c	;volatile
  1660  001116  EF8F  F008         	goto	i2u5_41
  1661  00111A  EF91  F008         	goto	i2u5_40
  1662  00111E                     i2u5_41:
  1663  00111E  EF94  F008         	goto	i2l1010
  1664  001122                     i2u5_40:
  1665  001122                     
  1666                           ;interruptService.c: 15:         SPIHandle();
  1667  001122  EC51  F009         	call	_SPIHandle	;wreg free
  1668  001126                     
  1669                           ;interruptService.c: 16:         SSP1IF = 0;
  1670  001126  969E               	bcf	3998,3,c	;volatile
  1671  001128                     i2l1010:
  1672                           
  1673                           ;interruptService.c: 18:     if (RC1IE == 1 && RC1IF == 1 && FLAGS.bits.UART_RECEIVED ==
      +                           0) {
  1674  001128  AA9D               	btfss	3997,5,c	;volatile
  1675  00112A  EF99  F008         	goto	i2u6_41
  1676  00112E  EF9B  F008         	goto	i2u6_40
  1677  001132                     i2u6_41:
  1678  001132  EFAC  F008         	goto	i2l1020
  1679  001136                     i2u6_40:
  1680  001136  AA9E               	btfss	3998,5,c	;volatile
  1681  001138  EFA0  F008         	goto	i2u7_41
  1682  00113C  EFA2  F008         	goto	i2u7_40
  1683  001140                     i2u7_41:
  1684  001140  EFAC  F008         	goto	i2l1020
  1685  001144                     i2u7_40:
  1686  001144  B457               	btfsc	_FLAGS^0,2,c
  1687  001146  EFA7  F008         	goto	i2u8_41
  1688  00114A  EFA9  F008         	goto	i2u8_40
  1689  00114E                     i2u8_41:
  1690  00114E  EFAC  F008         	goto	i2l1020
  1691  001152                     i2u8_40:
  1692  001152                     
  1693                           ;interruptService.c: 19:         serialHandle();
  1694  001152  EC70  F009         	call	_serialHandle	;wreg free
  1695  001156                     
  1696                           ;interruptService.c: 20:         RC1IF = 0;
  1697  001156  9A9E               	bcf	3998,5,c	;volatile
  1698  001158                     i2l1020:
  1699                           
  1700                           ;interruptService.c: 22:     if (INTEDG0 == 1 && INT0IF == 1) {
  1701  001158  ACF1               	btfss	4081,6,c	;volatile
  1702  00115A  EFB1  F008         	goto	i2u9_41
  1703  00115E  EFB3  F008         	goto	i2u9_40
  1704  001162                     i2u9_41:
  1705  001162  EFBD  F008         	goto	i2l171
  1706  001166                     i2u9_40:
  1707  001166  A2F2               	btfss	4082,1,c	;volatile
  1708  001168  EFB8  F008         	goto	i2u10_41
  1709  00116C  EFBA  F008         	goto	i2u10_40
  1710  001170                     i2u10_41:
  1711  001170  EFBD  F008         	goto	i2l171
  1712  001174                     i2u10_40:
  1713  001174                     
  1714                           ;interruptService.c: 23:         buttonHandle();
  1715  001174  EC2D  F009         	call	_buttonHandle	;wreg free
  1716  001178                     
  1717                           ;interruptService.c: 24:         INT0IF = 0;
  1718  001178  92F2               	bcf	4082,1,c	;volatile
  1719  00117A                     i2l171:
  1720  00117A  0012               	return		;funcret
  1721  00117C                     __end_of_processInterruptService:
  1722                           	callstack 0
  1723                           
  1724 ;; *************** function _serialHandle *****************
  1725 ;; Defined at:
  1726 ;;		line 28 in file "serial.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;		None
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;		None
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      void 
  1733 ;; Registers used:
  1734 ;;		wreg, status,2, cstack
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1744 ;;Total ram usage:        0 bytes
  1745 ;; Hardware stack levels used: 1
  1746 ;; Hardware stack levels required when called: 1
  1747 ;; This function calls:
  1748 ;;		_readSerial
  1749 ;; This function is called by:
  1750 ;;		_processInterruptService
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           	psect	text24
  1755  0012E0                     __ptext24:
  1756                           	callstack 0
  1757  0012E0                     _serialHandle:
  1758                           	callstack 23
  1759  0012E0                     
  1760                           ;serial.c: 29:     FLAGS.bits.UART_RECEIVED = 1;
  1761  0012E0  8457               	bsf	_FLAGS^0,2,c
  1762  0012E2                     
  1763                           ;serial.c: 30:     readSerialValue = readSerial();
  1764  0012E2  EC9B  F009         	call	_readSerial	;wreg free
  1765  0012E6  6E56               	movwf	_readSerialValue^0,c
  1766  0012E8  0012               	return		;funcret
  1767  0012EA                     __end_of_serialHandle:
  1768                           	callstack 0
  1769                           
  1770 ;; *************** function _readSerial *****************
  1771 ;; Defined at:
  1772 ;;		line 41 in file "serial.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      unsigned char 
  1779 ;; Registers used:
  1780 ;;		wreg, status,2
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;Total ram usage:        0 bytes
  1791 ;; Hardware stack levels used: 1
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		_serialHandle
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text25
  1800  001336                     __ptext25:
  1801                           	callstack 0
  1802  001336                     _readSerial:
  1803                           	callstack 23
  1804  001336                     
  1805                           ;serial.c: 42:     return RCREG1;
  1806  001336  50AE               	movf	174,w,c	;volatile
  1807  001338  0012               	return		;funcret
  1808  00133A                     __end_of_readSerial:
  1809                           	callstack 0
  1810                           
  1811 ;; *************** function _buttonHandle *****************
  1812 ;; Defined at:
  1813 ;;		line 23 in file "button.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		None
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;Total ram usage:        0 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_processInterruptService
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           	psect	text26
  1841  00125A                     __ptext26:
  1842                           	callstack 0
  1843  00125A                     _buttonHandle:
  1844                           	callstack 24
  1845  00125A                     
  1846                           ;button.c: 24:     if (FLAGS.bits.PUSH_REQUEST_SERVICED == 1 && FLAGS.bits.PUSHED_BUTTON
      +                           == 0) {
  1847  00125A  A657               	btfss	_FLAGS^0,3,c
  1848  00125C  EF32  F009         	goto	i2u2_41
  1849  001260  EF34  F009         	goto	i2u2_40
  1850  001264                     i2u2_41:
  1851  001264  EF3C  F009         	goto	i2l254
  1852  001268                     i2u2_40:
  1853  001268  B857               	btfsc	_FLAGS^0,4,c
  1854  00126A  EF39  F009         	goto	i2u3_41
  1855  00126E  EF3B  F009         	goto	i2u3_40
  1856  001272                     i2u3_41:
  1857  001272  EF3C  F009         	goto	i2l254
  1858  001276                     i2u3_40:
  1859  001276                     
  1860                           ;button.c: 25:         FLAGS.bits.PUSHED_BUTTON = 1;
  1861  001276  8857               	bsf	_FLAGS^0,4,c
  1862  001278                     i2l254:
  1863  001278  0012               	return		;funcret
  1864  00127A                     __end_of_buttonHandle:
  1865                           	callstack 0
  1866                           
  1867 ;; *************** function _SPIHandle *****************
  1868 ;; Defined at:
  1869 ;;		line 60 in file "spi.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;		None
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;		None
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      void 
  1876 ;; Registers used:
  1877 ;;		wreg, status,2, cstack
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1887 ;;Total ram usage:        0 bytes
  1888 ;; Hardware stack levels used: 1
  1889 ;; Hardware stack levels required when called: 2
  1890 ;; This function calls:
  1891 ;;		_spiRead
  1892 ;; This function is called by:
  1893 ;;		_processInterruptService
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           	psect	text27
  1898  0012A2                     __ptext27:
  1899                           	callstack 0
  1900  0012A2                     _SPIHandle:
  1901                           	callstack 22
  1902  0012A2                     
  1903                           ;spi.c: 61:     readSPIValue = spiRead();
  1904  0012A2  EC7D  F009         	call	_spiRead	;wreg free
  1905  0012A6  6E58               	movwf	_readSPIValue^0,c
  1906  0012A8                     
  1907                           ;spi.c: 62:     FLAGS.bits.SPI_READ_REQUEST = 1;
  1908  0012A8  8257               	bsf	_FLAGS^0,1,c
  1909  0012AA                     
  1910                           ;spi.c: 63:     FLAGS.bits.DISPLAY_SPI_READING = 1;
  1911  0012AA  8C57               	bsf	_FLAGS^0,6,c
  1912  0012AC  0012               	return		;funcret
  1913  0012AE                     __end_of_SPIHandle:
  1914                           	callstack 0
  1915                           
  1916 ;; *************** function _spiRead *****************
  1917 ;; Defined at:
  1918 ;;		line 54 in file "spi.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;		None
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;		None
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  1    wreg      unsigned char 
  1925 ;; Registers used:
  1926 ;;		wreg, status,2, cstack
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1936 ;;Total ram usage:        0 bytes
  1937 ;; Hardware stack levels used: 1
  1938 ;; Hardware stack levels required when called: 1
  1939 ;; This function calls:
  1940 ;;		_spiReceiveWait
  1941 ;; This function is called by:
  1942 ;;		_SPIHandle
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text28
  1947  0012FA                     __ptext28:
  1948                           	callstack 0
  1949  0012FA                     _spiRead:
  1950                           	callstack 22
  1951  0012FA                     
  1952                           ;spi.c: 56:     spiReceiveWait();
  1953  0012FA  EC49  F009         	call	_spiReceiveWait	;wreg free
  1954  0012FE                     
  1955                           ;spi.c: 57:     return (SSP1BUF);
  1956  0012FE  50C9               	movf	201,w,c	;volatile
  1957  001300  0012               	return		;funcret
  1958  001302                     __end_of_spiRead:
  1959                           	callstack 0
  1960                           
  1961 ;; *************** function _spiReceiveWait *****************
  1962 ;; Defined at:
  1963 ;;		line 37 in file "spi.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;		None
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;		None
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  1    wreg      void 
  1970 ;; Registers used:
  1971 ;;		None
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;Total ram usage:        0 bytes
  1982 ;; Hardware stack levels used: 1
  1983 ;; This function calls:
  1984 ;;		Nothing
  1985 ;; This function is called by:
  1986 ;;		_spiRead
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text29
  1991  001292                     __ptext29:
  1992                           	callstack 0
  1993  001292                     _spiReceiveWait:
  1994                           	callstack 22
  1995  001292                     i2l101:
  1996  001292  A0C7               	btfss	199,0,c	;volatile
  1997  001294  EF4E  F009         	goto	i2u1_41
  1998  001298  EF50  F009         	goto	i2u1_40
  1999  00129C                     i2u1_41:
  2000  00129C  EF49  F009         	goto	i2l101
  2001  0012A0                     i2u1_40:
  2002  0012A0  0012               	return		;funcret
  2003  0012A2                     __end_of_spiReceiveWait:
  2004                           	callstack 0
  2005                           
  2006                           	psect	rparam
  2007  0000                     
  2008                           	psect	temp
  2009  00005B                     btemp:
  2010                           	callstack 0
  2011  00005B                     	ds	1
  2012  0000                     int$flags	set	btemp
  2013  0000                     wtemp8	set	btemp+1
  2014  0000                     ttemp5	set	btemp+1
  2015  0000                     ttemp6	set	btemp+4
  2016  0000                     ttemp7	set	btemp+8
  2017                           
  2018                           	psect	idloc
  2019                           
  2020                           ;Config register IDLOC0 @ 0x200000
  2021                           ;	unspecified, using default values
  2022  200000                     	org	2097152
  2023  200000  FF                 	db	255
  2024                           
  2025                           ;Config register IDLOC1 @ 0x200001
  2026                           ;	unspecified, using default values
  2027  200001                     	org	2097153
  2028  200001  FF                 	db	255
  2029                           
  2030                           ;Config register IDLOC2 @ 0x200002
  2031                           ;	unspecified, using default values
  2032  200002                     	org	2097154
  2033  200002  FF                 	db	255
  2034                           
  2035                           ;Config register IDLOC3 @ 0x200003
  2036                           ;	unspecified, using default values
  2037  200003                     	org	2097155
  2038  200003  FF                 	db	255
  2039                           
  2040                           ;Config register IDLOC4 @ 0x200004
  2041                           ;	unspecified, using default values
  2042  200004                     	org	2097156
  2043  200004  FF                 	db	255
  2044                           
  2045                           ;Config register IDLOC5 @ 0x200005
  2046                           ;	unspecified, using default values
  2047  200005                     	org	2097157
  2048  200005  FF                 	db	255
  2049                           
  2050                           ;Config register IDLOC6 @ 0x200006
  2051                           ;	unspecified, using default values
  2052  200006                     	org	2097158
  2053  200006  FF                 	db	255
  2054                           
  2055                           ;Config register IDLOC7 @ 0x200007
  2056                           ;	unspecified, using default values
  2057  200007                     	org	2097159
  2058  200007  FF                 	db	255
  2059                           
  2060                           	psect	config
  2061                           
  2062                           ; Padding undefined space
  2063  300000                     	org	3145728
  2064  300000  FF                 	db	255
  2065                           
  2066                           ;Config register CONFIG1H @ 0x300001
  2067                           ;	Oscillator Selection bits
  2068                           ;	OSC = XT, XT oscillator
  2069                           ;	Fail-Safe Clock Monitor Enable bit
  2070                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2071                           ;	Internal/External Oscillator Switchover bit
  2072                           ;	IESO = OFF, Two-Speed Start-up disabled
  2073  300001                     	org	3145729
  2074  300001  01                 	db	1
  2075                           
  2076                           ;Config register CONFIG2L @ 0x300002
  2077                           ;	Power-up Timer Enable bit
  2078                           ;	PWRT = OFF, PWRT disabled
  2079                           ;	Brown-out Reset Enable bits
  2080                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2081                           ;	Brown-out Voltage bits
  2082                           ;	BORV = 3, Minimum setting
  2083  300002                     	org	3145730
  2084  300002  19                 	db	25
  2085                           
  2086                           ;Config register CONFIG2H @ 0x300003
  2087                           ;	Watchdog Timer
  2088                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2089                           ;	Watchdog Timer Postscale Select bits
  2090                           ;	WDTPS = 32768, 1:32768
  2091  300003                     	org	3145731
  2092  300003  1E                 	db	30
  2093                           
  2094                           ;Config register CONFIG3L @ 0x300004
  2095                           ;	Processor Data Memory Mode Select bits
  2096                           ;	MODE = MC, Microcontroller mode
  2097                           ;	Address Bus Width Select bits
  2098                           ;	ADDRBW = ADDR20BIT, 20-bit Address Bus
  2099                           ;	Data Bus Width Select bit
  2100                           ;	DATABW = DATA16BIT, 16-bit External Bus mode
  2101                           ;	External Bus Data Wait Enable bit
  2102                           ;	WAIT = OFF, Wait selections are unavailable for table reads and table writes
  2103  300004                     	org	3145732
  2104  300004  F3                 	db	243
  2105                           
  2106                           ;Config register CONFIG3H @ 0x300005
  2107                           ;	CCP2 MUX bit
  2108                           ;	CCP2MX = PORTC, ECCP2 input/output is multiplexed with RC1
  2109                           ;	ECCP MUX bit
  2110                           ;	ECCPMX = PORTE, ECCP1/3 (P1B/P1C/P3B/P3C) are multiplexed onto RE6, RE5, RE4 and RE3 r
      +                          espectively
  2111                           ;	Low-Power Timer1 Oscillator Enable bit
  2112                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2113                           ;	MCLR Pin Enable bit
  2114                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
  2115  300005                     	org	3145733
  2116  300005  83                 	db	131
  2117                           
  2118                           ;Config register CONFIG4L @ 0x300006
  2119                           ;	Stack Full/Underflow Reset Enable bit
  2120                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2121                           ;	Single-Supply ICSP Enable bit
  2122                           ;	LVP = OFF, Single-Supply ICSP disabled
  2123                           ;	Boot Block Size Select bits
  2124                           ;	BBSIZ = BB2K, 1K word (2 Kbytes) Boot Block size
  2125                           ;	Extended Instruction Set Enable bit
  2126                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2127                           ;	Background Debugger Enable bit
  2128                           ;	DEBUG = 0x1, unprogrammed default
  2129  300006                     	org	3145734
  2130  300006  81                 	db	129
  2131                           
  2132                           ; Padding undefined space
  2133  300007                     	org	3145735
  2134  300007  FF                 	db	255
  2135                           
  2136                           ;Config register CONFIG5L @ 0x300008
  2137                           ;	Code Protection bit Block 0
  2138                           ;	CP0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not code-protected
  2139                           ;	Code Protection bit Block 1
  2140                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2141                           ;	Code Protection bit Block 2
  2142                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2143                           ;	Code Protection bit Block 3
  2144                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2145                           ;	Code Protection bit Block 4
  2146                           ;	CP4 = OFF, Block 4 (010000-013FFFh) not code-protected
  2147                           ;	Code Protection bit Block 5
  2148                           ;	CP5 = OFF, Block 5 (014000-017FFFh) not code-protected
  2149                           ;	Code Protection bit Block 6
  2150                           ;	CP6 = OFF, Block 6 (01BFFF-018000h) not code-protected
  2151                           ;	Code Protection bit Block 7
  2152                           ;	CP7 = OFF, Block 7 (01C000-01FFFFh) not code-protected
  2153  300008                     	org	3145736
  2154  300008  FF                 	db	255
  2155                           
  2156                           ;Config register CONFIG5H @ 0x300009
  2157                           ;	Boot Block Code Protection bit
  2158                           ;	CPB = OFF, Boot Block (000000-0007FFh) not code-protected
  2159                           ;	Data EEPROM Code Protection bit
  2160                           ;	CPD = OFF, Data EEPROM not code-protected
  2161  300009                     	org	3145737
  2162  300009  C0                 	db	192
  2163                           
  2164                           ;Config register CONFIG6L @ 0x30000A
  2165                           ;	Write Protection bit Block 0
  2166                           ;	WRT0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not write-protected
  2167                           ;	Write Protection bit Block 1
  2168                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2169                           ;	Write Protection bit Block 2
  2170                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2171                           ;	Write Protection bit Block 3
  2172                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2173                           ;	Write Protection bit Block 4
  2174                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  2175                           ;	Write Protection bit Block 5
  2176                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  2177                           ;	Write Protection bit Block 6
  2178                           ;	WRT6 = OFF, Block 6 (01BFFF-018000h) not write-protected
  2179                           ;	Write Protection bit Block 7
  2180                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  2181  30000A                     	org	3145738
  2182  30000A  FF                 	db	255
  2183                           
  2184                           ;Config register CONFIG6H @ 0x30000B
  2185                           ;	Configuration Register Write Protection bit
  2186                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2187                           ;	Boot Block Write Protection bit
  2188                           ;	WRTB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not write-protected
  2189                           ;	Data EEPROM Write Protection bit
  2190                           ;	WRTD = OFF, Data EEPROM not write-protected
  2191  30000B                     	org	3145739
  2192  30000B  E0                 	db	224
  2193                           
  2194                           ;Config register CONFIG7L @ 0x30000C
  2195                           ;	Table Read Protection bit Block 0
  2196                           ;	EBTR0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not protected from table reads
      +                           executed in other blocks
  2197                           ;	Table Read Protection bit Block 1
  2198                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2199                           ;	Table Read Protection bit Block 2
  2200                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2201                           ;	Table Read Protection bit Block 3
  2202                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2203                           ;	Table Read Protection bit Block 4
  2204                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  2205                           ;	Table Read Protection bit Block 5
  2206                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  2207                           ;	Table Read Protection bit Block 6
  2208                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  2209                           ;	Table Read Protection bit Block 7
  2210                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  2211  30000C                     	org	3145740
  2212  30000C  FF                 	db	255
  2213                           
  2214                           ;Config register CONFIG7H @ 0x30000D
  2215                           ;	Boot Block Table Read Protection bit
  2216                           ;	EBTRB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not protected from table re
      +                          ads executed in other blocks
  2217  30000D                     	org	3145741
  2218  30000D  40                 	db	64
  2219                           tosu	equ	0xFFF
  2220                           tosh	equ	0xFFE
  2221                           tosl	equ	0xFFD
  2222                           stkptr	equ	0xFFC
  2223                           pclatu	equ	0xFFB
  2224                           pclath	equ	0xFFA
  2225                           pcl	equ	0xFF9
  2226                           tblptru	equ	0xFF8
  2227                           tblptrh	equ	0xFF7
  2228                           tblptrl	equ	0xFF6
  2229                           tablat	equ	0xFF5
  2230                           prodh	equ	0xFF4
  2231                           prodl	equ	0xFF3
  2232                           indf0	equ	0xFEF
  2233                           postinc0	equ	0xFEE
  2234                           postdec0	equ	0xFED
  2235                           preinc0	equ	0xFEC
  2236                           plusw0	equ	0xFEB
  2237                           fsr0h	equ	0xFEA
  2238                           fsr0l	equ	0xFE9
  2239                           wreg	equ	0xFE8
  2240                           indf1	equ	0xFE7
  2241                           postinc1	equ	0xFE6
  2242                           postdec1	equ	0xFE5
  2243                           preinc1	equ	0xFE4
  2244                           plusw1	equ	0xFE3
  2245                           fsr1h	equ	0xFE2
  2246                           fsr1l	equ	0xFE1
  2247                           bsr	equ	0xFE0
  2248                           indf2	equ	0xFDF
  2249                           postinc2	equ	0xFDE
  2250                           postdec2	equ	0xFDD
  2251                           preinc2	equ	0xFDC
  2252                           plusw2	equ	0xFDB
  2253                           fsr2h	equ	0xFDA
  2254                           fsr2l	equ	0xFD9
  2255                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    80
    Data        2
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      90
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_spiInit
    _testSpiSend->_spiWrite
    _SPICallback->_spiWrite

Critical Paths under _service in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _service in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _service in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _service in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _service in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _service in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _service in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _service in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _service in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _service in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _service in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _service in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _service in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _service in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _service in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _service in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _service in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                80    80      0     391
                                              4 COMRAM    80    80      0
                        _SPICallback
                     _buttonCallback
                     _buttonDebounce
               _displayRequestHandle
                   _initialiseButton
                     _serialCallback
                 _setButtonInterrput
                        _setButtonIo
                      _setInterrupts
                              _setIo
                    _setSPIInterrupt
                          _setSerial
                        _setSerialIo
                     _setupDisplayIo
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setupDisplayIo                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSerialIo                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSerial                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSPIInterrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setIo                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setInterrupts                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setButtonIo                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setButtonInterrput                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _serialCallback                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialiseButton                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displayRequestHandle                                 0     0      0       0
                         _displaySPI
                      _displaySerial
 ---------------------------------------------------------------------------------
 (2) _displaySerial                                        0     0      0       0
                    _displayCallback
 ---------------------------------------------------------------------------------
 (2) _displaySPI                                           0     0      0       0
                    _displayCallback
 ---------------------------------------------------------------------------------
 (3) _displayCallback                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttonDebounce                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttonCallback                                       0     0      0      15
                        _testSpiSend
 ---------------------------------------------------------------------------------
 (2) _testSpiSend                                          0     0      0      15
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _SPICallback                                          0     0      0      15
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _service                                              0     0      0       0
                   _interruptService
 ---------------------------------------------------------------------------------
 (5) _interruptService                                     0     0      0       0
            _processInterruptService
 ---------------------------------------------------------------------------------
 (6) _processInterruptService                              0     0      0       0
                          _SPIHandle
                       _buttonHandle
                       _serialHandle
 ---------------------------------------------------------------------------------
 (7) _serialHandle                                         0     0      0       0
                         _readSerial
 ---------------------------------------------------------------------------------
 (8) _readSerial                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _buttonHandle                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _SPIHandle                                            0     0      0       0
                            _spiRead
 ---------------------------------------------------------------------------------
 (8) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (9) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPICallback
     _spiWrite
   _buttonCallback
     _testSpiSend
       _spiWrite
   _buttonDebounce
   _displayRequestHandle
     _displaySPI
       _displayCallback
     _displaySerial
       _displayCallback
   _initialiseButton
   _serialCallback
   _setButtonInterrput
   _setButtonIo
   _setInterrupts
   _setIo
   _setSPIInterrupt
   _setSerial
   _setSerialIo
   _setupDisplayIo
   _spiInit

 _service (ROOT)
   _interruptService
     _processInterruptService
       _SPIHandle
         _spiRead
           _spiReceiveWait
       _buttonHandle
       _serialHandle
         _readSerial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      5A       1       95.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5A      32        0.0%
DATA                 0      0      5A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jul  8 15:23:36 2021

        ?_processInterruptService 0001                                l93 130C  
                              l97 11A8                                l98 11B2  
                             l121 12D4                               l107 12F8  
                             l124 12F0                               l212 1306  
                             l141 1318                               l215 131E  
                             l135 133C                               l209 1290  
                             l250 1236                               l138 1312  
                             l243 1334                               l260 1258  
                             l246 1324                               l280 12C0  
                             l283 12CA                               l292 132A  
                             l277 12B6                               l286 11FE  
                             l289 1212                               l980 12F4  
                             _GIE 007F97                               l998 1326  
                             u120 11F4                               u121 11F0  
                             u130 120C                               u131 1208  
                             u140 1222                               u141 121E  
                             u150 1230                               u230 1190  
                             u151 122C                               u231 118C  
                             u160 1250                               u240 1092  
                             u161 124C                               u250 10AA  
                             u251 10A6                               u260 10BE  
                             u261 10BA                               u270 10D2  
                             u271 10CE                               u280 10E6  
                             u281 10E2                               u290 10FA  
                             u291 10F6                               wreg 000FE8  
                  ?_displaySerial 0001            ??_displayRequestHandle 0001  
                            l1000 12EA                              l1100 1214  
                            l1102 1222                              l1110 123E  
                            l1030 12BC                              l1104 1230  
                            l1112 1250                              l1032 12C2  
                            l1040 1302                              l1200 10B0  
                            l1106 1234                              l1114 1252  
                            l1034 12C6                              l1050 1284  
                            l1042 127A                              l1210 10D6  
                            l1202 10BE                              l1108 1238  
                            l1028 12B8                              l1060 1320  
                            l1052 1286                              l1044 127C  
                            l1220 10FA                              l1212 10D8  
                            l1204 10C2                              l1062 1314  
                            l1038 1308                              l1054 1288  
                            l1046 1280                              l1214 10E6  
                            l1206 10C4                              l1064 1332  
                            l1056 128A                              l1048 1282  
                            l1216 10E8                              l1208 10D2  
                            l1090 11F4                              l1066 130E  
                            l1058 12AE                              l1170 1182  
                            l1218 10EC                              l1084 12CC  
                            l1092 11F8                              l1180 11AE  
                            l1172 1190                              l1086 12D2  
                            l1094 120C                              l1182 11B0  
                            l1174 119E                              l1190 1076  
                            l1096 1210                              l1088 11E6  
                            l1176 11A4                              l1168 117E  
                            l1192 1088                              l1184 1052  
                            l1098 131A                              l1178 11A6  
                            l1194 109C                              l1186 105E  
                            l1196 10AA                              l1188 1062  
                            l1198 10AE                              _CKE1 007E3E  
                            _CKP1 007E34                              _PEIE 007F96  
                            i2l45 12DC                              _main 1052  
                            btemp 005B                              start 000E  
                    ___param_bank 000000          __end_of_interruptService 1332  
                           ?_main 0001                             _BRGH1 007D62  
                           _CREN1 007D5C                             _FLAGS 0057  
                           _LATC0 007C58                             _RC1IE 007CED  
                           _RC1IF 007CF5                             i2l101 1292  
                           i2l104 12A0                             i2l115 1300  
                           i2l118 12AC                             i2l218 12E8  
                           i2l227 1338                             i2l171 117A  
                           i2l254 1278                             i2l174 1330  
                           i2l970 12FA                             i2l972 12FE  
                           i2l982 12A2                             i2l990 12E2  
                           i2l968 1292                             i2l984 12A8  
                           i2l992 125A                             i2l976 1336  
                           i2l986 12AA                             i2l994 1268  
                           i2l996 1276                             i2l988 12E0  
                           _SPEN1 007D5F                             _SPBRG 000FAF  
                           _PORTD 000F83                             _TRISD 000F95  
                           _TXEN1 007D65                             _SYNC1 007D64  
                           _setIo 133C                  ?_displayCallback 0001  
              __size_of_SPIHandle 000C                   __end_of_spiInit 11B4  
                 __end_of_spiRead 1302                             tablat 000FF5  
                 __end_of_service 12E0                             ttemp5 005C  
                           ttemp6 005F                             ttemp7 0063  
                           status 000FD8             __end_of_setInterrupts 1314  
                           wtemp8 005C                  ??_setupDisplayIo 0001  
                 __initialization 11B4                      __end_of_main 1106  
                 _readSerialValue 0056                            ??_main 0005  
                   __activetblptr 000001                      ?_setButtonIo 0001  
                 ??_displaySerial 0001                 ?_initialiseButton 0001  
                    ?_setSerialIo 0001                            ?_setIo 0001  
              ??_initialiseButton 0001                     ?_buttonHandle 0001  
                          _INT0IE 007F94                            _INT0IF 007F91  
                          i2l1010 1128                            i2l1002 1106  
                          i2l1012 1136                            i2l1020 1158  
                          i2l1004 1114                            i2l1022 1166  
                          i2l1014 1144                            i2l1006 1122  
                          i2l1024 1174                            i2l1016 1152  
                          i2l1008 1126                            i2l1026 1178  
                          i2l1018 1156                            i2l1036 132C  
                          i2l1116 12D8                            _RCREG1 000FAE  
                          _SSP1IE 007CEB                            i2u1_40 12A0  
                          _SSP1IF 007CF3                            i2u1_41 129C  
                          i2u2_40 1268                            i2u2_41 1264  
                          i2u3_40 1276                            i2u3_41 1272  
                          i2u4_40 1114                            i2u4_41 1110  
                          i2u5_40 1122                            i2u5_41 111E  
                          i2u6_40 1136                            i2u6_41 1132  
                          i2u7_40 1144                            i2u7_41 1140  
                          i2u8_40 1152                            i2u8_41 114E  
                          _TRISB0 007C98                            i2u9_40 1166  
                          _TRISC2 007CA2                            i2u9_41 1162  
                          _TRISC3 007CA3                            _TRISC4 007CA4  
                          _TRISC5 007CA5                            _TRISC6 007CA6  
                          _TRISC7 007CA7                            _TXREG1 000FAD  
              _setButtonInterrput 1314               ?_setButtonInterrput 0001  
               __end_of_SPIHandle 12AE           __size_of_serialCallback 0006  
                          isa$std 000001                      __pdataCOMRAM 0059  
                    ?_SPICallback 0001                      __mediumconst 0000  
                __end_of_spiWrite 12FA                      ?_testSpiSend 0001  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                         ??_spiInit 0004  
                       ??_spiRead 0001                         ??_service 0001  
                  ??_buttonHandle 0001              ??_setButtonInterrput 0001  
                      __accesstop 0060           __end_of__initialization 11D4  
                   ___rparam_used 000001                    __pcstackCOMRAM 0001  
                   __end_of_setIo 133E          __size_of_setSPIInterrupt 0006  
__size_of_processInterruptService 0076                           ??_setIo 0001  
               ?_interruptService 0001           __size_of_spiReceiveWait 0010  
              __size_of_setSerial 0018                ??_interruptService 0001  
                         _INTEDG0 007F8E                           i2u10_40 1174  
                         i2u10_41 1170              __size_of_setButtonIo 0004  
                         _SSP1BUF 000FC9                        _displaySPI 12C2  
         __size_of_buttonCallback 0024              __size_of_setSerialIo 0006  
         __size_of_buttonDebounce 0022     __size_of_displayRequestHandle 002E  
                   ?_serialHandle 0001                           __Hparam 0000  
                         __Lparam 0000                         ?_spiWrite 0001  
                      _readSerial 1336              __end_of_buttonHandle 127A  
                    __psmallconst 1000                    _serialCallback 131A  
                         __pcinit 11B4                           __ramtop 1000  
                         __ptext0 1052                           __ptext1 117C  
                         __ptext2 12AE                           __ptext3 1302  
                         __ptext4 127A                           __ptext5 1308  
                         __ptext6 133C                           __ptext7 130E  
                         __ptext8 1332                           __ptext9 1314  
                         _spiInit 117C                           _spiRead 12FA  
                         _service 0008              __size_of_SPICallback 000A  
            __size_of_testSpiSend 0008                    __pintcode_body 12D6  
            end_of_initialization 11D4                 __end_of_setSerial 1292  
                  ??_serialHandle 0001                           int_func 12D6  
               ??_setSPIInterrupt 0001                 __end_ofmain@F4619 1051  
        __size_of_displayCallback 0006         __size_of_initialiseButton 0006  
                      ??_spiWrite 0001            __end_of_serialCallback 1320  
                         postinc2 000FDE            __size_of_setInterrupts 0006  
                       _SPIHandle 12A2           _processInterruptService 1106  
                     ?_displaySPI 0001             __end_of_displaySerial 12C2  
                     spiWrite@dat 0001                   ?_serialCallback 0001  
                  _spiReceiveWait 1292                       ?_readSerial 0001  
         __size_of_setupDisplayIo 000A                     __pidataCOMRAM 133A  
                      ?_SPIHandle 0001               start_initialization 11B4  
                  _buttonCallback 1214       __size_of_setButtonInterrput 0006  
                  _buttonDebounce 1238                     _setInterrupts 130E  
                    _readSPIValue 0058             __size_of_buttonHandle 0020  
          __end_of_spiReceiveWait 12A2               __size_of_displaySPI 000A  
               ??_displayCallback 0001              __end_of_serialHandle 12EA  
       ??_processInterruptService 0001                       __pbssCOMRAM 0055  
          __end_of_buttonCallback 1238         __size_of_interruptService 0006  
           buttonDebounce@counter 0059            __end_of_buttonDebounce 125A  
                    _buttonHandle 125A               __size_of_readSerial 0004  
                  ?_setInterrupts 0001                  _initialiseButton 1320  
                 ?_spiReceiveWait 0001                         __pintcode 0008  
    __end_of_displayRequestHandle 1214                 __size_of_spiWrite 0008  
                   ??_setButtonIo 0001                       __smallconst 1000  
                     ??_SPIHandle 0001                   _setSPIInterrupt 1308  
                        ?_spiInit 0001                          ?_spiRead 0001  
                 ?_buttonCallback 0001                          ?_service 0001  
                   ??_setSerialIo 0001                   ?_buttonDebounce 0001  
                  __size_of_setIo 0002              spiInit@sTransmitEdge 0003  
 __end_of_processInterruptService 117C                         _setSerial 127A  
              spiInit@sDataSample 0001                         main@F4619 1001  
                        _SSP1CON1 000FC6                          _SSP1STAT 000FC7  
                  _setupDisplayIo 12AE                     ??_SPICallback 0002  
                   ??_testSpiSend 0002                      ??_displaySPI 0001  
             __end_of_setButtonIo 1336                   ??_setInterrupts 0001  
             __end_of_setSerialIo 1308                  ??_serialCallback 0001  
                      ?_setSerial 0001                          __Hrparam 0000  
                        __Lrparam 0000                      __Lsmallconst 1000  
          __end_of_setupDisplayIo 12B8             __size_of_serialHandle 000A  
                    ??_readSerial 0001                __end_of_displaySPI 12CC  
         __end_of_setSPIInterrupt 130E                  _interruptService 132C  
                        __ptext10 131A                          __ptext11 1320  
                        __ptext20 12F2                          __ptext12 11E6  
                        __ptext13 12B8                          __ptext22 132C  
                        __ptext14 12C2                          __ptext23 1106  
                        __ptext15 1326                          __ptext24 12E0  
                        __ptext16 1238                          __ptext25 1336  
                        __ptext17 1214                          __ptext26 125A  
                        __ptext18 12EA                          __ptext27 12A2  
                        __ptext19 12CC                          __ptext28 12FA  
                        __ptext29 1292                  __size_of_spiInit 0038  
                __size_of_spiRead 0008                  __size_of_service 12D8  
                        _ledValue 0055               __end_of_SPICallback 12D6  
             __end_of_testSpiSend 12F2              _displayRequestHandle 11E6  
              __end_of_readSerial 133A                     __size_of_main 00B4  
                    _serialHandle 12E0                   _displayCallback 1326  
                        isa$xinst 000000                   ?_setupDisplayIo 0001  
                        _spiWrite 12F2                          int$flags 005B  
                    spiInit@sType 0004            __size_of_displaySerial 000A  
                    _SSP1STATbits 000FC7                 spiInit@sClockIdle 0002  
                        main@test 0005                       _setButtonIo 1332  
        __end_of_initialiseButton 1326        __end_of_setButtonInterrput 131A  
                     _setSerialIo 1302                          intlevel2 0000  
           ?_displayRequestHandle 0001                  ??_spiReceiveWait 0001  
                     ??_setSerial 0001                  ?_setSPIInterrupt 0001  
                ??_buttonCallback 0002                  ??_buttonDebounce 0001  
                     _SPICallback 12CC                       _testSpiSend 12EA  
                   _displaySerial 12B8           __end_of_displayCallback 132C  
