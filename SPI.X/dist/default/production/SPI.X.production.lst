

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jul  4 12:51:54 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F8722 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74                           	psect	smallconst
    75  001000                     __psmallconst:
    76                           	callstack 0
    77  001000  00                 	db	0
    78  001001                     main@F4613:
    79                           	callstack 0
    80  001001  73                 	db	115
    81  001002  73                 	db	115
    82  001003  73                 	db	115
    83  001004  64                 	db	100
    84  001005  64                 	db	100
    85  001006  64                 	db	100
    86  001007  64                 	db	100
    87  001008  00                 	db	0
    88  001009  00                 	db	0
    89  00100A  00                 	db	0
    90  00100B  00                 	db	0
    91  00100C  00                 	db	0
    92  00100D  00                 	db	0
    93  00100E  00                 	db	0
    94  00100F  00                 	db	0
    95  001010  00                 	db	0
    96  001011  00                 	db	0
    97  001012  00                 	db	0
    98  001013  00                 	db	0
    99  001014  00                 	db	0
   100  001015  00                 	db	0
   101  001016  00                 	db	0
   102  001017  00                 	db	0
   103  001018  00                 	db	0
   104  001019  00                 	db	0
   105  00101A  00                 	db	0
   106  00101B  00                 	db	0
   107  00101C  00                 	db	0
   108  00101D  00                 	db	0
   109  00101E  00                 	db	0
   110  00101F  00                 	db	0
   111  001020  00                 	db	0
   112  001021  00                 	db	0
   113  001022  00                 	db	0
   114  001023  00                 	db	0
   115  001024  00                 	db	0
   116  001025  00                 	db	0
   117  001026  00                 	db	0
   118  001027  00                 	db	0
   119  001028  00                 	db	0
   120  001029  00                 	db	0
   121  00102A  00                 	db	0
   122  00102B  00                 	db	0
   123  00102C  00                 	db	0
   124  00102D  00                 	db	0
   125  00102E  00                 	db	0
   126  00102F  00                 	db	0
   127  001030  00                 	db	0
   128  001031  00                 	db	0
   129  001032  00                 	db	0
   130  001033  00                 	db	0
   131  001034  00                 	db	0
   132  001035  00                 	db	0
   133  001036  00                 	db	0
   134  001037  00                 	db	0
   135  001038  00                 	db	0
   136  001039  00                 	db	0
   137  00103A  00                 	db	0
   138  00103B  00                 	db	0
   139  00103C  00                 	db	0
   140  00103D  00                 	db	0
   141  00103E  00                 	db	0
   142  00103F  00                 	db	0
   143  001040  00                 	db	0
   144  001041  00                 	db	0
   145  001042  00                 	db	0
   146  001043  00                 	db	0
   147  001044  00                 	db	0
   148  001045  00                 	db	0
   149  001046  00                 	db	0
   150  001047  00                 	db	0
   151  001048  00                 	db	0
   152  001049  00                 	db	0
   153  00104A  00                 	db	0
   154  00104B  00                 	db	0
   155  00104C  00                 	db	0
   156  00104D  00                 	db	0
   157  00104E  00                 	db	0
   158  00104F  00                 	db	0
   159  001050  00                 	db	0
   160  001051                     __end_ofmain@F4613:
   161                           	callstack 0
   162  0000                     _PORTD	set	3971
   163  0000                     _TRISD	set	3989
   164  0000                     _TXREG1	set	4013
   165  0000                     _RCREG1	set	4014
   166  0000                     _SPBRG	set	4015
   167  0000                     _SSPBUF	set	4041
   168  0000                     _SSPSTATbits	set	4039
   169  0000                     _SSP1CON1	set	4038
   170  0000                     _SSPSTAT	set	4039
   171  0000                     _TRISC6	set	31910
   172  0000                     _TRISC7	set	31911
   173  0000                     _TXEN1	set	32101
   174  0000                     _CREN1	set	32092
   175  0000                     _SPEN1	set	32095
   176  0000                     _SYNC1	set	32100
   177  0000                     _BRGH1	set	32098
   178  0000                     _INT0IF	set	32657
   179  0000                     _RC1IF	set	31989
   180  0000                     _RC1IE	set	31981
   181  0000                     _INT0IE	set	32660
   182  0000                     _INTEDG0	set	32654
   183  0000                     _PEIE	set	32662
   184  0000                     _GIE	set	32663
   185  0000                     _TRISB0	set	31896
   186  0000                     _LATC0	set	31832
   187  0000                     _TRISC2	set	31906
   188  0000                     _TRISC3	set	31907
   189  0000                     _TRISC4	set	31908
   190  0000                     _TRISC5	set	31909
   191  0000                     _SSPIE	set	31979
   192  0000                     _SSPIF	set	31987
   193  001051  00                 	db	0	; dummy byte at the end
   194  0000                     
   195                           ; #config settings
   196                           
   197                           	psect	cinit
   198  0011B0                     __pcinit:
   199                           	callstack 0
   200  0011B0                     start_initialization:
   201                           	callstack 0
   202  0011B0                     __initialization:
   203                           	callstack 0
   204                           
   205                           ; Clear objects allocated to COMRAM (4 bytes)
   206  0011B0  6A55               	clrf	(__pbssCOMRAM+3)& (0+255),c
   207  0011B2  6A54               	clrf	(__pbssCOMRAM+2)& (0+255),c
   208  0011B4  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
   209  0011B6  6A52               	clrf	__pbssCOMRAM& (0+255),c
   210  0011B8                     end_of_initialization:
   211                           	callstack 0
   212  0011B8                     __end_of__initialization:
   213                           	callstack 0
   214  0011B8  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   215  0011BA  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   216  0011BC  0E00               	movlw	low (__Lsmallconst shr (0+16))
   217  0011BE  6EF8               	movwf	tblptru,c
   218  0011C0  0E10               	movlw	high __Lsmallconst
   219  0011C2  6EF7               	movwf	tblptrh,c
   220  0011C4  0100               	movlb	0
   221  0011C6  EF64  F008         	goto	_main	;jump to C main() function
   222                           
   223                           	psect	bssCOMRAM
   224  000052                     __pbssCOMRAM:
   225                           	callstack 0
   226  000052                     _outValue:
   227                           	callstack 0
   228  000052                     	ds	1
   229  000053                     _readSerialValue:
   230                           	callstack 0
   231  000053                     	ds	1
   232  000054                     _FLAGS:
   233                           	callstack 0
   234  000054                     	ds	1
   235  000055                     _readSPIValue:
   236                           	callstack 0
   237  000055                     	ds	1
   238                           
   239                           	psect	cstackCOMRAM
   240  000001                     __pcstackCOMRAM:
   241                           	callstack 0
   242  000001                     ??_buttonCallback:
   243  000001                     
   244                           ; 1 bytes @ 0x0
   245  000001                     	ds	1
   246  000002                     main@test:
   247                           	callstack 0
   248                           
   249                           ; 80 bytes @ 0x1
   250  000002                     	ds	80
   251                           
   252 ;;
   253 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   254 ;;
   255 ;; *************** function _main *****************
   256 ;; Defined at:
   257 ;;		line 22 in file "newmain.c"
   258 ;; Parameters:    Size  Location     Type
   259 ;;		None
   260 ;; Auto vars:     Size  Location     Type
   261 ;;  test           80    1[COMRAM] const unsigned char [80]
   262 ;; Return value:  Size  Location     Type
   263 ;;                  1    wreg      void 
   264 ;; Registers used:
   265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   266 ;; Tracked objects:
   267 ;;		On entry : 0/0
   268 ;;		On exit  : 0/0
   269 ;;		Unchanged: 0/0
   270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   272 ;;      Locals:        80       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   274 ;;      Totals:        80       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   275 ;;Total ram usage:       80 bytes
   276 ;; Hardware stack levels required when called: 9
   277 ;; This function calls:
   278 ;;		_buttonCallback
   279 ;;		_displayRequestHandle
   280 ;;		_serialCallback
   281 ;;		_setInterrupts
   282 ;;		_setIo
   283 ;;		_setSPIInterrupt
   284 ;;		_setSerial
   285 ;;		_setSerialIo
   286 ;;		_setSwitchInterrput
   287 ;;		_setupDisplayIo
   288 ;; This function is called by:
   289 ;;		Startup code after reset
   290 ;; This function uses a non-reentrant model
   291 ;;
   292                           
   293                           	psect	text0
   294  0010C8                     __ptext0:
   295                           	callstack 0
   296  0010C8                     _main:
   297                           	callstack 22
   298  0010C8                     
   299                           ;newmain.c: 23:     setIo();
   300  0010C8  EC2F  F009         	call	_setIo	;wreg free
   301                           
   302                           ;newmain.c: 24:     setSPIInterrupt();
   303  0010CC  EC20  F009         	call	_setSPIInterrupt	;wreg free
   304                           
   305                           ;newmain.c: 25:     setSerialIo();
   306  0010D0  EC1D  F009         	call	_setSerialIo	;wreg free
   307  0010D4                     
   308                           ;newmain.c: 26:     setSerial();
   309  0010D4  ECE5  F008         	call	_setSerial	;wreg free
   310  0010D8                     
   311                           ;newmain.c: 27:     setupDisplayIo();
   312  0010D8  ECF9  F008         	call	_setupDisplayIo	;wreg free
   313                           
   314                           ;newmain.c: 28:     setSwitchInterrput();
   315  0010DC  EC1A  F009         	call	_setSwitchInterrput	;wreg free
   316                           
   317                           ;newmain.c: 29:     setInterrupts();
   318  0010E0  EC23  F009         	call	_setInterrupts	;wreg free
   319  0010E4                     
   320                           ;newmain.c: 33:     const unsigned char test[80] = "sssdddd";
   321  0010E4  0E01               	movlw	low main@F4613
   322  0010E6  6EF6               	movwf	tblptrl,c
   323  0010E8                     	if	0	;There is only one active tblptr byte
   324  0010E8                     	endif
   325  0010E8                     	if	0	;There are less than 3 active tblptr bytes
   326  0010E8                     	endif
   327  0010E8  EE20  F002         	lfsr	2,main@test
   328  0010EC  0E4F               	movlw	79
   329  0010EE                     u150:
   330  0010EE  0009               	tblrd		*+
   331  0010F0  CFF5 FFDE          	movff	tablat,postinc2
   332  0010F4  06E8               	decf	wreg,f,c
   333  0010F6  E2FB               	bc	u150
   334  0010F8                     l1041:
   335                           
   336                           ;newmain.c: 36:         if (FLAGS.bits.DISPLAY_READING) {
   337  0010F8  A854               	btfss	_FLAGS^0,4,c
   338  0010FA  EF81  F008         	goto	u161
   339  0010FE  EF83  F008         	goto	u160
   340  001102                     u161:
   341  001102  EF86  F008         	goto	l1047
   342  001106                     u160:
   343  001106                     
   344                           ;newmain.c: 37:             displayRequestHandle();
   345  001106  ECC1  F008         	call	_displayRequestHandle	;wreg free
   346  00110A                     
   347                           ;newmain.c: 38:             FLAGS.bits.DISPLAY_READING = 0;
   348  00110A  9854               	bcf	_FLAGS^0,4,c
   349  00110C                     l1047:
   350                           
   351                           ;newmain.c: 40:         if (FLAGS.bits.UART_RECEIVED) {
   352  00110C  A254               	btfss	_FLAGS^0,1,c
   353  00110E  EF8B  F008         	goto	u171
   354  001112  EF8D  F008         	goto	u170
   355  001116                     u171:
   356  001116  EF90  F008         	goto	l1053
   357  00111A                     u170:
   358  00111A                     
   359                           ;newmain.c: 41:             serialCallback();
   360  00111A  EC26  F009         	call	_serialCallback	;wreg free
   361  00111E                     
   362                           ;newmain.c: 42:             FLAGS.bits.UART_RECEIVED = 0;
   363  00111E  9254               	bcf	_FLAGS^0,1,c
   364  001120                     l1053:
   365                           
   366                           ;newmain.c: 44:         if (FLAGS.bits.PUSHED_BUTTON) {
   367  001120  A654               	btfss	_FLAGS^0,3,c
   368  001122  EF95  F008         	goto	u181
   369  001126  EF97  F008         	goto	u180
   370  00112A                     u181:
   371  00112A  EF7C  F008         	goto	l1041
   372  00112E                     u180:
   373  00112E                     
   374                           ;newmain.c: 45:             buttonCallback();
   375  00112E  EC9E  F008         	call	_buttonCallback	;wreg free
   376  001132                     
   377                           ;newmain.c: 46:             FLAGS.bits.PUSHED_BUTTON = 0;
   378  001132  9654               	bcf	_FLAGS^0,3,c
   379  001134  EF7C  F008         	goto	l1041
   380  001138  EF07  F000         	goto	start
   381  00113C                     __end_of_main:
   382                           	callstack 0
   383                           
   384 ;; *************** function _setupDisplayIo *****************
   385 ;; Defined at:
   386 ;;		line 6 in file "display.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;		None
   389 ;; Auto vars:     Size  Location     Type
   390 ;;		None
   391 ;; Return value:  Size  Location     Type
   392 ;;                  1    wreg      void 
   393 ;; Registers used:
   394 ;;		wreg, status,2
   395 ;; Tracked objects:
   396 ;;		On entry : 0/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   404 ;;Total ram usage:        0 bytes
   405 ;; Hardware stack levels used: 1
   406 ;; Hardware stack levels required when called: 6
   407 ;; This function calls:
   408 ;;		Nothing
   409 ;; This function is called by:
   410 ;;		_main
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           	psect	text1
   415  0011F2                     __ptext1:
   416                           	callstack 0
   417  0011F2                     _setupDisplayIo:
   418                           	callstack 24
   419  0011F2                     
   420                           ;display.c: 7:     TRISD = 0x00;
   421  0011F2  0E00               	movlw	0
   422  0011F4  6E95               	movwf	149,c	;volatile
   423                           
   424                           ;display.c: 8:     PORTD = 0x00;
   425  0011F6  0E00               	movlw	0
   426  0011F8  6E83               	movwf	131,c	;volatile
   427  0011FA  0012               	return		;funcret
   428  0011FC                     __end_of_setupDisplayIo:
   429                           	callstack 0
   430                           
   431 ;; *************** function _setSwitchInterrput *****************
   432 ;; Defined at:
   433 ;;		line 20 in file "init.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;		None
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		None
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   451 ;;Total ram usage:        0 bytes
   452 ;; Hardware stack levels used: 1
   453 ;; Hardware stack levels required when called: 6
   454 ;; This function calls:
   455 ;;		Nothing
   456 ;; This function is called by:
   457 ;;		_main
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           	psect	text2
   462  001234                     __ptext2:
   463                           	callstack 0
   464  001234                     _setSwitchInterrput:
   465                           	callstack 24
   466  001234                     
   467                           ;init.c: 21:     INTEDG0 = 1;
   468  001234  8CF1               	bsf	4081,6,c	;volatile
   469                           
   470                           ;init.c: 22:     INT0IE = 1;
   471  001236  88F2               	bsf	4082,4,c	;volatile
   472  001238  0012               	return		;funcret
   473  00123A                     __end_of_setSwitchInterrput:
   474                           	callstack 0
   475                           
   476 ;; *************** function _setSerialIo *****************
   477 ;; Defined at:
   478 ;;		line 17 in file "serial.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;		None
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      void 
   485 ;; Registers used:
   486 ;;		None
   487 ;; Tracked objects:
   488 ;;		On entry : 0/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   496 ;;Total ram usage:        0 bytes
   497 ;; Hardware stack levels used: 1
   498 ;; Hardware stack levels required when called: 6
   499 ;; This function calls:
   500 ;;		Nothing
   501 ;; This function is called by:
   502 ;;		_main
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	text3
   507  00123A                     __ptext3:
   508                           	callstack 0
   509  00123A                     _setSerialIo:
   510                           	callstack 24
   511  00123A                     
   512                           ;serial.c: 18:     TRISC7 = 1;
   513  00123A  8E94               	bsf	3988,7,c	;volatile
   514                           
   515                           ;serial.c: 19:     TRISC6 = 0;
   516  00123C  9C94               	bcf	3988,6,c	;volatile
   517  00123E  0012               	return		;funcret
   518  001240                     __end_of_setSerialIo:
   519                           	callstack 0
   520                           
   521 ;; *************** function _setSerial *****************
   522 ;; Defined at:
   523 ;;		line 5 in file "serial.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;		None
   526 ;; Auto vars:     Size  Location     Type
   527 ;;		None
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, status,2
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   541 ;;Total ram usage:        0 bytes
   542 ;; Hardware stack levels used: 1
   543 ;; Hardware stack levels required when called: 6
   544 ;; This function calls:
   545 ;;		Nothing
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           	psect	text4
   552  0011CA                     __ptext4:
   553                           	callstack 0
   554  0011CA                     _setSerial:
   555                           	callstack 24
   556  0011CA                     
   557                           ;serial.c: 6:     BRGH1 = 0;
   558  0011CA  94AC               	bcf	4012,2,c	;volatile
   559  0011CC                     
   560                           ;serial.c: 7:     SPBRG = 15;
   561  0011CC  0E0F               	movlw	15
   562  0011CE  6EAF               	movwf	175,c	;volatile
   563  0011D0                     
   564                           ;serial.c: 8:     SYNC1 = 0;
   565  0011D0  98AC               	bcf	4012,4,c	;volatile
   566  0011D2                     
   567                           ;serial.c: 9:     SPEN1 = 1;
   568  0011D2  8EAB               	bsf	4011,7,c	;volatile
   569  0011D4                     
   570                           ;serial.c: 10:     RC1IE = 1;
   571  0011D4  8A9D               	bsf	3997,5,c	;volatile
   572  0011D6                     
   573                           ;serial.c: 11:     CREN1 = 1;
   574  0011D6  88AB               	bsf	4011,4,c	;volatile
   575  0011D8                     
   576                           ;serial.c: 12:     RC1IF = 0;
   577  0011D8  9A9E               	bcf	3998,5,c	;volatile
   578  0011DA                     
   579                           ;serial.c: 13:     TXEN1 = 1;
   580  0011DA  8AAC               	bsf	4012,5,c	;volatile
   581                           
   582                           ;serial.c: 14:     RCREG1 = 0;
   583  0011DC  0E00               	movlw	0
   584  0011DE  6EAE               	movwf	174,c	;volatile
   585  0011E0  0012               	return		;funcret
   586  0011E2                     __end_of_setSerial:
   587                           	callstack 0
   588                           
   589 ;; *************** function _setSPIInterrupt *****************
   590 ;; Defined at:
   591 ;;		line 8 in file "spi.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;		None
   594 ;; Auto vars:     Size  Location     Type
   595 ;;		None
   596 ;; Return value:  Size  Location     Type
   597 ;;                  1    wreg      void 
   598 ;; Registers used:
   599 ;;		None
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   609 ;;Total ram usage:        0 bytes
   610 ;; Hardware stack levels used: 1
   611 ;; Hardware stack levels required when called: 6
   612 ;; This function calls:
   613 ;;		Nothing
   614 ;; This function is called by:
   615 ;;		_main
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619                           	psect	text5
   620  001240                     __ptext5:
   621                           	callstack 0
   622  001240                     _setSPIInterrupt:
   623                           	callstack 24
   624  001240                     
   625                           ;spi.c: 9:     SSPIF = 0;
   626  001240  969E               	bcf	3998,3,c	;volatile
   627                           
   628                           ;spi.c: 10:     SSPIE = 1;
   629  001242  869D               	bsf	3997,3,c	;volatile
   630  001244  0012               	return		;funcret
   631  001246                     __end_of_setSPIInterrupt:
   632                           	callstack 0
   633                           
   634 ;; *************** function _setIo *****************
   635 ;; Defined at:
   636 ;;		line 9 in file "init.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		None
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;Total ram usage:        0 bytes
   655 ;; Hardware stack levels used: 1
   656 ;; Hardware stack levels required when called: 6
   657 ;; This function calls:
   658 ;;		Nothing
   659 ;; This function is called by:
   660 ;;		_main
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           	psect	text6
   665  00125E                     __ptext6:
   666                           	callstack 0
   667  00125E                     _setIo:
   668                           	callstack 24
   669  00125E                     
   670                           ;init.c: 11:     TRISB0 = 1;
   671  00125E  8093               	bsf	3987,0,c	;volatile
   672  001260  0012               	return		;funcret
   673  001262                     __end_of_setIo:
   674                           	callstack 0
   675                           
   676 ;; *************** function _setInterrupts *****************
   677 ;; Defined at:
   678 ;;		line 14 in file "init.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;		None
   681 ;; Auto vars:     Size  Location     Type
   682 ;;		None
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		None
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;Total ram usage:        0 bytes
   697 ;; Hardware stack levels used: 1
   698 ;; Hardware stack levels required when called: 6
   699 ;; This function calls:
   700 ;;		Nothing
   701 ;; This function is called by:
   702 ;;		_main
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           	psect	text7
   707  001246                     __ptext7:
   708                           	callstack 0
   709  001246                     _setInterrupts:
   710                           	callstack 24
   711  001246                     
   712                           ;init.c: 15:     GIE = 1;
   713  001246  8EF2               	bsf	4082,7,c	;volatile
   714                           
   715                           ;init.c: 16:     PEIE = 1;
   716  001248  8CF2               	bsf	4082,6,c	;volatile
   717  00124A  0012               	return		;funcret
   718  00124C                     __end_of_setInterrupts:
   719                           	callstack 0
   720                           
   721 ;; *************** function _serialCallback *****************
   722 ;; Defined at:
   723 ;;		line 22 in file "serial.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;		None
   726 ;; Auto vars:     Size  Location     Type
   727 ;;		None
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		None
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;Total ram usage:        0 bytes
   742 ;; Hardware stack levels used: 1
   743 ;; Hardware stack levels required when called: 6
   744 ;; This function calls:
   745 ;;		Nothing
   746 ;; This function is called by:
   747 ;;		_main
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text8
   752  00124C                     __ptext8:
   753                           	callstack 0
   754  00124C                     _serialCallback:
   755                           	callstack 24
   756  00124C                     
   757                           ;serial.c: 23:     FLAGS.bits.DISPLAY_READING = 1;
   758  00124C  8854               	bsf	_FLAGS^0,4,c
   759                           
   760                           ;serial.c: 24:     FLAGS.bits.DISPLAY_SERIAL_READING = 1;
   761  00124E  8C54               	bsf	_FLAGS^0,6,c
   762  001250  0012               	return		;funcret
   763  001252                     __end_of_serialCallback:
   764                           	callstack 0
   765                           
   766 ;; *************** function _displayRequestHandle *****************
   767 ;; Defined at:
   768 ;;		line 21 in file "display.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;		None
   771 ;; Auto vars:     Size  Location     Type
   772 ;;		None
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		cstack
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   786 ;;Total ram usage:        0 bytes
   787 ;; Hardware stack levels used: 1
   788 ;; Hardware stack levels required when called: 8
   789 ;; This function calls:
   790 ;;		_displaySPI
   791 ;;		_displaySerial
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           	psect	text9
   798  001182                     __ptext9:
   799                           	callstack 0
   800  001182                     _displayRequestHandle:
   801                           	callstack 22
   802  001182                     
   803                           ;display.c: 22:     if (FLAGS.bits.DISPLAY_SERIAL_READING) {
   804  001182  AC54               	btfss	_FLAGS^0,6,c
   805  001184  EFC6  F008         	goto	u91
   806  001188  EFC8  F008         	goto	u90
   807  00118C                     u91:
   808  00118C  EFCD  F008         	goto	l245
   809  001190                     u90:
   810  001190                     
   811                           ;display.c: 23:         displaySerial();
   812  001190  ECFE  F008         	call	_displaySerial	;wreg free
   813  001194                     
   814                           ;display.c: 24:         FLAGS.bits.DISPLAY_SERIAL_READING = 0;
   815  001194  9C54               	bcf	_FLAGS^0,6,c
   816                           
   817                           ;display.c: 25:     } else {
   818  001196  EFD7  F008         	goto	l248
   819  00119A                     l245:
   820                           
   821                           ;display.c: 26:         if (FLAGS.bits.DISPLAY_SPI_READING) {
   822  00119A  AA54               	btfss	_FLAGS^0,5,c
   823  00119C  EFD2  F008         	goto	u101
   824  0011A0  EFD4  F008         	goto	u100
   825  0011A4                     u101:
   826  0011A4  EFD7  F008         	goto	l248
   827  0011A8                     u100:
   828  0011A8                     
   829                           ;display.c: 27:             displaySPI();
   830  0011A8  EC03  F009         	call	_displaySPI	;wreg free
   831  0011AC                     
   832                           ;display.c: 28:             FLAGS.bits.DISPLAY_SPI_READING = 0;
   833  0011AC  9A54               	bcf	_FLAGS^0,5,c
   834  0011AE                     l248:
   835  0011AE  0012               	return		;funcret
   836  0011B0                     __end_of_displayRequestHandle:
   837                           	callstack 0
   838                           
   839 ;; *************** function _displaySerial *****************
   840 ;; Defined at:
   841 ;;		line 11 in file "display.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;		None
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		cstack
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;Total ram usage:        0 bytes
   860 ;; Hardware stack levels used: 1
   861 ;; Hardware stack levels required when called: 7
   862 ;; This function calls:
   863 ;;		_displayCallback
   864 ;; This function is called by:
   865 ;;		_displayRequestHandle
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           	psect	text10
   870  0011FC                     __ptext10:
   871                           	callstack 0
   872  0011FC                     _displaySerial:
   873                           	callstack 22
   874  0011FC                     
   875                           ;display.c: 12:     outValue = readSerialValue;
   876  0011FC  C053  F052         	movff	_readSerialValue,_outValue
   877  001200                     
   878                           ;display.c: 13:     displayCallback();
   879  001200  EC29  F009         	call	_displayCallback	;wreg free
   880  001204  0012               	return		;funcret
   881  001206                     __end_of_displaySerial:
   882                           	callstack 0
   883                           
   884 ;; *************** function _displaySPI *****************
   885 ;; Defined at:
   886 ;;		line 16 in file "display.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		cstack
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   904 ;;Total ram usage:        0 bytes
   905 ;; Hardware stack levels used: 1
   906 ;; Hardware stack levels required when called: 7
   907 ;; This function calls:
   908 ;;		_displayCallback
   909 ;; This function is called by:
   910 ;;		_displayRequestHandle
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text11
   915  001206                     __ptext11:
   916                           	callstack 0
   917  001206                     _displaySPI:
   918                           	callstack 22
   919  001206                     
   920                           ;display.c: 17:     outValue = readSPIValue;
   921  001206  C055  F052         	movff	_readSPIValue,_outValue
   922  00120A                     
   923                           ;display.c: 18:     displayCallback();
   924  00120A  EC29  F009         	call	_displayCallback	;wreg free
   925  00120E  0012               	return		;funcret
   926  001210                     __end_of_displaySPI:
   927                           	callstack 0
   928                           
   929 ;; *************** function _displayCallback *****************
   930 ;; Defined at:
   931 ;;		line 33 in file "display.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;		None
   934 ;; Auto vars:     Size  Location     Type
   935 ;;		None
   936 ;; Return value:  Size  Location     Type
   937 ;;                  1    wreg      void 
   938 ;; Registers used:
   939 ;;		None
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   949 ;;Total ram usage:        0 bytes
   950 ;; Hardware stack levels used: 1
   951 ;; Hardware stack levels required when called: 6
   952 ;; This function calls:
   953 ;;		Nothing
   954 ;; This function is called by:
   955 ;;		_displaySerial
   956 ;;		_displaySPI
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           	psect	text12
   961  001252                     __ptext12:
   962                           	callstack 0
   963  001252                     _displayCallback:
   964                           	callstack 22
   965  001252                     
   966                           ;display.c: 34:     PORTD = outValue;
   967  001252  C052  FF83         	movff	_outValue,3971	;volatile
   968  001256  0012               	return		;funcret
   969  001258                     __end_of_displayCallback:
   970                           	callstack 0
   971                           
   972 ;; *************** function _buttonCallback *****************
   973 ;; Defined at:
   974 ;;		line 4 in file "button.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;		None
   977 ;; Auto vars:     Size  Location     Type
   978 ;;		None
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		wreg, status,2
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   990 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   991 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   992 ;;Total ram usage:        1 bytes
   993 ;; Hardware stack levels used: 1
   994 ;; Hardware stack levels required when called: 6
   995 ;; This function calls:
   996 ;;		Nothing
   997 ;; This function is called by:
   998 ;;		_main
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           	psect	text13
  1003  00113C                     __ptext13:
  1004                           	callstack 0
  1005  00113C                     _buttonCallback:
  1006                           	callstack 24
  1007  00113C                     
  1008                           ;button.c: 5:     if (FLAGS.bits.PREVIOUS_BUTTON_STATE != FLAGS.bits.PUSHED_BUTTON) {
  1009  00113C  B654               	btfsc	_FLAGS^0,3,c
  1010  00113E  EFA3  F008         	goto	u111
  1011  001142  EFA6  F008         	goto	u110
  1012  001146                     u111:
  1013  001146  0E01               	movlw	1
  1014  001148  EFA7  F008         	goto	u112
  1015  00114C                     u110:
  1016  00114C  0E00               	movlw	0
  1017  00114E                     u112:
  1018  00114E  6E01               	movwf	??_buttonCallback^0,c
  1019  001150  B454               	btfsc	_FLAGS^0,2,c
  1020  001152  EFAD  F008         	goto	u121
  1021  001156  EFB0  F008         	goto	u120
  1022  00115A                     u121:
  1023  00115A  0E01               	movlw	1
  1024  00115C  EFB1  F008         	goto	u122
  1025  001160                     u120:
  1026  001160  0E00               	movlw	0
  1027  001162                     u122:
  1028  001162  1A01               	xorwf	??_buttonCallback^0,f,c
  1029  001164  B4D8               	btfsc	status,2,c
  1030  001166  EFB7  F008         	goto	u131
  1031  00116A  EFB9  F008         	goto	u130
  1032  00116E                     u131:
  1033  00116E  EFC0  F008         	goto	l216
  1034  001172                     u130:
  1035  001172                     
  1036                           ;button.c: 6:         FLAGS.bits.PREVIOUS_BUTTON_STATE = FLAGS.bits.PUSHED_BUTTON;
  1037  001172  A654               	btfss	_FLAGS^0,3,c
  1038  001174  D002               	bra	u145
  1039  001176  8454               	bsf	_FLAGS^0,2,c
  1040  001178  D001               	bra	u147
  1041  00117A                     u145:
  1042  00117A  9454               	bcf	_FLAGS^0,2,c
  1043  00117C                     u147:
  1044  00117C                     
  1045                           ;button.c: 7:         TXREG1 = 'a';
  1046  00117C  0E61               	movlw	97
  1047  00117E  6EAD               	movwf	173,c	;volatile
  1048  001180                     l216:
  1049  001180  0012               	return		;funcret
  1050  001182                     __end_of_buttonCallback:
  1051                           	callstack 0
  1052                           
  1053 ;; *************** function _service *****************
  1054 ;; Defined at:
  1055 ;;		line 18 in file "newmain.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		wreg, status,2, cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;Total ram usage:        0 bytes
  1074 ;; Hardware stack levels used: 1
  1075 ;; Hardware stack levels required when called: 5
  1076 ;; This function calls:
  1077 ;;		_interruptService
  1078 ;; This function is called by:
  1079 ;;		Interrupt level 2
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           	psect	intcode
  1084  000008                     __pintcode:
  1085                           	callstack 0
  1086  000008                     _service:
  1087                           	callstack 22
  1088                           
  1089                           ;incstack = 0
  1090  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1091  00000A  ED08  F009         	call	int_func,f	;refresh shadow registers
  1092                           
  1093                           	psect	intcode_body
  1094  001210                     __pintcode_body:
  1095                           	callstack 22
  1096  001210                     int_func:
  1097                           	callstack 22
  1098  001210  0006               	pop		; remove dummy address from shadow register refresh
  1099  001212                     
  1100                           ;newmain.c: 19:     interruptService();
  1101  001212  EC2C  F009         	call	_interruptService	;wreg free
  1102  001216  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1103  001218  0011               	retfie		f
  1104  00121A                     __end_of_service:
  1105                           	callstack 0
  1106                           
  1107 ;; *************** function _interruptService *****************
  1108 ;; Defined at:
  1109 ;;		line 28 in file "interruptService.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;		None
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;		None
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      void 
  1116 ;; Registers used:
  1117 ;;		wreg, status,2, cstack
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1127 ;;Total ram usage:        0 bytes
  1128 ;; Hardware stack levels used: 1
  1129 ;; Hardware stack levels required when called: 4
  1130 ;; This function calls:
  1131 ;;		_processInterruptService
  1132 ;; This function is called by:
  1133 ;;		_service
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text15
  1138  001258                     __ptext15:
  1139                           	callstack 0
  1140  001258                     _interruptService:
  1141                           	callstack 22
  1142  001258                     
  1143                           ;interruptService.c: 29:     processInterruptService();
  1144  001258  EC29  F008         	call	_processInterruptService	;wreg free
  1145  00125C  0012               	return		;funcret
  1146  00125E                     __end_of_interruptService:
  1147                           	callstack 0
  1148                           
  1149 ;; *************** function _processInterruptService *****************
  1150 ;; Defined at:
  1151 ;;		line 13 in file "interruptService.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;		None
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;		None
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      void 
  1158 ;; Registers used:
  1159 ;;		wreg, status,2, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1169 ;;Total ram usage:        0 bytes
  1170 ;; Hardware stack levels used: 1
  1171 ;; Hardware stack levels required when called: 3
  1172 ;; This function calls:
  1173 ;;		_SPIHandle
  1174 ;;		_buttonHandle
  1175 ;;		_serialHandle
  1176 ;; This function is called by:
  1177 ;;		_interruptService
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text16
  1182  001052                     __ptext16:
  1183                           	callstack 0
  1184  001052                     _processInterruptService:
  1185                           	callstack 22
  1186  001052                     
  1187                           ;interruptService.c: 14:     if (SSPIE == 1 && SSPIF == 1) {
  1188  001052  A69D               	btfss	3997,3,c	;volatile
  1189  001054  EF2E  F008         	goto	i2u2_41
  1190  001058  EF30  F008         	goto	i2u2_40
  1191  00105C                     i2u2_41:
  1192  00105C  EF3A  F008         	goto	i2l957
  1193  001060                     i2u2_40:
  1194  001060  A69E               	btfss	3998,3,c	;volatile
  1195  001062  EF35  F008         	goto	i2u3_41
  1196  001066  EF37  F008         	goto	i2u3_40
  1197  00106A                     i2u3_41:
  1198  00106A  EF3A  F008         	goto	i2l957
  1199  00106E                     i2u3_40:
  1200  00106E                     
  1201                           ;interruptService.c: 15:         SPIHandle();
  1202  00106E  EC12  F009         	call	_SPIHandle	;wreg free
  1203  001072                     
  1204                           ;interruptService.c: 16:         SSPIF = 0;
  1205  001072  969E               	bcf	3998,3,c	;volatile
  1206  001074                     i2l957:
  1207                           
  1208                           ;interruptService.c: 18:     if (RC1IE == 1 && RC1IF == 1 && FLAGS.bits.UART_RECEIVED ==
      +                           0) {
  1209  001074  AA9D               	btfss	3997,5,c	;volatile
  1210  001076  EF3F  F008         	goto	i2u4_41
  1211  00107A  EF41  F008         	goto	i2u4_40
  1212  00107E                     i2u4_41:
  1213  00107E  EF52  F008         	goto	i2l967
  1214  001082                     i2u4_40:
  1215  001082  AA9E               	btfss	3998,5,c	;volatile
  1216  001084  EF46  F008         	goto	i2u5_41
  1217  001088  EF48  F008         	goto	i2u5_40
  1218  00108C                     i2u5_41:
  1219  00108C  EF52  F008         	goto	i2l967
  1220  001090                     i2u5_40:
  1221  001090  B254               	btfsc	_FLAGS^0,1,c
  1222  001092  EF4D  F008         	goto	i2u6_41
  1223  001096  EF4F  F008         	goto	i2u6_40
  1224  00109A                     i2u6_41:
  1225  00109A  EF52  F008         	goto	i2l967
  1226  00109E                     i2u6_40:
  1227  00109E                     
  1228                           ;interruptService.c: 19:         serialHandle();
  1229  00109E  EC0D  F009         	call	_serialHandle	;wreg free
  1230  0010A2                     
  1231                           ;interruptService.c: 20:         RC1IF = 0;
  1232  0010A2  9A9E               	bcf	3998,5,c	;volatile
  1233  0010A4                     i2l967:
  1234                           
  1235                           ;interruptService.c: 22:     if (INTEDG0 == 1 && INT0IF == 1) {
  1236  0010A4  ACF1               	btfss	4081,6,c	;volatile
  1237  0010A6  EF57  F008         	goto	i2u7_41
  1238  0010AA  EF59  F008         	goto	i2u7_40
  1239  0010AE                     i2u7_41:
  1240  0010AE  EF63  F008         	goto	i2l152
  1241  0010B2                     i2u7_40:
  1242  0010B2  A2F2               	btfss	4082,1,c	;volatile
  1243  0010B4  EF5E  F008         	goto	i2u8_41
  1244  0010B8  EF60  F008         	goto	i2u8_40
  1245  0010BC                     i2u8_41:
  1246  0010BC  EF63  F008         	goto	i2l152
  1247  0010C0                     i2u8_40:
  1248  0010C0                     
  1249                           ;interruptService.c: 23:         buttonHandle();
  1250  0010C0  EC33  F009         	call	_buttonHandle	;wreg free
  1251  0010C4                     
  1252                           ;interruptService.c: 24:         INT0IF = 0;
  1253  0010C4  92F2               	bcf	4082,1,c	;volatile
  1254  0010C6                     i2l152:
  1255  0010C6  0012               	return		;funcret
  1256  0010C8                     __end_of_processInterruptService:
  1257                           	callstack 0
  1258                           
  1259 ;; *************** function _serialHandle *****************
  1260 ;; Defined at:
  1261 ;;		line 28 in file "serial.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;		None
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;		None
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      void 
  1268 ;; Registers used:
  1269 ;;		wreg, status,2, cstack
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;Total ram usage:        0 bytes
  1280 ;; Hardware stack levels used: 1
  1281 ;; Hardware stack levels required when called: 1
  1282 ;; This function calls:
  1283 ;;		_readSerial
  1284 ;; This function is called by:
  1285 ;;		_processInterruptService
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           	psect	text17
  1290  00121A                     __ptext17:
  1291                           	callstack 0
  1292  00121A                     _serialHandle:
  1293                           	callstack 23
  1294  00121A                     
  1295                           ;serial.c: 29:     FLAGS.bits.UART_RECEIVED = 1;
  1296  00121A  8254               	bsf	_FLAGS^0,1,c
  1297  00121C                     
  1298                           ;serial.c: 30:     readSerialValue = readSerial();
  1299  00121C  EC31  F009         	call	_readSerial	;wreg free
  1300  001220  6E53               	movwf	_readSerialValue^0,c
  1301  001222  0012               	return		;funcret
  1302  001224                     __end_of_serialHandle:
  1303                           	callstack 0
  1304                           
  1305 ;; *************** function _readSerial *****************
  1306 ;; Defined at:
  1307 ;;		line 41 in file "serial.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;		None
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      unsigned char 
  1314 ;; Registers used:
  1315 ;;		wreg, status,2
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1325 ;;Total ram usage:        0 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; This function calls:
  1328 ;;		Nothing
  1329 ;; This function is called by:
  1330 ;;		_serialHandle
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           	psect	text18
  1335  001262                     __ptext18:
  1336                           	callstack 0
  1337  001262                     _readSerial:
  1338                           	callstack 23
  1339  001262                     
  1340                           ;serial.c: 42:     return RCREG1;
  1341  001262  50AE               	movf	174,w,c	;volatile
  1342  001264  0012               	return		;funcret
  1343  001266                     __end_of_readSerial:
  1344                           	callstack 0
  1345                           
  1346 ;; *************** function _buttonHandle *****************
  1347 ;; Defined at:
  1348 ;;		line 11 in file "button.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;		None
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;		None
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		None
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1366 ;;Total ram usage:        0 bytes
  1367 ;; Hardware stack levels used: 1
  1368 ;; This function calls:
  1369 ;;		Nothing
  1370 ;; This function is called by:
  1371 ;;		_processInterruptService
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           	psect	text19
  1376  001266                     __ptext19:
  1377                           	callstack 0
  1378  001266                     _buttonHandle:
  1379                           	callstack 24
  1380  001266                     
  1381                           ;button.c: 12:     FLAGS.bits.PUSHED_BUTTON = 1;
  1382  001266  8654               	bsf	_FLAGS^0,3,c
  1383  001268  0012               	return		;funcret
  1384  00126A                     __end_of_buttonHandle:
  1385                           	callstack 0
  1386                           
  1387 ;; *************** function _SPIHandle *****************
  1388 ;; Defined at:
  1389 ;;		line 54 in file "spi.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;		None
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;		None
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		wreg, status,2, cstack
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1407 ;;Total ram usage:        0 bytes
  1408 ;; Hardware stack levels used: 1
  1409 ;; Hardware stack levels required when called: 2
  1410 ;; This function calls:
  1411 ;;		_spiRead
  1412 ;; This function is called by:
  1413 ;;		_processInterruptService
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text20
  1418  001224                     __ptext20:
  1419                           	callstack 0
  1420  001224                     _SPIHandle:
  1421                           	callstack 22
  1422  001224                     
  1423                           ;spi.c: 55:     readSPIValue = spiRead();
  1424  001224  EC16  F009         	call	_spiRead	;wreg free
  1425  001228  6E55               	movwf	_readSPIValue^0,c
  1426  00122A  0012               	return		;funcret
  1427  00122C                     __end_of_SPIHandle:
  1428                           	callstack 0
  1429                           
  1430 ;; *************** function _spiRead *****************
  1431 ;; Defined at:
  1432 ;;		line 48 in file "spi.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;		None
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      unsigned char 
  1439 ;; Registers used:
  1440 ;;		wreg, status,2, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1450 ;;Total ram usage:        0 bytes
  1451 ;; Hardware stack levels used: 1
  1452 ;; Hardware stack levels required when called: 1
  1453 ;; This function calls:
  1454 ;;		_spiReceiveWait
  1455 ;; This function is called by:
  1456 ;;		_SPIHandle
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text21
  1461  00122C                     __ptext21:
  1462                           	callstack 0
  1463  00122C                     _spiRead:
  1464                           	callstack 22
  1465  00122C                     
  1466                           ;spi.c: 50:     spiReceiveWait();
  1467  00122C  ECF1  F008         	call	_spiReceiveWait	;wreg free
  1468  001230                     
  1469                           ;spi.c: 51:     return (SSPBUF);
  1470  001230  50C9               	movf	201,w,c	;volatile
  1471  001232  0012               	return		;funcret
  1472  001234                     __end_of_spiRead:
  1473                           	callstack 0
  1474                           
  1475 ;; *************** function _spiReceiveWait *****************
  1476 ;; Defined at:
  1477 ;;		line 31 in file "spi.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;		None
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;		None
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  1    wreg      void 
  1484 ;; Registers used:
  1485 ;;		None
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1495 ;;Total ram usage:        0 bytes
  1496 ;; Hardware stack levels used: 1
  1497 ;; This function calls:
  1498 ;;		Nothing
  1499 ;; This function is called by:
  1500 ;;		_spiRead
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text22
  1505  0011E2                     __ptext22:
  1506                           	callstack 0
  1507  0011E2                     _spiReceiveWait:
  1508                           	callstack 22
  1509  0011E2                     i2l83:
  1510  0011E2  A0C7               	btfss	199,0,c	;volatile
  1511  0011E4  EFF6  F008         	goto	i2u1_41
  1512  0011E8  EFF8  F008         	goto	i2u1_40
  1513  0011EC                     i2u1_41:
  1514  0011EC  EFF1  F008         	goto	i2l83
  1515  0011F0                     i2u1_40:
  1516  0011F0  0012               	return		;funcret
  1517  0011F2                     __end_of_spiReceiveWait:
  1518                           	callstack 0
  1519                           
  1520                           	psect	rparam
  1521  0000                     
  1522                           	psect	temp
  1523  000056                     btemp:
  1524                           	callstack 0
  1525  000056                     	ds	1
  1526  0000                     int$flags	set	btemp
  1527  0000                     wtemp8	set	btemp+1
  1528  0000                     ttemp5	set	btemp+1
  1529  0000                     ttemp6	set	btemp+4
  1530  0000                     ttemp7	set	btemp+8
  1531                           
  1532                           	psect	idloc
  1533                           
  1534                           ;Config register IDLOC0 @ 0x200000
  1535                           ;	unspecified, using default values
  1536  200000                     	org	2097152
  1537  200000  FF                 	db	255
  1538                           
  1539                           ;Config register IDLOC1 @ 0x200001
  1540                           ;	unspecified, using default values
  1541  200001                     	org	2097153
  1542  200001  FF                 	db	255
  1543                           
  1544                           ;Config register IDLOC2 @ 0x200002
  1545                           ;	unspecified, using default values
  1546  200002                     	org	2097154
  1547  200002  FF                 	db	255
  1548                           
  1549                           ;Config register IDLOC3 @ 0x200003
  1550                           ;	unspecified, using default values
  1551  200003                     	org	2097155
  1552  200003  FF                 	db	255
  1553                           
  1554                           ;Config register IDLOC4 @ 0x200004
  1555                           ;	unspecified, using default values
  1556  200004                     	org	2097156
  1557  200004  FF                 	db	255
  1558                           
  1559                           ;Config register IDLOC5 @ 0x200005
  1560                           ;	unspecified, using default values
  1561  200005                     	org	2097157
  1562  200005  FF                 	db	255
  1563                           
  1564                           ;Config register IDLOC6 @ 0x200006
  1565                           ;	unspecified, using default values
  1566  200006                     	org	2097158
  1567  200006  FF                 	db	255
  1568                           
  1569                           ;Config register IDLOC7 @ 0x200007
  1570                           ;	unspecified, using default values
  1571  200007                     	org	2097159
  1572  200007  FF                 	db	255
  1573                           
  1574                           	psect	config
  1575                           
  1576                           ; Padding undefined space
  1577  300000                     	org	3145728
  1578  300000  FF                 	db	255
  1579                           
  1580                           ;Config register CONFIG1H @ 0x300001
  1581                           ;	Oscillator Selection bits
  1582                           ;	OSC = XT, XT oscillator
  1583                           ;	Fail-Safe Clock Monitor Enable bit
  1584                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1585                           ;	Internal/External Oscillator Switchover bit
  1586                           ;	IESO = OFF, Two-Speed Start-up disabled
  1587  300001                     	org	3145729
  1588  300001  01                 	db	1
  1589                           
  1590                           ;Config register CONFIG2L @ 0x300002
  1591                           ;	Power-up Timer Enable bit
  1592                           ;	PWRT = OFF, PWRT disabled
  1593                           ;	Brown-out Reset Enable bits
  1594                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1595                           ;	Brown-out Voltage bits
  1596                           ;	BORV = 3, Minimum setting
  1597  300002                     	org	3145730
  1598  300002  19                 	db	25
  1599                           
  1600                           ;Config register CONFIG2H @ 0x300003
  1601                           ;	Watchdog Timer
  1602                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1603                           ;	Watchdog Timer Postscale Select bits
  1604                           ;	WDTPS = 32768, 1:32768
  1605  300003                     	org	3145731
  1606  300003  1E                 	db	30
  1607                           
  1608                           ;Config register CONFIG3L @ 0x300004
  1609                           ;	Processor Data Memory Mode Select bits
  1610                           ;	MODE = MC, Microcontroller mode
  1611                           ;	Address Bus Width Select bits
  1612                           ;	ADDRBW = ADDR20BIT, 20-bit Address Bus
  1613                           ;	Data Bus Width Select bit
  1614                           ;	DATABW = DATA16BIT, 16-bit External Bus mode
  1615                           ;	External Bus Data Wait Enable bit
  1616                           ;	WAIT = OFF, Wait selections are unavailable for table reads and table writes
  1617  300004                     	org	3145732
  1618  300004  F3                 	db	243
  1619                           
  1620                           ;Config register CONFIG3H @ 0x300005
  1621                           ;	CCP2 MUX bit
  1622                           ;	CCP2MX = PORTC, ECCP2 input/output is multiplexed with RC1
  1623                           ;	ECCP MUX bit
  1624                           ;	ECCPMX = PORTE, ECCP1/3 (P1B/P1C/P3B/P3C) are multiplexed onto RE6, RE5, RE4 and RE3 r
      +                          espectively
  1625                           ;	Low-Power Timer1 Oscillator Enable bit
  1626                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1627                           ;	MCLR Pin Enable bit
  1628                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
  1629  300005                     	org	3145733
  1630  300005  83                 	db	131
  1631                           
  1632                           ;Config register CONFIG4L @ 0x300006
  1633                           ;	Stack Full/Underflow Reset Enable bit
  1634                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1635                           ;	Single-Supply ICSP Enable bit
  1636                           ;	LVP = OFF, Single-Supply ICSP disabled
  1637                           ;	Boot Block Size Select bits
  1638                           ;	BBSIZ = BB2K, 1K word (2 Kbytes) Boot Block size
  1639                           ;	Extended Instruction Set Enable bit
  1640                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1641                           ;	Background Debugger Enable bit
  1642                           ;	DEBUG = 0x1, unprogrammed default
  1643  300006                     	org	3145734
  1644  300006  81                 	db	129
  1645                           
  1646                           ; Padding undefined space
  1647  300007                     	org	3145735
  1648  300007  FF                 	db	255
  1649                           
  1650                           ;Config register CONFIG5L @ 0x300008
  1651                           ;	Code Protection bit Block 0
  1652                           ;	CP0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not code-protected
  1653                           ;	Code Protection bit Block 1
  1654                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1655                           ;	Code Protection bit Block 2
  1656                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1657                           ;	Code Protection bit Block 3
  1658                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1659                           ;	Code Protection bit Block 4
  1660                           ;	CP4 = OFF, Block 4 (010000-013FFFh) not code-protected
  1661                           ;	Code Protection bit Block 5
  1662                           ;	CP5 = OFF, Block 5 (014000-017FFFh) not code-protected
  1663                           ;	Code Protection bit Block 6
  1664                           ;	CP6 = OFF, Block 6 (01BFFF-018000h) not code-protected
  1665                           ;	Code Protection bit Block 7
  1666                           ;	CP7 = OFF, Block 7 (01C000-01FFFFh) not code-protected
  1667  300008                     	org	3145736
  1668  300008  FF                 	db	255
  1669                           
  1670                           ;Config register CONFIG5H @ 0x300009
  1671                           ;	Boot Block Code Protection bit
  1672                           ;	CPB = OFF, Boot Block (000000-0007FFh) not code-protected
  1673                           ;	Data EEPROM Code Protection bit
  1674                           ;	CPD = OFF, Data EEPROM not code-protected
  1675  300009                     	org	3145737
  1676  300009  C0                 	db	192
  1677                           
  1678                           ;Config register CONFIG6L @ 0x30000A
  1679                           ;	Write Protection bit Block 0
  1680                           ;	WRT0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not write-protected
  1681                           ;	Write Protection bit Block 1
  1682                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1683                           ;	Write Protection bit Block 2
  1684                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1685                           ;	Write Protection bit Block 3
  1686                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1687                           ;	Write Protection bit Block 4
  1688                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  1689                           ;	Write Protection bit Block 5
  1690                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  1691                           ;	Write Protection bit Block 6
  1692                           ;	WRT6 = OFF, Block 6 (01BFFF-018000h) not write-protected
  1693                           ;	Write Protection bit Block 7
  1694                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  1695  30000A                     	org	3145738
  1696  30000A  FF                 	db	255
  1697                           
  1698                           ;Config register CONFIG6H @ 0x30000B
  1699                           ;	Configuration Register Write Protection bit
  1700                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1701                           ;	Boot Block Write Protection bit
  1702                           ;	WRTB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not write-protected
  1703                           ;	Data EEPROM Write Protection bit
  1704                           ;	WRTD = OFF, Data EEPROM not write-protected
  1705  30000B                     	org	3145739
  1706  30000B  E0                 	db	224
  1707                           
  1708                           ;Config register CONFIG7L @ 0x30000C
  1709                           ;	Table Read Protection bit Block 0
  1710                           ;	EBTR0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not protected from table reads
      +                           executed in other blocks
  1711                           ;	Table Read Protection bit Block 1
  1712                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1713                           ;	Table Read Protection bit Block 2
  1714                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1715                           ;	Table Read Protection bit Block 3
  1716                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1717                           ;	Table Read Protection bit Block 4
  1718                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  1719                           ;	Table Read Protection bit Block 5
  1720                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  1721                           ;	Table Read Protection bit Block 6
  1722                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  1723                           ;	Table Read Protection bit Block 7
  1724                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  1725  30000C                     	org	3145740
  1726  30000C  FF                 	db	255
  1727                           
  1728                           ;Config register CONFIG7H @ 0x30000D
  1729                           ;	Boot Block Table Read Protection bit
  1730                           ;	EBTRB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not protected from table re
      +                          ads executed in other blocks
  1731  30000D                     	org	3145741
  1732  30000D  40                 	db	64
  1733                           tosu	equ	0xFFF
  1734                           tosh	equ	0xFFE
  1735                           tosl	equ	0xFFD
  1736                           stkptr	equ	0xFFC
  1737                           pclatu	equ	0xFFB
  1738                           pclath	equ	0xFFA
  1739                           pcl	equ	0xFF9
  1740                           tblptru	equ	0xFF8
  1741                           tblptrh	equ	0xFF7
  1742                           tblptrl	equ	0xFF6
  1743                           tablat	equ	0xFF5
  1744                           prodh	equ	0xFF4
  1745                           prodl	equ	0xFF3
  1746                           indf0	equ	0xFEF
  1747                           postinc0	equ	0xFEE
  1748                           postdec0	equ	0xFED
  1749                           preinc0	equ	0xFEC
  1750                           plusw0	equ	0xFEB
  1751                           fsr0h	equ	0xFEA
  1752                           fsr0l	equ	0xFE9
  1753                           wreg	equ	0xFE8
  1754                           indf1	equ	0xFE7
  1755                           postinc1	equ	0xFE6
  1756                           postdec1	equ	0xFE5
  1757                           preinc1	equ	0xFE4
  1758                           plusw1	equ	0xFE3
  1759                           fsr1h	equ	0xFE2
  1760                           fsr1l	equ	0xFE1
  1761                           bsr	equ	0xFE0
  1762                           indf2	equ	0xFDF
  1763                           postinc2	equ	0xFDE
  1764                           postdec2	equ	0xFDD
  1765                           preinc2	equ	0xFDC
  1766                           plusw2	equ	0xFDB
  1767                           fsr2h	equ	0xFDA
  1768                           fsr2l	equ	0xFD9
  1769                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    80
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      85
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_buttonCallback

Critical Paths under _service in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _service in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _service in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _service in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _service in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _service in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _service in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _service in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _service in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _service in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _service in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _service in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _service in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _service in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _service in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _service in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _service in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                80    80      0       0
                                              1 COMRAM    80    80      0
                     _buttonCallback
               _displayRequestHandle
                     _serialCallback
                      _setInterrupts
                              _setIo
                    _setSPIInterrupt
                          _setSerial
                        _setSerialIo
                 _setSwitchInterrput
                     _setupDisplayIo
 ---------------------------------------------------------------------------------
 (1) _setupDisplayIo                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSwitchInterrput                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSerialIo                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSerial                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSPIInterrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setIo                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setInterrupts                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _serialCallback                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displayRequestHandle                                 0     0      0       0
                         _displaySPI
                      _displaySerial
 ---------------------------------------------------------------------------------
 (2) _displaySerial                                        0     0      0       0
                    _displayCallback
 ---------------------------------------------------------------------------------
 (2) _displaySPI                                           0     0      0       0
                    _displayCallback
 ---------------------------------------------------------------------------------
 (3) _displayCallback                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttonCallback                                       1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _service                                              0     0      0       0
                   _interruptService
 ---------------------------------------------------------------------------------
 (5) _interruptService                                     0     0      0       0
            _processInterruptService
 ---------------------------------------------------------------------------------
 (6) _processInterruptService                              0     0      0       0
                          _SPIHandle
                       _buttonHandle
                       _serialHandle
 ---------------------------------------------------------------------------------
 (7) _serialHandle                                         0     0      0       0
                         _readSerial
 ---------------------------------------------------------------------------------
 (8) _readSerial                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _buttonHandle                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _SPIHandle                                            0     0      0       0
                            _spiRead
 ---------------------------------------------------------------------------------
 (8) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (9) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _buttonCallback
   _displayRequestHandle
     _displaySPI
       _displayCallback
     _displaySerial
       _displayCallback
   _serialCallback
   _setInterrupts
   _setIo
   _setSPIInterrupt
   _setSerial
   _setSerialIo
   _setSwitchInterrput
   _setupDisplayIo

 _service (ROOT)
   _interruptService
     _processInterruptService
       _SPIHandle
         _spiRead
           _spiReceiveWait
       _buttonHandle
       _serialHandle
         _readSerial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      55       1       90.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      55      32        0.0%
DATA                 0      0      55       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jul  4 12:51:54 2021

        ?_processInterruptService 0001                       _SSPSTATbits 000FC7  
                              l75 1244                                u90 1190  
                              u91 118C                               l122 1238  
                             l116 1260                               l119 124A  
                             l216 1180                               l242 120E  
                             l251 1256                               l236 11FA  
                             l245 119A                               l190 11E0  
                             l239 1204                               l248 11AE  
                             l193 123E                               l196 1250  
                             l947 1252                               l981 120A  
                             l975 11FC                               l991 11CA  
                             l977 1200                               l985 125E  
                             l993 11CC                               l979 1206  
                             l987 1240                               l995 11D0  
                             _GIE 007F97                               l997 11D2  
                             l989 123A                               l999 11D4  
                             u100 11A8                               u101 11A4  
                             u110 114C                               u111 1146  
                             u120 1160                               u112 114E  
                             u121 115A                               u130 1172  
                             u122 1162                               u131 116E  
                             u150 10EE                               u160 1106  
                             u145 117A                               u161 1102  
                             u170 111A                               u147 117C  
                             u171 1116                               u180 112E  
                             u181 112A                               wreg 000FE8  
                  ?_displaySerial 0001            ??_displayRequestHandle 0001  
                            l1001 11D6                              l1011 1246  
                            l1003 11D8                              l1021 11AC  
                            l1013 1182                              l1005 11DA  
                            l1015 1190                              l1023 124C  
                            l1007 11F2                              l1025 113C  
                            l1017 1194                              l1009 1234  
                            l1041 10F8                              l1033 10C8  
                            l1027 1172                              l1019 11A8  
                            l1051 111E                              l1043 1106  
                            l1035 10D4                              l1029 117C  
                            l1053 1120                              l1045 110A  
                            l1037 10D8                              l1055 112E  
                            l1047 110C                              l1039 10E4  
                            l1057 1132                              l1049 111A  
                            _PEIE 007F96                              i2l35 1216  
                            i2l83 11E2                              i2l86 11F0  
                            i2l97 1232                              _main 10C8  
                            btemp 0056                              start 000E  
                    ___param_bank 000000          __end_of_interruptService 125E  
              _setSwitchInterrput 1234                             ?_main 0001  
                           _BRGH1 007D62                             _CREN1 007D5C  
                           _FLAGS 0054                             _LATC0 007C58  
                           _RC1IE 007CED                             _RC1IF 007CF5  
             ?_setSwitchInterrput 0001                             i2l100 122A  
                           i2l208 1264                             i2l152 10C6  
                           i2l219 1268                             i2l155 125C  
                           i2l199 1222                             i2l931 1230  
                           i2l941 121A                             i2l927 11E2  
                           i2l935 1262                             i2l943 121C  
                           i2l951 1060                             i2l929 122C  
                           i2l945 1266                             i2l961 1090  
                           i2l953 106E                             i2l939 1224  
                           i2l971 10C0                             i2l963 109E  
                           i2l955 1072                             i2l973 10C4  
                           i2l965 10A2                             i2l957 1074  
                           i2l949 1052                             i2l959 1082  
                           i2l967 10A4                             i2l983 1258  
                           i2l969 10B2                             _SPEN1 007D5F  
                           _SPBRG 000FAF                             _PORTD 000F83  
                           _TRISD 000F95                             _SSPIE 007CEB  
                           _SSPIF 007CF3                             _TXEN1 007D65  
                           _SYNC1 007D64                             _setIo 125E  
                ?_displayCallback 0001                __size_of_SPIHandle 0008  
                 __end_of_spiRead 1234                             tablat 000FF5  
                 __end_of_service 121A                             ttemp5 0057  
                           ttemp6 005A                             ttemp7 005E  
                           status 000FD8             __end_of_setInterrupts 124C  
                           wtemp8 0057              ??_setSwitchInterrput 0001  
                ??_setupDisplayIo 0001                   __initialization 11B0  
                    __end_of_main 113C                   _readSerialValue 0053  
                          ??_main 0002                     __activetblptr 000001  
                 ??_displaySerial 0001                      ?_setSerialIo 0001  
                          ?_setIo 0001                     ?_buttonHandle 0001  
                          _INT0IE 007F94                            _INT0IF 007F91  
                          i2l1031 1212                            _RCREG1 000FAE  
                          i2u1_40 11F0                            i2u1_41 11EC  
                          i2u2_40 1060                            i2u2_41 105C  
                          i2u3_40 106E                            i2u3_41 106A  
                          i2u4_40 1082                            i2u4_41 107E  
                          i2u5_40 1090                            i2u5_41 108C  
                          i2u6_40 109E                            i2u6_41 109A  
                          i2u7_40 10B2                            i2u7_41 10AE  
                          i2u8_40 10C0                            i2u8_41 10BC  
                          _TRISB0 007C98                            _TRISC2 007CA2  
                          _TRISC3 007CA3                            _TRISC4 007CA4  
                          _TRISC5 007CA5                            _TRISC6 007CA6  
                          _TRISC7 007CA7                            _SSPBUF 000FC9  
                          _TXREG1 000FAD                 __end_of_SPIHandle 122C  
         __size_of_serialCallback 0006                            isa$std 000001  
                    __mediumconst 0000                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                       ??_spiRead 0001                         ??_service 0001  
                  ??_buttonHandle 0001                        __accesstop 0060  
         __end_of__initialization 11B8                     ___rparam_used 000001  
                  __pcstackCOMRAM 0001                     __end_of_setIo 1262  
        __size_of_setSPIInterrupt 0006  __size_of_processInterruptService 0076  
                         ??_setIo 0001                 ?_interruptService 0001  
         __size_of_spiReceiveWait 0010                __size_of_setSerial 0018  
              ??_interruptService 0001                           _INTEDG0 007F8E  
                      _displaySPI 1206                           _SSPSTAT 000FC7  
         __size_of_buttonCallback 0046              __size_of_setSerialIo 0006  
   __size_of_displayRequestHandle 002E                     ?_serialHandle 0001  
                         __Hparam 0000                           __Lparam 0000  
                      _readSerial 1262              __end_of_buttonHandle 126A  
                    __psmallconst 1000                    _serialCallback 124C  
                         __pcinit 11B0                           __ramtop 1000  
                         __ptext0 10C8                           __ptext1 11F2  
                         __ptext2 1234                           __ptext3 123A  
                         __ptext4 11CA                           __ptext5 1240  
                         __ptext6 125E                           __ptext7 1246  
                         __ptext8 124C                           __ptext9 1182  
                         _spiRead 122C                           _service 0008  
                  __pintcode_body 1210              end_of_initialization 11B8  
               __end_of_setSerial 11E2                    ??_serialHandle 0001  
                         int_func 1210                 ??_setSPIInterrupt 0001  
     __size_of_setSwitchInterrput 0006                 __end_ofmain@F4613 1051  
        __size_of_displayCallback 0006            __end_of_serialCallback 1252  
                         postinc2 000FDE            __size_of_setInterrupts 0006  
                       _SPIHandle 1224           _processInterruptService 1052  
                     ?_displaySPI 0001             __end_of_displaySerial 1206  
                 ?_serialCallback 0001                    _spiReceiveWait 11E2  
                     ?_readSerial 0001           __size_of_setupDisplayIo 000A  
                      ?_SPIHandle 0001               start_initialization 11B0  
                  _buttonCallback 113C                     _setInterrupts 1246  
                    _readSPIValue 0055             __size_of_buttonHandle 0004  
          __end_of_spiReceiveWait 11F2               __size_of_displaySPI 000A  
               ??_displayCallback 0001              __end_of_serialHandle 1224  
       ??_processInterruptService 0001                       __pbssCOMRAM 0052  
          __end_of_buttonCallback 1182         __size_of_interruptService 0006  
                    _buttonHandle 1266               __size_of_readSerial 0004  
                  ?_setInterrupts 0001                   ?_spiReceiveWait 0001  
                       __pintcode 0008      __end_of_displayRequestHandle 11B0  
                     __smallconst 1000                       ??_SPIHandle 0001  
                 _setSPIInterrupt 1240                          ?_spiRead 0001  
                 ?_buttonCallback 0001                          ?_service 0001  
                   ??_setSerialIo 0001                    __size_of_setIo 0004  
 __end_of_processInterruptService 10C8                         _setSerial 11CA  
                       main@F4613 1001                          _SSP1CON1 000FC6  
                  _setupDisplayIo 11F2                      ??_displaySPI 0001  
                 ??_setInterrupts 0001        __end_of_setSwitchInterrput 123A  
             __end_of_setSerialIo 1240                  ??_serialCallback 0001  
                      ?_setSerial 0001                          __Hrparam 0000  
                        __Lrparam 0000                      __Lsmallconst 1000  
          __end_of_setupDisplayIo 11FC             __size_of_serialHandle 000A  
                    ??_readSerial 0001                __end_of_displaySPI 1210  
         __end_of_setSPIInterrupt 1246                  _interruptService 1258  
                        __ptext10 11FC                          __ptext11 1206  
                        __ptext20 1224                          __ptext12 1252  
                        __ptext21 122C                          __ptext13 113C  
                        __ptext22 11E2                          __ptext15 1258  
                        __ptext16 1052                          __ptext17 121A  
                        __ptext18 1262                          __ptext19 1266  
                __size_of_spiRead 0008                  __size_of_service 1212  
            _displayRequestHandle 1182                __end_of_readSerial 1266  
                   __size_of_main 0074                      _serialHandle 121A  
                 _displayCallback 1252                          isa$xinst 000000  
                 ?_setupDisplayIo 0001                          _outValue 0052  
                        int$flags 0056            __size_of_displaySerial 000A  
                        main@test 0002                       _setSerialIo 123A  
                        intlevel2 0000             ?_displayRequestHandle 0001  
                ??_spiReceiveWait 0001                       ??_setSerial 0001  
                ?_setSPIInterrupt 0001                  ??_buttonCallback 0001  
                   _displaySerial 11FC           __end_of_displayCallback 1258  
