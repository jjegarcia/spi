

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon May 24 22:22:38 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F8722 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     _TRISD	set	3989
    60  0000                     _PORTD	set	3971
    61  0000                     _RC0	set	31760
    62  0000                     _TRISC0	set	31904
    63  0000                     _TRISC3	set	31907
    64  0000                     _TRISC5	set	31909
    65  0000                     _SSPBUF	set	4041
    66  0000                     _SSPSTATbits	set	4039
    67  0000                     _SSP1CON1	set	4038
    68  0000                     _SSPSTAT	set	4039
    69  0000                     _SSPIE	set	31979
    70  0000                     _SSPIF	set	31987
    71  0000                     _PEIE	set	32662
    72  0000                     _GIE	set	32663
    73                           
    74                           ; #config settings
    75                           
    76                           	psect	cinit
    77  0000AA                     __pcinit:
    78                           	callstack 0
    79  0000AA                     start_initialization:
    80                           	callstack 0
    81  0000AA                     __initialization:
    82                           	callstack 0
    83                           
    84                           ; Clear objects allocated to COMRAM (2 bytes)
    85  0000AA  6A07               	clrf	(__pbssCOMRAM+1)& (0+255),c
    86  0000AC  6A06               	clrf	__pbssCOMRAM& (0+255),c
    87  0000AE                     end_of_initialization:
    88                           	callstack 0
    89  0000AE                     __end_of__initialization:
    90                           	callstack 0
    91  0000AE  9008               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    92  0000B0  9208               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    93  0000B2  0100               	movlb	0
    94  0000B4  EF09  F000         	goto	_main	;jump to C main() function
    95                           
    96                           	psect	bssCOMRAM
    97  000006                     __pbssCOMRAM:
    98                           	callstack 0
    99  000006                     _readValue:
   100                           	callstack 0
   101  000006                     	ds	1
   102  000007                     _FLAGS:
   103                           	callstack 0
   104  000007                     	ds	1
   105                           
   106                           	psect	cstackCOMRAM
   107  000001                     __pcstackCOMRAM:
   108                           	callstack 0
   109  000001                     spiService@test:
   110                           	callstack 0
   111                           
   112                           ; 1 bytes @ 0x0
   113  000001                     	ds	1
   114  000002                     spiInit@sDataSample:
   115                           	callstack 0
   116  000002                     spiWrite@dat:
   117                           	callstack 0
   118                           
   119                           ; 1 bytes @ 0x1
   120  000002                     	ds	1
   121  000003                     spiInit@sClockIdle:
   122                           	callstack 0
   123                           
   124                           ; 1 bytes @ 0x2
   125  000003                     	ds	1
   126  000004                     spiInit@sTransmitEdge:
   127                           	callstack 0
   128                           
   129                           ; 1 bytes @ 0x3
   130  000004                     	ds	1
   131  000005                     spiInit@sType:
   132                           	callstack 0
   133                           
   134                           ; 1 bytes @ 0x4
   135  000005                     	ds	1
   136  000006                     
   137                           ; 1 bytes @ 0x5
   138 ;;
   139 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   140 ;;
   141 ;; *************** function _main *****************
   142 ;; Defined at:
   143 ;;		line 19 in file "newmain.c"
   144 ;; Parameters:    Size  Location     Type
   145 ;;		None
   146 ;; Auto vars:     Size  Location     Type
   147 ;;		None
   148 ;; Return value:  Size  Location     Type
   149 ;;                  1    wreg      void 
   150 ;; Registers used:
   151 ;;		wreg, status,2, status,0, cstack
   152 ;; Tracked objects:
   153 ;;		On entry : 0/0
   154 ;;		On exit  : 0/0
   155 ;;		Unchanged: 0/0
   156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   161 ;;Total ram usage:        0 bytes
   162 ;; Hardware stack levels required when called: 6
   163 ;; This function calls:
   164 ;;		_setInterrupts
   165 ;;		_setIo
   166 ;;		_spiInit
   167 ;;		_spiWrite
   168 ;; This function is called by:
   169 ;;		Startup code after reset
   170 ;; This function uses a non-reentrant model
   171 ;;
   172                           
   173                           	psect	text0
   174  000012                     __ptext0:
   175                           	callstack 0
   176  000012                     _main:
   177                           	callstack 25
   178  000012                     
   179                           ;newmain.c: 20:     setIo();
   180  000012  EC5C  F000         	call	_setIo	;wreg free
   181  000016                     
   182                           ;newmain.c: 21:     setInterrupts();
   183  000016  EC61  F000         	call	_setInterrupts	;wreg free
   184  00001A                     
   185                           ;newmain.c: 23:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   186  00001A  0E00               	movlw	0
   187  00001C  6E02               	movwf	spiInit@sDataSample^0,c
   188  00001E  0E00               	movlw	0
   189  000020  6E03               	movwf	spiInit@sClockIdle^0,c
   190  000022  0E00               	movlw	0
   191  000024  6E04               	movwf	spiInit@sTransmitEdge^0,c
   192  000026  0E24               	movlw	36
   193  000028  EC27  F000         	call	_spiInit
   194  00002C                     l861:
   195                           
   196                           ;newmain.c: 27:         if (FLAGS.ByteBits.DISPLAY_READING) {
   197  00002C  A207               	btfss	_FLAGS^0,1,c
   198  00002E  EF1B  F000         	goto	u61
   199  000032  EF1D  F000         	goto	u60
   200  000036                     u61:
   201  000036  EF16  F000         	goto	l861
   202  00003A                     u60:
   203  00003A                     
   204                           ;newmain.c: 28:             PORTD = readValue;
   205  00003A  0E00               	movlw	0
   206  00003C  6E83               	movwf	131,c	;volatile
   207  00003E                     
   208                           ;newmain.c: 29:             FLAGS.ByteBits.DISPLAY_READING = 0;
   209  00003E  9207               	bcf	_FLAGS^0,1,c
   210  000040                     
   211                           ;newmain.c: 31:                         spiWrite(0b00001111);
   212  000040  0E0F               	movlw	15
   213  000042  EC6B  F000         	call	_spiWrite
   214  000046  EF16  F000         	goto	l861
   215  00004A  EF07  F000         	goto	start
   216  00004E                     __end_of_main:
   217                           	callstack 0
   218                           
   219 ;; *************** function _spiWrite *****************
   220 ;; Defined at:
   221 ;;		line 30 in file "spi.c"
   222 ;; Parameters:    Size  Location     Type
   223 ;;  dat             1    wreg     unsigned char 
   224 ;; Auto vars:     Size  Location     Type
   225 ;;  dat             1    1[COMRAM] unsigned char 
   226 ;; Return value:  Size  Location     Type
   227 ;;                  1    wreg      void 
   228 ;; Registers used:
   229 ;;		wreg
   230 ;; Tracked objects:
   231 ;;		On entry : 0/0
   232 ;;		On exit  : 0/0
   233 ;;		Unchanged: 0/0
   234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   236 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   238 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   239 ;;Total ram usage:        1 bytes
   240 ;; Hardware stack levels used: 1
   241 ;; Hardware stack levels required when called: 5
   242 ;; This function calls:
   243 ;;		Nothing
   244 ;; This function is called by:
   245 ;;		_main
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249                           	psect	text1
   250  0000D6                     __ptext1:
   251                           	callstack 0
   252  0000D6                     _spiWrite:
   253                           	callstack 25
   254                           
   255                           ;incstack = 0
   256                           ;spiWrite@dat stored from wreg
   257  0000D6  6E02               	movwf	spiWrite@dat^0,c
   258  0000D8                     
   259                           ;spi.c: 30: void spiWrite(char dat);spi.c: 31: {;spi.c: 32:     SSPBUF = dat;
   260  0000D8  C002  FFC9         	movff	spiWrite@dat,4041	;volatile
   261  0000DC  0012               	return		;funcret
   262  0000DE                     __end_of_spiWrite:
   263                           	callstack 0
   264                           
   265 ;; *************** function _spiInit *****************
   266 ;; Defined at:
   267 ;;		line 8 in file "spi.c"
   268 ;; Parameters:    Size  Location     Type
   269 ;;  sType           1    wreg     enum E4544
   270 ;;  sDataSample     1    1[COMRAM] enum E4552
   271 ;;  sClockIdle      1    2[COMRAM] enum E4556
   272 ;;  sTransmitEdg    1    3[COMRAM] enum E4560
   273 ;; Auto vars:     Size  Location     Type
   274 ;;  sType           1    4[COMRAM] enum E4544
   275 ;; Return value:  Size  Location     Type
   276 ;;                  1    wreg      void 
   277 ;; Registers used:
   278 ;;		wreg, status,2, status,0
   279 ;; Tracked objects:
   280 ;;		On entry : 0/0
   281 ;;		On exit  : 0/0
   282 ;;		Unchanged: 0/0
   283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   284 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   285 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   287 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   288 ;;Total ram usage:        4 bytes
   289 ;; Hardware stack levels used: 1
   290 ;; Hardware stack levels required when called: 5
   291 ;; This function calls:
   292 ;;		Nothing
   293 ;; This function is called by:
   294 ;;		_main
   295 ;; This function uses a non-reentrant model
   296 ;;
   297                           
   298                           	psect	text2
   299  00004E                     __ptext2:
   300                           	callstack 0
   301  00004E                     _spiInit:
   302                           	callstack 25
   303                           
   304                           ;incstack = 0
   305                           ;spiInit@sType stored from wreg
   306  00004E  6E05               	movwf	spiInit@sType^0,c
   307  000050                     
   308                           ;spi.c: 9:     TRISC5 = 0;
   309  000050  9A94               	bcf	3988,5,c	;volatile
   310  000052                     
   311                           ;spi.c: 11:     if (sType & 0b00000100)
   312  000052  A405               	btfss	spiInit@sType^0,2,c
   313  000054  EF2E  F000         	goto	u51
   314  000058  EF30  F000         	goto	u50
   315  00005C                     u51:
   316  00005C  EF37  F000         	goto	l847
   317  000060                     u50:
   318  000060                     
   319                           ;spi.c: 12:     {;spi.c: 13:         SSPSTAT = sTransmitEdge;
   320  000060  C004  FFC7         	movff	spiInit@sTransmitEdge,4039	;volatile
   321                           
   322                           ;spi.c: 14:         TRISC3 = 1;
   323  000064  8694               	bsf	3988,3,c	;volatile
   324                           
   325                           ;spi.c: 15:         TRISC0 = 0;
   326  000066  9094               	bcf	3988,0,c	;volatile
   327                           
   328                           ;spi.c: 16:         RC0 = 1;
   329  000068  8082               	bsf	3970,0,c	;volatile
   330                           
   331                           ;spi.c: 17:     } else
   332  00006A  EF3C  F000         	goto	l853
   333  00006E                     l847:
   334                           
   335                           ;spi.c: 18:     {;spi.c: 19:         SSPSTAT = sDataSample | sTransmitEdge;
   336  00006E  5002               	movf	spiInit@sDataSample^0,w,c
   337  000070  1004               	iorwf	spiInit@sTransmitEdge^0,w,c
   338  000072  6EC7               	movwf	199,c	;volatile
   339  000074                     
   340                           ;spi.c: 20:         TRISC3 = 0;
   341  000074  9694               	bcf	3988,3,c	;volatile
   342  000076                     
   343                           ;spi.c: 21:         TRISC0 = 1;
   344  000076  8094               	bsf	3988,0,c	;volatile
   345  000078                     l853:
   346                           
   347                           ;spi.c: 23:     SSP1CON1 = 0b00100101;
   348  000078  0E25               	movlw	37
   349  00007A  6EC6               	movwf	198,c	;volatile
   350  00007C  0012               	return		;funcret
   351  00007E                     __end_of_spiInit:
   352                           	callstack 0
   353                           
   354 ;; *************** function _setIo *****************
   355 ;; Defined at:
   356 ;;		line 8 in file "init.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;		None
   361 ;; Return value:  Size  Location     Type
   362 ;;                  1    wreg      void 
   363 ;; Registers used:
   364 ;;		wreg, status,2
   365 ;; Tracked objects:
   366 ;;		On entry : 0/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   374 ;;Total ram usage:        0 bytes
   375 ;; Hardware stack levels used: 1
   376 ;; Hardware stack levels required when called: 5
   377 ;; This function calls:
   378 ;;		Nothing
   379 ;; This function is called by:
   380 ;;		_main
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           	psect	text3
   385  0000B8                     __ptext3:
   386                           	callstack 0
   387  0000B8                     _setIo:
   388                           	callstack 25
   389  0000B8                     
   390                           ;init.c: 10:     TRISD = 0x00;
   391  0000B8  0E00               	movlw	0
   392  0000BA  6E95               	movwf	149,c	;volatile
   393                           
   394                           ;init.c: 11:     PORTD = 0x00;
   395  0000BC  0E00               	movlw	0
   396  0000BE  6E83               	movwf	131,c	;volatile
   397  0000C0  0012               	return		;funcret
   398  0000C2                     __end_of_setIo:
   399                           	callstack 0
   400                           
   401 ;; *************** function _setInterrupts *****************
   402 ;; Defined at:
   403 ;;		line 14 in file "init.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;		None
   406 ;; Auto vars:     Size  Location     Type
   407 ;;		None
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		None
   412 ;; Tracked objects:
   413 ;;		On entry : 0/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   421 ;;Total ram usage:        0 bytes
   422 ;; Hardware stack levels used: 1
   423 ;; Hardware stack levels required when called: 5
   424 ;; This function calls:
   425 ;;		Nothing
   426 ;; This function is called by:
   427 ;;		_main
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           	psect	text4
   432  0000C2                     __ptext4:
   433                           	callstack 0
   434  0000C2                     _setInterrupts:
   435                           	callstack 25
   436  0000C2                     
   437                           ;init.c: 15:     GIE = 1;
   438  0000C2  8EF2               	bsf	4082,7,c	;volatile
   439                           
   440                           ;init.c: 16:     PEIE = 1;
   441  0000C4  8CF2               	bsf	4082,6,c	;volatile
   442                           
   443                           ;init.c: 17:     SSPIF = 0;
   444  0000C6  969E               	bcf	3998,3,c	;volatile
   445                           
   446                           ;init.c: 18:     SSPIE = 1;
   447  0000C8  869D               	bsf	3997,3,c	;volatile
   448  0000CA  0012               	return		;funcret
   449  0000CC                     __end_of_setInterrupts:
   450                           	callstack 0
   451                           
   452 ;; *************** function _service *****************
   453 ;; Defined at:
   454 ;;		line 15 in file "newmain.c"
   455 ;; Parameters:    Size  Location     Type
   456 ;;		None
   457 ;; Auto vars:     Size  Location     Type
   458 ;;		None
   459 ;; Return value:  Size  Location     Type
   460 ;;                  1    wreg      void 
   461 ;; Registers used:
   462 ;;		wreg, status,2, cstack
   463 ;; Tracked objects:
   464 ;;		On entry : 0/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   472 ;;Total ram usage:        0 bytes
   473 ;; Hardware stack levels used: 1
   474 ;; Hardware stack levels required when called: 4
   475 ;; This function calls:
   476 ;;		_interruptService
   477 ;; This function is called by:
   478 ;;		Interrupt level 2
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           
   482                           	psect	intcode
   483  000008                     __pintcode:
   484                           	callstack 0
   485  000008                     _service:
   486                           	callstack 25
   487                           
   488                           ;incstack = 0
   489  000008  8208               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   490  00000A  ED66  F000         	call	int_func,f	;refresh shadow registers
   491                           
   492                           	psect	intcode_body
   493  0000CC                     __pintcode_body:
   494                           	callstack 25
   495  0000CC                     int_func:
   496                           	callstack 25
   497  0000CC  0006               	pop		; remove dummy address from shadow register refresh
   498  0000CE                     
   499                           ;newmain.c: 16:     interruptService();
   500  0000CE  EC73  F000         	call	_interruptService	;wreg free
   501  0000D2  9208               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   502  0000D4  0011               	retfie		f
   503  0000D6                     __end_of_service:
   504                           	callstack 0
   505                           
   506 ;; *************** function _interruptService *****************
   507 ;; Defined at:
   508 ;;		line 11 in file "interruptService.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;		None
   511 ;; Auto vars:     Size  Location     Type
   512 ;;		None
   513 ;; Return value:  Size  Location     Type
   514 ;;                  1    wreg      void 
   515 ;; Registers used:
   516 ;;		wreg, status,2, cstack
   517 ;; Tracked objects:
   518 ;;		On entry : 0/0
   519 ;;		On exit  : 0/0
   520 ;;		Unchanged: 0/0
   521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   526 ;;Total ram usage:        0 bytes
   527 ;; Hardware stack levels used: 1
   528 ;; Hardware stack levels required when called: 3
   529 ;; This function calls:
   530 ;;		_spiService
   531 ;; This function is called by:
   532 ;;		_service
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           	psect	text6
   537  0000E6                     __ptext6:
   538                           	callstack 0
   539  0000E6                     _interruptService:
   540                           	callstack 25
   541  0000E6                     
   542                           ;interruptService.c: 12:     spiService();
   543  0000E6  EC3F  F000         	call	_spiService	;wreg free
   544  0000EA  0012               	return		;funcret
   545  0000EC                     __end_of_interruptService:
   546                           	callstack 0
   547                           
   548 ;; *************** function _spiService *****************
   549 ;; Defined at:
   550 ;;		line 15 in file "interruptService.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;  test            1    0[COMRAM] unsigned char 
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, status,2, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;Total ram usage:        1 bytes
   569 ;; Hardware stack levels used: 1
   570 ;; Hardware stack levels required when called: 2
   571 ;; This function calls:
   572 ;;		_spiRead
   573 ;; This function is called by:
   574 ;;		_interruptService
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           	psect	text7
   579  00007E                     __ptext7:
   580                           	callstack 0
   581  00007E                     _spiService:
   582                           	callstack 25
   583  00007E                     
   584                           ;interruptService.c: 16:     if (SSPIF == 1) {
   585  00007E  A69E               	btfss	3998,3,c	;volatile
   586  000080  EF44  F000         	goto	i2u2_41
   587  000084  EF46  F000         	goto	i2u2_40
   588  000088                     i2u2_41:
   589  000088  EF4C  F000         	goto	i2l105
   590  00008C                     i2u2_40:
   591  00008C                     
   592                           ;interruptService.c: 17:         SSPIF = 0;
   593  00008C  969E               	bcf	3998,3,c	;volatile
   594  00008E                     
   595                           ;interruptService.c: 19:         char test=spiRead();
   596  00008E  EC6F  F000         	call	_spiRead	;wreg free
   597  000092  6E01               	movwf	spiService@test^0,c
   598  000094                     
   599                           ;interruptService.c: 20:         PORTD=test;
   600  000094  C001  FF83         	movff	spiService@test,3971	;volatile
   601  000098                     i2l105:
   602  000098  0012               	return		;funcret
   603  00009A                     __end_of_spiService:
   604                           	callstack 0
   605                           
   606 ;; *************** function _spiRead *****************
   607 ;; Defined at:
   608 ;;		line 43 in file "spi.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      unsigned char 
   615 ;; Registers used:
   616 ;;		wreg, status,2, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   626 ;;Total ram usage:        0 bytes
   627 ;; Hardware stack levels used: 1
   628 ;; Hardware stack levels required when called: 1
   629 ;; This function calls:
   630 ;;		_spiReceiveWait
   631 ;; This function is called by:
   632 ;;		_spiService
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           	psect	text8
   637  0000DE                     __ptext8:
   638                           	callstack 0
   639  0000DE                     _spiRead:
   640                           	callstack 25
   641  0000DE                     
   642                           ;spi.c: 45:     spiReceiveWait();
   643  0000DE  EC4D  F000         	call	_spiReceiveWait	;wreg free
   644  0000E2                     
   645                           ;spi.c: 46:     return (SSPBUF);
   646  0000E2  50C9               	movf	201,w,c	;volatile
   647  0000E4  0012               	return		;funcret
   648  0000E6                     __end_of_spiRead:
   649                           	callstack 0
   650                           
   651 ;; *************** function _spiReceiveWait *****************
   652 ;; Defined at:
   653 ;;		line 26 in file "spi.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;		None
   656 ;; Auto vars:     Size  Location     Type
   657 ;;		None
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      void 
   660 ;; Registers used:
   661 ;;		None
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   671 ;;Total ram usage:        0 bytes
   672 ;; Hardware stack levels used: 1
   673 ;; This function calls:
   674 ;;		Nothing
   675 ;; This function is called by:
   676 ;;		_spiRead
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680                           	psect	text9
   681  00009A                     __ptext9:
   682                           	callstack 0
   683  00009A                     _spiReceiveWait:
   684                           	callstack 25
   685  00009A                     i2l54:
   686  00009A  A0C7               	btfss	199,0,c	;volatile
   687  00009C  EF52  F000         	goto	i2u1_41
   688  0000A0  EF54  F000         	goto	i2u1_40
   689  0000A4                     i2u1_41:
   690  0000A4  EF4D  F000         	goto	i2l54
   691  0000A8                     i2u1_40:
   692  0000A8  0012               	return		;funcret
   693  0000AA                     __end_of_spiReceiveWait:
   694                           	callstack 0
   695  0000                     
   696                           	psect	rparam
   697  0000                     
   698                           	psect	temp
   699  000008                     btemp:
   700                           	callstack 0
   701  000008                     	ds	1
   702  0000                     int$flags	set	btemp
   703  0000                     wtemp8	set	btemp+1
   704  0000                     ttemp5	set	btemp+1
   705  0000                     ttemp6	set	btemp+4
   706  0000                     ttemp7	set	btemp+8
   707                           
   708                           	psect	idloc
   709                           
   710                           ;Config register IDLOC0 @ 0x200000
   711                           ;	unspecified, using default values
   712  200000                     	org	2097152
   713  200000  FF                 	db	255
   714                           
   715                           ;Config register IDLOC1 @ 0x200001
   716                           ;	unspecified, using default values
   717  200001                     	org	2097153
   718  200001  FF                 	db	255
   719                           
   720                           ;Config register IDLOC2 @ 0x200002
   721                           ;	unspecified, using default values
   722  200002                     	org	2097154
   723  200002  FF                 	db	255
   724                           
   725                           ;Config register IDLOC3 @ 0x200003
   726                           ;	unspecified, using default values
   727  200003                     	org	2097155
   728  200003  FF                 	db	255
   729                           
   730                           ;Config register IDLOC4 @ 0x200004
   731                           ;	unspecified, using default values
   732  200004                     	org	2097156
   733  200004  FF                 	db	255
   734                           
   735                           ;Config register IDLOC5 @ 0x200005
   736                           ;	unspecified, using default values
   737  200005                     	org	2097157
   738  200005  FF                 	db	255
   739                           
   740                           ;Config register IDLOC6 @ 0x200006
   741                           ;	unspecified, using default values
   742  200006                     	org	2097158
   743  200006  FF                 	db	255
   744                           
   745                           ;Config register IDLOC7 @ 0x200007
   746                           ;	unspecified, using default values
   747  200007                     	org	2097159
   748  200007  FF                 	db	255
   749                           
   750                           	psect	config
   751                           
   752                           ; Padding undefined space
   753  300000                     	org	3145728
   754  300000  FF                 	db	255
   755                           
   756                           ;Config register CONFIG1H @ 0x300001
   757                           ;	Oscillator Selection bits
   758                           ;	OSC = XT, XT oscillator
   759                           ;	Fail-Safe Clock Monitor Enable bit
   760                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   761                           ;	Internal/External Oscillator Switchover bit
   762                           ;	IESO = OFF, Two-Speed Start-up disabled
   763  300001                     	org	3145729
   764  300001  01                 	db	1
   765                           
   766                           ;Config register CONFIG2L @ 0x300002
   767                           ;	Power-up Timer Enable bit
   768                           ;	PWRT = OFF, PWRT disabled
   769                           ;	Brown-out Reset Enable bits
   770                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   771                           ;	Brown-out Voltage bits
   772                           ;	BORV = 3, Minimum setting
   773  300002                     	org	3145730
   774  300002  19                 	db	25
   775                           
   776                           ;Config register CONFIG2H @ 0x300003
   777                           ;	Watchdog Timer
   778                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   779                           ;	Watchdog Timer Postscale Select bits
   780                           ;	WDTPS = 32768, 1:32768
   781  300003                     	org	3145731
   782  300003  1E                 	db	30
   783                           
   784                           ;Config register CONFIG3L @ 0x300004
   785                           ;	Processor Data Memory Mode Select bits
   786                           ;	MODE = MC, Microcontroller mode
   787                           ;	Address Bus Width Select bits
   788                           ;	ADDRBW = ADDR20BIT, 20-bit Address Bus
   789                           ;	Data Bus Width Select bit
   790                           ;	DATABW = DATA16BIT, 16-bit External Bus mode
   791                           ;	External Bus Data Wait Enable bit
   792                           ;	WAIT = OFF, Wait selections are unavailable for table reads and table writes
   793  300004                     	org	3145732
   794  300004  F3                 	db	243
   795                           
   796                           ;Config register CONFIG3H @ 0x300005
   797                           ;	CCP2 MUX bit
   798                           ;	CCP2MX = PORTC, ECCP2 input/output is multiplexed with RC1
   799                           ;	ECCP MUX bit
   800                           ;	ECCPMX = PORTE, ECCP1/3 (P1B/P1C/P3B/P3C) are multiplexed onto RE6, RE5, RE4 and RE3 r
      +                          espectively
   801                           ;	Low-Power Timer1 Oscillator Enable bit
   802                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   803                           ;	MCLR Pin Enable bit
   804                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
   805  300005                     	org	3145733
   806  300005  83                 	db	131
   807                           
   808                           ;Config register CONFIG4L @ 0x300006
   809                           ;	Stack Full/Underflow Reset Enable bit
   810                           ;	STVREN = ON, Stack full/underflow will cause Reset
   811                           ;	Single-Supply ICSP Enable bit
   812                           ;	LVP = OFF, Single-Supply ICSP disabled
   813                           ;	Boot Block Size Select bits
   814                           ;	BBSIZ = BB2K, 1K word (2 Kbytes) Boot Block size
   815                           ;	Extended Instruction Set Enable bit
   816                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   817                           ;	Background Debugger Enable bit
   818                           ;	DEBUG = 0x1, unprogrammed default
   819  300006                     	org	3145734
   820  300006  81                 	db	129
   821                           
   822                           ; Padding undefined space
   823  300007                     	org	3145735
   824  300007  FF                 	db	255
   825                           
   826                           ;Config register CONFIG5L @ 0x300008
   827                           ;	Code Protection bit Block 0
   828                           ;	CP0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not code-protected
   829                           ;	Code Protection bit Block 1
   830                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   831                           ;	Code Protection bit Block 2
   832                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   833                           ;	Code Protection bit Block 3
   834                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   835                           ;	Code Protection bit Block 4
   836                           ;	CP4 = OFF, Block 4 (010000-013FFFh) not code-protected
   837                           ;	Code Protection bit Block 5
   838                           ;	CP5 = OFF, Block 5 (014000-017FFFh) not code-protected
   839                           ;	Code Protection bit Block 6
   840                           ;	CP6 = OFF, Block 6 (01BFFF-018000h) not code-protected
   841                           ;	Code Protection bit Block 7
   842                           ;	CP7 = OFF, Block 7 (01C000-01FFFFh) not code-protected
   843  300008                     	org	3145736
   844  300008  FF                 	db	255
   845                           
   846                           ;Config register CONFIG5H @ 0x300009
   847                           ;	Boot Block Code Protection bit
   848                           ;	CPB = OFF, Boot Block (000000-0007FFh) not code-protected
   849                           ;	Data EEPROM Code Protection bit
   850                           ;	CPD = OFF, Data EEPROM not code-protected
   851  300009                     	org	3145737
   852  300009  C0                 	db	192
   853                           
   854                           ;Config register CONFIG6L @ 0x30000A
   855                           ;	Write Protection bit Block 0
   856                           ;	WRT0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not write-protected
   857                           ;	Write Protection bit Block 1
   858                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   859                           ;	Write Protection bit Block 2
   860                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   861                           ;	Write Protection bit Block 3
   862                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   863                           ;	Write Protection bit Block 4
   864                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
   865                           ;	Write Protection bit Block 5
   866                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
   867                           ;	Write Protection bit Block 6
   868                           ;	WRT6 = OFF, Block 6 (01BFFF-018000h) not write-protected
   869                           ;	Write Protection bit Block 7
   870                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
   871  30000A                     	org	3145738
   872  30000A  FF                 	db	255
   873                           
   874                           ;Config register CONFIG6H @ 0x30000B
   875                           ;	Configuration Register Write Protection bit
   876                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   877                           ;	Boot Block Write Protection bit
   878                           ;	WRTB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not write-protected
   879                           ;	Data EEPROM Write Protection bit
   880                           ;	WRTD = OFF, Data EEPROM not write-protected
   881  30000B                     	org	3145739
   882  30000B  E0                 	db	224
   883                           
   884                           ;Config register CONFIG7L @ 0x30000C
   885                           ;	Table Read Protection bit Block 0
   886                           ;	EBTR0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not protected from table reads
      +                           executed in other blocks
   887                           ;	Table Read Protection bit Block 1
   888                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   889                           ;	Table Read Protection bit Block 2
   890                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   891                           ;	Table Read Protection bit Block 3
   892                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   893                           ;	Table Read Protection bit Block 4
   894                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
   895                           ;	Table Read Protection bit Block 5
   896                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
   897                           ;	Table Read Protection bit Block 6
   898                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
   899                           ;	Table Read Protection bit Block 7
   900                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
   901  30000C                     	org	3145740
   902  30000C  FF                 	db	255
   903                           
   904                           ;Config register CONFIG7H @ 0x30000D
   905                           ;	Boot Block Table Read Protection bit
   906                           ;	EBTRB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not protected from table re
      +                          ads executed in other blocks
   907  30000D                     	org	3145741
   908  30000D  40                 	db	64
   909                           tosu	equ	0xFFF
   910                           tosh	equ	0xFFE
   911                           tosl	equ	0xFFD
   912                           stkptr	equ	0xFFC
   913                           pclatu	equ	0xFFB
   914                           pclath	equ	0xFFA
   915                           pcl	equ	0xFF9
   916                           tblptru	equ	0xFF8
   917                           tblptrh	equ	0xFF7
   918                           tblptrl	equ	0xFF6
   919                           tablat	equ	0xFF5
   920                           prodh	equ	0xFF4
   921                           prodl	equ	0xFF3
   922                           indf0	equ	0xFEF
   923                           postinc0	equ	0xFEE
   924                           postdec0	equ	0xFED
   925                           preinc0	equ	0xFEC
   926                           plusw0	equ	0xFEB
   927                           fsr0h	equ	0xFEA
   928                           fsr0l	equ	0xFE9
   929                           wreg	equ	0xFE8
   930                           indf1	equ	0xFE7
   931                           postinc1	equ	0xFE6
   932                           postdec1	equ	0xFE5
   933                           preinc1	equ	0xFE4
   934                           plusw1	equ	0xFE3
   935                           fsr1h	equ	0xFE2
   936                           fsr1l	equ	0xFE1
   937                           bsr	equ	0xFE0
   938                           indf2	equ	0xFDF
   939                           postinc2	equ	0xFDE
   940                           postdec2	equ	0xFDD
   941                           preinc2	equ	0xFDC
   942                           plusw2	equ	0xFDB
   943                           fsr2h	equ	0xFDA
   944                           fsr2l	equ	0xFD9
   945                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      5       7
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_spiInit

Critical Paths under _service in COMRAM

    _interruptService->_spiService

Critical Paths under _main in BANK0

    None.

Critical Paths under _service in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _service in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _service in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _service in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _service in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _service in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _service in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _service in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _service in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _service in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _service in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _service in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _service in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _service in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _service in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _service in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     331
                      _setInterrupts
                              _setIo
                            _spiInit
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     316
                                              1 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setIo                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setInterrupts                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _service                                              0     0      0      15
                   _interruptService
 ---------------------------------------------------------------------------------
 (3) _interruptService                                     0     0      0      15
                         _spiService
 ---------------------------------------------------------------------------------
 (4) _spiService                                           1     1      0      15
                                              0 COMRAM     1     1      0
                            _spiRead
 ---------------------------------------------------------------------------------
 (5) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (6) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setInterrupts
   _setIo
   _spiInit
   _spiWrite

 _service (ROOT)
   _interruptService
     _spiService
       _spiRead
         _spiReceiveWait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      5       7       1        7.4%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       7       6        0.0%
DATA                 0      0       7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon May 24 22:22:38 2021

              _SSPSTATbits 000FC7                         l51 007C                         l60 00DC  
                       l83 00C0                         l86 00CA                         u50 0060  
                       u51 005C                         u60 003A                         u61 0036  
                      l801 00C2                        l841 0050                        l817 00D8  
                      l851 0076                        l843 0052                        l853 0078  
                      l845 0060                        l861 002C                        l847 006E  
                      l863 003A                        l855 0012                        l849 0074  
                      l865 003E                        l857 0016                        l867 0040  
                      l859 001A                        l799 00B8                        _GIE 007F97  
                      _RC0 007C10                       _PEIE 007F96                       i2l21 00D2  
                     i2l54 009A                       i2l57 00A8                       i2l68 00E4  
                     _main 0012                       btemp 0008                       start 000E  
             ___param_bank 000000   __end_of_interruptService 00EC                      ?_main 0001  
                    _FLAGS 0007                      i2l101 00EA                      i2l105 0098  
                    i2l819 00CE                      i2l781 009A                      i2l783 00DE  
                    i2l791 008C                      i2l785 00E2                      i2l793 008E  
                    i2l795 0094                      i2l789 007E                      i2l797 00E6  
                    _PORTD 000F83                      _TRISD 000F95                      _SSPIE 007CEB  
                    _SSPIF 007CF3                      _setIo 00B8            __end_of_spiInit 007E  
          __end_of_spiRead 00E6            __end_of_service 00D6                      ttemp5 0009  
                    ttemp6 000C                      ttemp7 0010      __end_of_setInterrupts 00CC  
                    wtemp8 0009            __initialization 00AA               __end_of_main 004E  
                   ??_main 0006              __activetblptr 000000                     ?_setIo 0001  
                   i2u1_40 00A8                     i2u1_41 00A4                     i2u2_40 008C  
                   i2u2_41 0088                     _TRISC0 007CA0                     _TRISC3 007CA3  
                   _TRISC5 007CA5                     _SSPBUF 000FC9                     isa$std 000001  
         __end_of_spiWrite 00DE                  ??_spiInit 0005                  ??_spiRead 0001  
                ??_service 0002                 __accesstop 0060    __end_of__initialization 00AE  
            ___rparam_used 000001             __pcstackCOMRAM 0001              __end_of_setIo 00C2  
                  ??_setIo 0002          ?_interruptService 0001    __size_of_spiReceiveWait 0010  
       ??_interruptService 0002                    _SSPSTAT 000FC7                    __Hparam 0000  
                  __Lparam 0000                  ?_spiWrite 0001                    __pcinit 00AA  
                  __ramtop 1000                    __ptext0 0012                    __ptext1 00D6  
                  __ptext2 004E                    __ptext3 00B8                    __ptext4 00C2  
                  __ptext6 00E6                    __ptext7 007E                    __ptext8 00DE  
                  __ptext9 009A                    _spiInit 004E                    _spiRead 00DE  
                  _service 0008             __pintcode_body 00CC       end_of_initialization 00AE  
                  int_func 00CC                 ??_spiWrite 0002                 _spiService 007E  
   __size_of_setInterrupts 000A                spiWrite@dat 0002             _spiReceiveWait 009A  
      start_initialization 00AA              _setInterrupts 00C2     __end_of_spiReceiveWait 00AA  
              ?_spiService 0001                __pbssCOMRAM 0006  __size_of_interruptService 0006  
           ?_setInterrupts 0001            ?_spiReceiveWait 0001                  __pintcode 0008  
        __size_of_spiWrite 0008                   ?_spiInit 0002                   ?_spiRead 0001  
                 ?_service 0001                  _readValue 0006             __size_of_setIo 000A  
      __size_of_spiService 001C       spiInit@sTransmitEdge 0004         spiInit@sDataSample 0002  
                 _SSP1CON1 000FC6            ??_setInterrupts 0002                   __Hrparam 0000  
                 __Lrparam 0000             spiService@test 0001           _interruptService 00E6  
         __size_of_spiInit 0030           __size_of_spiRead 0008           __size_of_service 00CE  
            __size_of_main 003C                   isa$xinst 000000                   _spiWrite 00D6  
                 int$flags 0008               spiInit@sType 0005               ??_spiService 0001  
        spiInit@sClockIdle 0003                   intlevel2 0000         __end_of_spiService 009A  
         ??_spiReceiveWait 0001  
