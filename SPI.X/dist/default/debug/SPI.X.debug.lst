

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jul  6 17:30:35 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F8722 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataCOMRAM
    84  001330                     __pidataCOMRAM:
    85                           	callstack 0
    86                           
    87                           ;initializer for buttonDebounce@counter
    88  001330  00FF               	dw	255
    89                           
    90                           	psect	smallconst
    91  001000                     __psmallconst:
    92                           	callstack 0
    93  001000  00                 	db	0
    94  001001                     main@F4619:
    95                           	callstack 0
    96  001001  73                 	db	115
    97  001002  73                 	db	115
    98  001003  73                 	db	115
    99  001004  64                 	db	100
   100  001005  64                 	db	100
   101  001006  64                 	db	100
   102  001007  64                 	db	100
   103  001008  00                 	db	0
   104  001009  00                 	db	0
   105  00100A  00                 	db	0
   106  00100B  00                 	db	0
   107  00100C  00                 	db	0
   108  00100D  00                 	db	0
   109  00100E  00                 	db	0
   110  00100F  00                 	db	0
   111  001010  00                 	db	0
   112  001011  00                 	db	0
   113  001012  00                 	db	0
   114  001013  00                 	db	0
   115  001014  00                 	db	0
   116  001015  00                 	db	0
   117  001016  00                 	db	0
   118  001017  00                 	db	0
   119  001018  00                 	db	0
   120  001019  00                 	db	0
   121  00101A  00                 	db	0
   122  00101B  00                 	db	0
   123  00101C  00                 	db	0
   124  00101D  00                 	db	0
   125  00101E  00                 	db	0
   126  00101F  00                 	db	0
   127  001020  00                 	db	0
   128  001021  00                 	db	0
   129  001022  00                 	db	0
   130  001023  00                 	db	0
   131  001024  00                 	db	0
   132  001025  00                 	db	0
   133  001026  00                 	db	0
   134  001027  00                 	db	0
   135  001028  00                 	db	0
   136  001029  00                 	db	0
   137  00102A  00                 	db	0
   138  00102B  00                 	db	0
   139  00102C  00                 	db	0
   140  00102D  00                 	db	0
   141  00102E  00                 	db	0
   142  00102F  00                 	db	0
   143  001030  00                 	db	0
   144  001031  00                 	db	0
   145  001032  00                 	db	0
   146  001033  00                 	db	0
   147  001034  00                 	db	0
   148  001035  00                 	db	0
   149  001036  00                 	db	0
   150  001037  00                 	db	0
   151  001038  00                 	db	0
   152  001039  00                 	db	0
   153  00103A  00                 	db	0
   154  00103B  00                 	db	0
   155  00103C  00                 	db	0
   156  00103D  00                 	db	0
   157  00103E  00                 	db	0
   158  00103F  00                 	db	0
   159  001040  00                 	db	0
   160  001041  00                 	db	0
   161  001042  00                 	db	0
   162  001043  00                 	db	0
   163  001044  00                 	db	0
   164  001045  00                 	db	0
   165  001046  00                 	db	0
   166  001047  00                 	db	0
   167  001048  00                 	db	0
   168  001049  00                 	db	0
   169  00104A  00                 	db	0
   170  00104B  00                 	db	0
   171  00104C  00                 	db	0
   172  00104D  00                 	db	0
   173  00104E  00                 	db	0
   174  00104F  00                 	db	0
   175  001050  00                 	db	0
   176  001051                     __end_ofmain@F4619:
   177                           	callstack 0
   178  0000                     _PORTD	set	3971
   179  0000                     _TRISD	set	3989
   180  0000                     _TRISB0	set	31896
   181  0000                     _TRISC6	set	31910
   182  0000                     _TRISC7	set	31911
   183  0000                     _LATC0	set	31832
   184  0000                     _TRISC2	set	31906
   185  0000                     _TRISC3	set	31907
   186  0000                     _TRISC4	set	31908
   187  0000                     _TRISC5	set	31909
   188  0000                     _TXREG1	set	4013
   189  0000                     _RCREG1	set	4014
   190  0000                     _SPBRG	set	4015
   191  0000                     _SSP1BUF	set	4041
   192  0000                     _SSP1STATbits	set	4039
   193  0000                     _SSP1CON1	set	4038
   194  0000                     _SSP1STAT	set	4039
   195  0000                     _TXEN1	set	32101
   196  0000                     _CREN1	set	32092
   197  0000                     _SPEN1	set	32095
   198  0000                     _SYNC1	set	32100
   199  0000                     _BRGH1	set	32098
   200  0000                     _RC1IF	set	31989
   201  0000                     _RC1IE	set	31981
   202  0000                     _SSP1IE	set	31979
   203  0000                     _SSP1IF	set	31987
   204  0000                     _INT0IF	set	32657
   205  0000                     _INT0IE	set	32660
   206  0000                     _INTEDG0	set	32654
   207  0000                     _PEIE	set	32662
   208  0000                     _GIE	set	32663
   209  001051  00                 	db	0	; dummy byte at the end
   210  0000                     
   211                           ; #config settings
   212                           
   213                           	psect	cinit
   214  0011B0                     __pcinit:
   215                           	callstack 0
   216  0011B0                     start_initialization:
   217                           	callstack 0
   218  0011B0                     __initialization:
   219                           	callstack 0
   220                           
   221                           ; Initialize objects allocated to COMRAM (2 bytes)
   222                           ; load TBLPTR registers with __pidataCOMRAM
   223  0011B0  0E30               	movlw	low __pidataCOMRAM
   224  0011B2  6EF6               	movwf	tblptrl,c
   225  0011B4  0E13               	movlw	high __pidataCOMRAM
   226  0011B6  6EF7               	movwf	tblptrh,c
   227  0011B8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   228  0011BA  6EF8               	movwf	tblptru,c
   229  0011BC  0009               	tblrd		*+	;fetch initializer
   230  0011BE  CFF5 F059          	movff	tablat,__pdataCOMRAM
   231  0011C2  0009               	tblrd		*+	;fetch initializer
   232  0011C4  CFF5 F05A          	movff	tablat,__pdataCOMRAM+1
   233                           
   234                           ; Clear objects allocated to COMRAM (4 bytes)
   235  0011C8  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   236  0011CA  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   237  0011CC  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   238  0011CE  6A55               	clrf	__pbssCOMRAM& (0+255),c
   239  0011D0                     end_of_initialization:
   240                           	callstack 0
   241  0011D0                     __end_of__initialization:
   242                           	callstack 0
   243  0011D0  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   244  0011D2  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   245  0011D4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   246  0011D6  6EF8               	movwf	tblptru,c
   247  0011D8  0E10               	movlw	high __Lsmallconst
   248  0011DA  6EF7               	movwf	tblptrh,c
   249  0011DC  0100               	movlb	0
   250  0011DE  EF29  F008         	goto	_main	;jump to C main() function
   251                           
   252                           	psect	bssCOMRAM
   253  000055                     __pbssCOMRAM:
   254                           	callstack 0
   255  000055                     _ledValue:
   256                           	callstack 0
   257  000055                     	ds	1
   258  000056                     _readSerialValue:
   259                           	callstack 0
   260  000056                     	ds	1
   261  000057                     _FLAGS:
   262                           	callstack 0
   263  000057                     	ds	1
   264  000058                     _readSPIValue:
   265                           	callstack 0
   266  000058                     	ds	1
   267                           
   268                           	psect	dataCOMRAM
   269  000059                     __pdataCOMRAM:
   270                           	callstack 0
   271  000059                     buttonDebounce@counter:
   272                           	callstack 0
   273  000059                     	ds	2
   274                           
   275                           	psect	cstackCOMRAM
   276  000001                     __pcstackCOMRAM:
   277                           	callstack 0
   278  000001                     spiInit@sDataSample:
   279                           	callstack 0
   280  000001                     spiWrite@dat:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0x0
   284  000001                     	ds	1
   285  000002                     spiInit@sClockIdle:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0x1
   289  000002                     	ds	1
   290  000003                     spiInit@sTransmitEdge:
   291                           	callstack 0
   292                           
   293                           ; 1 bytes @ 0x2
   294  000003                     	ds	1
   295  000004                     spiInit@sType:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x3
   299  000004                     	ds	1
   300  000005                     main@test:
   301                           	callstack 0
   302                           
   303                           ; 80 bytes @ 0x4
   304  000005                     	ds	80
   305                           
   306 ;;
   307 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   308 ;;
   309 ;; *************** function _main *****************
   310 ;; Defined at:
   311 ;;		line 22 in file "newmain.c"
   312 ;; Parameters:    Size  Location     Type
   313 ;;		None
   314 ;; Auto vars:     Size  Location     Type
   315 ;;  test           80    4[COMRAM] const unsigned char [80]
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      void 
   318 ;; Registers used:
   319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   320 ;; Tracked objects:
   321 ;;		On entry : 0/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   326 ;;      Locals:        80       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   328 ;;      Totals:        80       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   329 ;;Total ram usage:       80 bytes
   330 ;; Hardware stack levels required when called: 9
   331 ;; This function calls:
   332 ;;		_SPICallback
   333 ;;		_buttonCallback
   334 ;;		_buttonDebounce
   335 ;;		_displayRequestHandle
   336 ;;		_initialiseButton
   337 ;;		_serialCallback
   338 ;;		_setButtonInterrput
   339 ;;		_setButtonIo
   340 ;;		_setInterrupts
   341 ;;		_setIo
   342 ;;		_setSPIInterrupt
   343 ;;		_setSerial
   344 ;;		_setSerialIo
   345 ;;		_setupDisplayIo
   346 ;;		_spiInit
   347 ;; This function is called by:
   348 ;;		Startup code after reset
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           	psect	text0
   353  001052                     __ptext0:
   354                           	callstack 0
   355  001052                     _main:
   356                           	callstack 22
   357  001052                     
   358                           ;newmain.c: 23:     setIo();
   359  001052  EC99  F009         	call	_setIo	;wreg free
   360                           
   361                           ;newmain.c: 24:     setSPIInterrupt();
   362  001056  EC7D  F009         	call	_setSPIInterrupt	;wreg free
   363                           
   364                           ;newmain.c: 25:     setSerialIo();
   365  00105A  EC7A  F009         	call	_setSerialIo	;wreg free
   366  00105E                     
   367                           ;newmain.c: 26:     setSerial();
   368  00105E  EC3B  F009         	call	_setSerial	;wreg free
   369  001062                     
   370                           ;newmain.c: 27:     setupDisplayIo();
   371  001062  EC55  F009         	call	_setupDisplayIo	;wreg free
   372                           
   373                           ;newmain.c: 28:     initialiseButton();
   374  001066  EC89  F009         	call	_initialiseButton	;wreg free
   375                           
   376                           ;newmain.c: 29:     setButtonInterrput();
   377  00106A  EC83  F009         	call	_setButtonInterrput	;wreg free
   378                           
   379                           ;newmain.c: 30:     setButtonIo();
   380  00106E  EC92  F009         	call	_setButtonIo	;wreg free
   381                           
   382                           ;newmain.c: 31:     setInterrupts();
   383  001072  EC80  F009         	call	_setInterrupts	;wreg free
   384  001076                     
   385                           ;newmain.c: 32:         spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_I
      +                          DLE_LOW, SPI_IDLE_2_ACTIVE);
   386  001076  0E00               	movlw	0
   387  001078  6E01               	movwf	spiInit@sDataSample^0,c
   388  00107A  0E00               	movlw	0
   389  00107C  6E02               	movwf	spiInit@sClockIdle^0,c
   390  00107E  0E00               	movlw	0
   391  001080  6E03               	movwf	spiInit@sTransmitEdge^0,c
   392  001082  0E20               	movlw	32
   393  001084  ECBE  F008         	call	_spiInit
   394  001088                     
   395                           ;newmain.c: 35:     const unsigned char test[80] = "sssdddd";
   396  001088  0E01               	movlw	low main@F4619
   397  00108A  6EF6               	movwf	tblptrl,c
   398  00108C                     	if	0	;There is only one active tblptr byte
   399  00108C                     	endif
   400  00108C                     	if	0	;There are less than 3 active tblptr bytes
   401  00108C                     	endif
   402  00108C  EE20  F005         	lfsr	2,main@test
   403  001090  0E4F               	movlw	79
   404  001092                     u240:
   405  001092  0009               	tblrd		*+
   406  001094  CFF5 FFDE          	movff	tablat,postinc2
   407  001098  06E8               	decf	wreg,f,c
   408  00109A  E2FB               	bc	u240
   409  00109C                     l1180:
   410                           
   411                           ;newmain.c: 38:         if (FLAGS.bits.SPI_READ_REQUEST == 1) {
   412  00109C  A257               	btfss	_FLAGS^0,1,c
   413  00109E  EF53  F008         	goto	u251
   414  0010A2  EF55  F008         	goto	u250
   415  0010A6                     u251:
   416  0010A6  EF58  F008         	goto	l1186
   417  0010AA                     u250:
   418  0010AA                     
   419                           ;newmain.c: 39:             SPICallback();
   420  0010AA  EC94  F009         	call	_SPICallback	;wreg free
   421  0010AE                     
   422                           ;newmain.c: 40:             FLAGS.bits.SPI_READ_REQUEST = 0;
   423  0010AE  9257               	bcf	_FLAGS^0,1,c
   424  0010B0                     l1186:
   425                           
   426                           ;newmain.c: 42:         if (FLAGS.bits.DISPLAY_READING) {
   427  0010B0  AA57               	btfss	_FLAGS^0,5,c
   428  0010B2  EF5D  F008         	goto	u261
   429  0010B6  EF5F  F008         	goto	u260
   430  0010BA                     u261:
   431  0010BA  EF62  F008         	goto	l1192
   432  0010BE                     u260:
   433  0010BE                     
   434                           ;newmain.c: 43:             displayRequestHandle();
   435  0010BE  ECF1  F008         	call	_displayRequestHandle	;wreg free
   436  0010C2                     
   437                           ;newmain.c: 44:             FLAGS.bits.DISPLAY_READING = 0;
   438  0010C2  9A57               	bcf	_FLAGS^0,5,c
   439  0010C4                     l1192:
   440                           
   441                           ;newmain.c: 46:         if (FLAGS.bits.UART_RECEIVED) {
   442  0010C4  A457               	btfss	_FLAGS^0,2,c
   443  0010C6  EF67  F008         	goto	u271
   444  0010CA  EF69  F008         	goto	u270
   445  0010CE                     u271:
   446  0010CE  EF6C  F008         	goto	l1198
   447  0010D2                     u270:
   448  0010D2                     
   449                           ;newmain.c: 47:             serialCallback();
   450  0010D2  EC86  F009         	call	_serialCallback	;wreg free
   451  0010D6                     
   452                           ;newmain.c: 48:             FLAGS.bits.UART_RECEIVED = 0;
   453  0010D6  9457               	bcf	_FLAGS^0,2,c
   454  0010D8                     l1198:
   455                           
   456                           ;newmain.c: 50:         if (FLAGS.bits.PUSHED_BUTTON) {
   457  0010D8  A857               	btfss	_FLAGS^0,4,c
   458  0010DA  EF71  F008         	goto	u281
   459  0010DE  EF73  F008         	goto	u280
   460  0010E2                     u281:
   461  0010E2  EF76  F008         	goto	l1204
   462  0010E6                     u280:
   463  0010E6                     
   464                           ;newmain.c: 51:             FLAGS.bits.PUSH_REQUEST_SERVICED = 0;
   465  0010E6  9657               	bcf	_FLAGS^0,3,c
   466  0010E8                     
   467                           ;newmain.c: 52:             buttonCallback();
   468  0010E8  EC08  F009         	call	_buttonCallback	;wreg free
   469  0010EC                     l1204:
   470                           
   471                           ;newmain.c: 54:         if (FLAGS.bits.PUSH_REQUEST_SERVICED == 0) {
   472  0010EC  B657               	btfsc	_FLAGS^0,3,c
   473  0010EE  EF7B  F008         	goto	u291
   474  0010F2  EF7D  F008         	goto	u290
   475  0010F6                     u291:
   476  0010F6  EF4E  F008         	goto	l1180
   477  0010FA                     u290:
   478  0010FA                     
   479                           ;newmain.c: 55:             buttonDebounce();
   480  0010FA  EC1A  F009         	call	_buttonDebounce	;wreg free
   481  0010FE  EF4E  F008         	goto	l1180
   482  001102  EF07  F000         	goto	start
   483  001106                     __end_of_main:
   484                           	callstack 0
   485                           
   486 ;; *************** function _spiInit *****************
   487 ;; Defined at:
   488 ;;		line 14 in file "spi.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;  sType           1    wreg     enum E4544
   491 ;;  sDataSample     1    0[COMRAM] enum E4552
   492 ;;  sClockIdle      1    1[COMRAM] enum E4556
   493 ;;  sTransmitEdg    1    2[COMRAM] enum E4560
   494 ;; Auto vars:     Size  Location     Type
   495 ;;  sType           1    3[COMRAM] enum E4544
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, status,2, status,0
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   505 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   506 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   508 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   509 ;;Total ram usage:        4 bytes
   510 ;; Hardware stack levels used: 1
   511 ;; Hardware stack levels required when called: 6
   512 ;; This function calls:
   513 ;;		Nothing
   514 ;; This function is called by:
   515 ;;		_main
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           	psect	text1
   520  00117C                     __ptext1:
   521                           	callstack 0
   522  00117C                     _spiInit:
   523                           	callstack 24
   524                           
   525                           ;incstack = 0
   526                           ;spiInit@sType stored from wreg
   527  00117C  6E04               	movwf	spiInit@sType^0,c
   528  00117E                     
   529                           ;spi.c: 15:     TRISC5 = 0;
   530  00117E  9A94               	bcf	3988,5,c	;volatile
   531                           
   532                           ;spi.c: 16:     TRISC4 = 1;
   533  001180  8894               	bsf	3988,4,c	;volatile
   534  001182                     
   535                           ;spi.c: 17:     if (sType & 0b00000100)
   536  001182  A404               	btfss	spiInit@sType^0,2,c
   537  001184  EFC6  F008         	goto	u231
   538  001188  EFC8  F008         	goto	u230
   539  00118C                     u231:
   540  00118C  EFCF  F008         	goto	l1164
   541  001190                     u230:
   542  001190                     
   543                           ;spi.c: 18:     {;spi.c: 19:         SSP1STAT = sTransmitEdge;
   544  001190  C003  FFC7         	movff	spiInit@sTransmitEdge,4039	;volatile
   545                           
   546                           ;spi.c: 20:         TRISC3 = 1;
   547  001194  8694               	bsf	3988,3,c	;volatile
   548                           
   549                           ;spi.c: 21:         TRISC2 = 1;
   550  001196  8494               	bsf	3988,2,c	;volatile
   551                           
   552                           ;spi.c: 22:         LATC0 = 1;
   553  001198  808B               	bsf	3979,0,c	;volatile
   554                           
   555                           ;spi.c: 23:     } else
   556  00119A  EFD4  F008         	goto	l93
   557  00119E                     l1164:
   558                           
   559                           ;spi.c: 24:     {;spi.c: 25:         SSP1STAT = sDataSample | sTransmitEdge;
   560  00119E  5001               	movf	spiInit@sDataSample^0,w,c
   561  0011A0  1003               	iorwf	spiInit@sTransmitEdge^0,w,c
   562  0011A2  6EC7               	movwf	199,c	;volatile
   563  0011A4                     
   564                           ;spi.c: 26:         TRISC3 = 0;
   565  0011A4  9694               	bcf	3988,3,c	;volatile
   566  0011A6                     
   567                           ;spi.c: 27:         TRISC2 = 0;
   568  0011A6  9494               	bcf	3988,2,c	;volatile
   569  0011A8                     l93:
   570                           
   571                           ;spi.c: 29:     SSP1CON1 = sType | sClockIdle;
   572  0011A8  5004               	movf	spiInit@sType^0,w,c
   573  0011AA  1002               	iorwf	spiInit@sClockIdle^0,w,c
   574  0011AC  6EC6               	movwf	198,c	;volatile
   575  0011AE  0012               	return		;funcret
   576  0011B0                     __end_of_spiInit:
   577                           	callstack 0
   578                           
   579 ;; *************** function _setupDisplayIo *****************
   580 ;; Defined at:
   581 ;;		line 6 in file "display.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;		None
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, status,2
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   599 ;;Total ram usage:        0 bytes
   600 ;; Hardware stack levels used: 1
   601 ;; Hardware stack levels required when called: 6
   602 ;; This function calls:
   603 ;;		Nothing
   604 ;; This function is called by:
   605 ;;		_main
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           	psect	text2
   610  0012AA                     __ptext2:
   611                           	callstack 0
   612  0012AA                     _setupDisplayIo:
   613                           	callstack 24
   614  0012AA                     
   615                           ;display.c: 7:     TRISD = 0x00;
   616  0012AA  0E00               	movlw	0
   617  0012AC  6E95               	movwf	149,c	;volatile
   618                           
   619                           ;display.c: 8:     PORTD = 0x00;
   620  0012AE  0E00               	movlw	0
   621  0012B0  6E83               	movwf	131,c	;volatile
   622  0012B2  0012               	return		;funcret
   623  0012B4                     __end_of_setupDisplayIo:
   624                           	callstack 0
   625                           
   626 ;; *************** function _setSerialIo *****************
   627 ;; Defined at:
   628 ;;		line 17 in file "serial.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		None
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   646 ;;Total ram usage:        0 bytes
   647 ;; Hardware stack levels used: 1
   648 ;; Hardware stack levels required when called: 6
   649 ;; This function calls:
   650 ;;		Nothing
   651 ;; This function is called by:
   652 ;;		_main
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           	psect	text3
   657  0012F4                     __ptext3:
   658                           	callstack 0
   659  0012F4                     _setSerialIo:
   660                           	callstack 24
   661  0012F4                     
   662                           ;serial.c: 18:     TRISC7 = 1;
   663  0012F4  8E94               	bsf	3988,7,c	;volatile
   664                           
   665                           ;serial.c: 19:     TRISC6 = 0;
   666  0012F6  9C94               	bcf	3988,6,c	;volatile
   667  0012F8  0012               	return		;funcret
   668  0012FA                     __end_of_setSerialIo:
   669                           	callstack 0
   670                           
   671 ;; *************** function _setSerial *****************
   672 ;; Defined at:
   673 ;;		line 5 in file "serial.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, status,2
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   691 ;;Total ram usage:        0 bytes
   692 ;; Hardware stack levels used: 1
   693 ;; Hardware stack levels required when called: 6
   694 ;; This function calls:
   695 ;;		Nothing
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text4
   702  001276                     __ptext4:
   703                           	callstack 0
   704  001276                     _setSerial:
   705                           	callstack 24
   706  001276                     
   707                           ;serial.c: 6:     BRGH1 = 0;
   708  001276  94AC               	bcf	4012,2,c	;volatile
   709  001278                     
   710                           ;serial.c: 7:     SPBRG = 15;
   711  001278  0E0F               	movlw	15
   712  00127A  6EAF               	movwf	175,c	;volatile
   713  00127C                     
   714                           ;serial.c: 8:     SYNC1 = 0;
   715  00127C  98AC               	bcf	4012,4,c	;volatile
   716  00127E                     
   717                           ;serial.c: 9:     SPEN1 = 1;
   718  00127E  8EAB               	bsf	4011,7,c	;volatile
   719  001280                     
   720                           ;serial.c: 10:     RC1IE = 1;
   721  001280  8A9D               	bsf	3997,5,c	;volatile
   722  001282                     
   723                           ;serial.c: 11:     CREN1 = 1;
   724  001282  88AB               	bsf	4011,4,c	;volatile
   725  001284                     
   726                           ;serial.c: 12:     RC1IF = 0;
   727  001284  9A9E               	bcf	3998,5,c	;volatile
   728  001286                     
   729                           ;serial.c: 13:     TXEN1 = 1;
   730  001286  8AAC               	bsf	4012,5,c	;volatile
   731                           
   732                           ;serial.c: 14:     RCREG1 = 0;
   733  001288  0E00               	movlw	0
   734  00128A  6EAE               	movwf	174,c	;volatile
   735  00128C  0012               	return		;funcret
   736  00128E                     __end_of_setSerial:
   737                           	callstack 0
   738                           
   739 ;; *************** function _setSPIInterrupt *****************
   740 ;; Defined at:
   741 ;;		line 9 in file "spi.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		None
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   759 ;;Total ram usage:        0 bytes
   760 ;; Hardware stack levels used: 1
   761 ;; Hardware stack levels required when called: 6
   762 ;; This function calls:
   763 ;;		Nothing
   764 ;; This function is called by:
   765 ;;		_main
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           	psect	text5
   770  0012FA                     __ptext5:
   771                           	callstack 0
   772  0012FA                     _setSPIInterrupt:
   773                           	callstack 24
   774  0012FA                     
   775                           ;spi.c: 10:     SSP1IF = 0;
   776  0012FA  969E               	bcf	3998,3,c	;volatile
   777                           
   778                           ;spi.c: 11:     SSP1IE = 1;
   779  0012FC  869D               	bsf	3997,3,c	;volatile
   780  0012FE  0012               	return		;funcret
   781  001300                     __end_of_setSPIInterrupt:
   782                           	callstack 0
   783                           
   784 ;; *************** function _setIo *****************
   785 ;; Defined at:
   786 ;;		line 9 in file "init.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;		None
   789 ;; Auto vars:     Size  Location     Type
   790 ;;		None
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      void 
   793 ;; Registers used:
   794 ;;		None
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;Total ram usage:        0 bytes
   805 ;; Hardware stack levels used: 1
   806 ;; Hardware stack levels required when called: 6
   807 ;; This function calls:
   808 ;;		Nothing
   809 ;; This function is called by:
   810 ;;		_main
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           	psect	text6
   815  001332                     __ptext6:
   816                           	callstack 0
   817  001332                     _setIo:
   818                           	callstack 24
   819  001332  0012               	return		;funcret
   820  001334                     __end_of_setIo:
   821                           	callstack 0
   822                           
   823 ;; *************** function _setInterrupts *****************
   824 ;; Defined at:
   825 ;;		line 13 in file "init.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;		None
   828 ;; Auto vars:     Size  Location     Type
   829 ;;		None
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		None
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   843 ;;Total ram usage:        0 bytes
   844 ;; Hardware stack levels used: 1
   845 ;; Hardware stack levels required when called: 6
   846 ;; This function calls:
   847 ;;		Nothing
   848 ;; This function is called by:
   849 ;;		_main
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text7
   854  001300                     __ptext7:
   855                           	callstack 0
   856  001300                     _setInterrupts:
   857                           	callstack 24
   858  001300                     
   859                           ;init.c: 14:     GIE = 1;
   860  001300  8EF2               	bsf	4082,7,c	;volatile
   861                           
   862                           ;init.c: 15:     PEIE = 1;
   863  001302  8CF2               	bsf	4082,6,c	;volatile
   864  001304  0012               	return		;funcret
   865  001306                     __end_of_setInterrupts:
   866                           	callstack 0
   867                           
   868 ;; *************** function _setButtonIo *****************
   869 ;; Defined at:
   870 ;;		line 6 in file "button.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;		None
   873 ;; Auto vars:     Size  Location     Type
   874 ;;		None
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		None
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;Total ram usage:        0 bytes
   889 ;; Hardware stack levels used: 1
   890 ;; Hardware stack levels required when called: 6
   891 ;; This function calls:
   892 ;;		Nothing
   893 ;; This function is called by:
   894 ;;		_main
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text8
   899  001324                     __ptext8:
   900                           	callstack 0
   901  001324                     _setButtonIo:
   902                           	callstack 24
   903  001324                     
   904                           ;button.c: 7:     TRISB0 = 1;
   905  001324  8093               	bsf	3987,0,c	;volatile
   906  001326  0012               	return		;funcret
   907  001328                     __end_of_setButtonIo:
   908                           	callstack 0
   909                           
   910 ;; *************** function _setButtonInterrput *****************
   911 ;; Defined at:
   912 ;;		line 19 in file "init.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;		None
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      void 
   919 ;; Registers used:
   920 ;;		None
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;Total ram usage:        0 bytes
   931 ;; Hardware stack levels used: 1
   932 ;; Hardware stack levels required when called: 6
   933 ;; This function calls:
   934 ;;		Nothing
   935 ;; This function is called by:
   936 ;;		_main
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           
   940                           	psect	text9
   941  001306                     __ptext9:
   942                           	callstack 0
   943  001306                     _setButtonInterrput:
   944                           	callstack 24
   945  001306                     
   946                           ;init.c: 20:     INTEDG0 = 1;
   947  001306  8CF1               	bsf	4081,6,c	;volatile
   948                           
   949                           ;init.c: 21:     INT0IE = 1;
   950  001308  88F2               	bsf	4082,4,c	;volatile
   951  00130A  0012               	return		;funcret
   952  00130C                     __end_of_setButtonInterrput:
   953                           	callstack 0
   954                           
   955 ;; *************** function _serialCallback *****************
   956 ;; Defined at:
   957 ;;		line 22 in file "serial.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;		None
   960 ;; Auto vars:     Size  Location     Type
   961 ;;		None
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		None
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;Total ram usage:        0 bytes
   976 ;; Hardware stack levels used: 1
   977 ;; Hardware stack levels required when called: 6
   978 ;; This function calls:
   979 ;;		Nothing
   980 ;; This function is called by:
   981 ;;		_main
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	text10
   986  00130C                     __ptext10:
   987                           	callstack 0
   988  00130C                     _serialCallback:
   989                           	callstack 24
   990  00130C                     
   991                           ;serial.c: 23:     FLAGS.bits.DISPLAY_READING = 1;
   992  00130C  8A57               	bsf	_FLAGS^0,5,c
   993                           
   994                           ;serial.c: 24:     FLAGS.bits.DISPLAY_SERIAL_READING = 1;
   995  00130E  8E57               	bsf	_FLAGS^0,7,c
   996  001310  0012               	return		;funcret
   997  001312                     __end_of_serialCallback:
   998                           	callstack 0
   999                           
  1000 ;; *************** function _initialiseButton *****************
  1001 ;; Defined at:
  1002 ;;		line 10 in file "button.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		None
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1020 ;;Total ram usage:        0 bytes
  1021 ;; Hardware stack levels used: 1
  1022 ;; Hardware stack levels required when called: 6
  1023 ;; This function calls:
  1024 ;;		Nothing
  1025 ;; This function is called by:
  1026 ;;		_main
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text11
  1031  001312                     __ptext11:
  1032                           	callstack 0
  1033  001312                     _initialiseButton:
  1034                           	callstack 24
  1035  001312                     
  1036                           ;button.c: 11:     FLAGS.bits.PUSHED_BUTTON = 0;
  1037  001312  9857               	bcf	_FLAGS^0,4,c
  1038                           
  1039                           ;button.c: 12:     FLAGS.bits.PUSH_REQUEST_SERVICED = 1;
  1040  001314  8657               	bsf	_FLAGS^0,3,c
  1041  001316  0012               	return		;funcret
  1042  001318                     __end_of_initialiseButton:
  1043                           	callstack 0
  1044                           
  1045 ;; *************** function _displayRequestHandle *****************
  1046 ;; Defined at:
  1047 ;;		line 21 in file "display.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;		None
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      void 
  1054 ;; Registers used:
  1055 ;;		cstack
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1065 ;;Total ram usage:        0 bytes
  1066 ;; Hardware stack levels used: 1
  1067 ;; Hardware stack levels required when called: 8
  1068 ;; This function calls:
  1069 ;;		_displaySPI
  1070 ;;		_displaySerial
  1071 ;; This function is called by:
  1072 ;;		_main
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text12
  1077  0011E2                     __ptext12:
  1078                           	callstack 0
  1079  0011E2                     _displayRequestHandle:
  1080                           	callstack 22
  1081  0011E2                     
  1082                           ;display.c: 22:     if (FLAGS.bits.DISPLAY_SERIAL_READING) {
  1083  0011E2  AE57               	btfss	_FLAGS^0,7,c
  1084  0011E4  EFF6  F008         	goto	u121
  1085  0011E8  EFF8  F008         	goto	u120
  1086  0011EC                     u121:
  1087  0011EC  EFFD  F008         	goto	l282
  1088  0011F0                     u120:
  1089  0011F0                     
  1090                           ;display.c: 23:         displaySerial();
  1091  0011F0  EC5A  F009         	call	_displaySerial	;wreg free
  1092  0011F4                     
  1093                           ;display.c: 24:         FLAGS.bits.DISPLAY_SERIAL_READING = 0;
  1094  0011F4  9E57               	bcf	_FLAGS^0,7,c
  1095                           
  1096                           ;display.c: 25:     } else {
  1097  0011F6  EF07  F009         	goto	l285
  1098  0011FA                     l282:
  1099                           
  1100                           ;display.c: 26:         if (FLAGS.bits.DISPLAY_SPI_READING) {
  1101  0011FA  AC57               	btfss	_FLAGS^0,6,c
  1102  0011FC  EF02  F009         	goto	u131
  1103  001200  EF04  F009         	goto	u130
  1104  001204                     u131:
  1105  001204  EF07  F009         	goto	l285
  1106  001208                     u130:
  1107  001208                     
  1108                           ;display.c: 27:             displaySPI();
  1109  001208  EC5F  F009         	call	_displaySPI	;wreg free
  1110  00120C                     
  1111                           ;display.c: 28:             FLAGS.bits.DISPLAY_SPI_READING = 0;
  1112  00120C  9C57               	bcf	_FLAGS^0,6,c
  1113  00120E                     l285:
  1114  00120E  0012               	return		;funcret
  1115  001210                     __end_of_displayRequestHandle:
  1116                           	callstack 0
  1117                           
  1118 ;; *************** function _displaySerial *****************
  1119 ;; Defined at:
  1120 ;;		line 11 in file "display.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;		None
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;		None
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1138 ;;Total ram usage:        0 bytes
  1139 ;; Hardware stack levels used: 1
  1140 ;; Hardware stack levels required when called: 7
  1141 ;; This function calls:
  1142 ;;		_displayCallback
  1143 ;; This function is called by:
  1144 ;;		_displayRequestHandle
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text13
  1149  0012B4                     __ptext13:
  1150                           	callstack 0
  1151  0012B4                     _displaySerial:
  1152                           	callstack 22
  1153  0012B4                     
  1154                           ;display.c: 12:     ledValue = readSerialValue;
  1155  0012B4  C056  F055         	movff	_readSerialValue,_ledValue
  1156  0012B8                     
  1157                           ;display.c: 13:     displayCallback();
  1158  0012B8  EC8C  F009         	call	_displayCallback	;wreg free
  1159  0012BC  0012               	return		;funcret
  1160  0012BE                     __end_of_displaySerial:
  1161                           	callstack 0
  1162                           
  1163 ;; *************** function _displaySPI *****************
  1164 ;; Defined at:
  1165 ;;		line 16 in file "display.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;		None
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;		None
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      void 
  1172 ;; Registers used:
  1173 ;;		cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;Total ram usage:        0 bytes
  1184 ;; Hardware stack levels used: 1
  1185 ;; Hardware stack levels required when called: 7
  1186 ;; This function calls:
  1187 ;;		_displayCallback
  1188 ;; This function is called by:
  1189 ;;		_displayRequestHandle
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text14
  1194  0012BE                     __ptext14:
  1195                           	callstack 0
  1196  0012BE                     _displaySPI:
  1197                           	callstack 22
  1198  0012BE                     
  1199                           ;display.c: 17:     ledValue = readSPIValue;
  1200  0012BE  C058  F055         	movff	_readSPIValue,_ledValue
  1201  0012C2                     
  1202                           ;display.c: 18:     displayCallback();
  1203  0012C2  EC8C  F009         	call	_displayCallback	;wreg free
  1204  0012C6  0012               	return		;funcret
  1205  0012C8                     __end_of_displaySPI:
  1206                           	callstack 0
  1207                           
  1208 ;; *************** function _displayCallback *****************
  1209 ;; Defined at:
  1210 ;;		line 33 in file "display.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;		None
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;		None
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		None
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1228 ;;Total ram usage:        0 bytes
  1229 ;; Hardware stack levels used: 1
  1230 ;; Hardware stack levels required when called: 6
  1231 ;; This function calls:
  1232 ;;		Nothing
  1233 ;; This function is called by:
  1234 ;;		_displaySerial
  1235 ;;		_displaySPI
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           	psect	text15
  1240  001318                     __ptext15:
  1241                           	callstack 0
  1242  001318                     _displayCallback:
  1243                           	callstack 22
  1244  001318                     
  1245                           ;display.c: 34:     PORTD = ledValue;
  1246  001318  C055  FF83         	movff	_ledValue,3971	;volatile
  1247  00131C  0012               	return		;funcret
  1248  00131E                     __end_of_displayCallback:
  1249                           	callstack 0
  1250                           
  1251 ;; *************** function _buttonDebounce *****************
  1252 ;; Defined at:
  1253 ;;		line 29 in file "button.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;		None
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;		None
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg, status,2, status,0
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;Total ram usage:        0 bytes
  1272 ;; Hardware stack levels used: 1
  1273 ;; Hardware stack levels required when called: 6
  1274 ;; This function calls:
  1275 ;;		Nothing
  1276 ;; This function is called by:
  1277 ;;		_main
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           	psect	text16
  1282  001234                     __ptext16:
  1283                           	callstack 0
  1284  001234                     _buttonDebounce:
  1285                           	callstack 24
  1286  001234                     
  1287                           ;button.c: 30:     static int counter = 255;;button.c: 31:     counter--;
  1288  001234  0659               	decf	buttonDebounce@counter^0,f,c
  1289  001236  A0D8               	btfss	status,0,c
  1290  001238  065A               	decf	(buttonDebounce@counter+1)^0,f,c
  1291  00123A                     
  1292                           ;button.c: 32:     if (counter == 0) {
  1293  00123A  5059               	movf	buttonDebounce@counter^0,w,c
  1294  00123C  105A               	iorwf	(buttonDebounce@counter+1)^0,w,c
  1295  00123E  A4D8               	btfss	status,2,c
  1296  001240  EF24  F009         	goto	u161
  1297  001244  EF26  F009         	goto	u160
  1298  001248                     u161:
  1299  001248  EF2A  F009         	goto	l256
  1300  00124C                     u160:
  1301  00124C                     
  1302                           ;button.c: 33:         FLAGS.bits.PUSH_REQUEST_SERVICED = 1;
  1303  00124C  8657               	bsf	_FLAGS^0,3,c
  1304  00124E                     
  1305                           ;button.c: 34:         counter = 255;
  1306  00124E  0E00               	movlw	0
  1307  001250  6E5A               	movwf	(buttonDebounce@counter+1)^0,c
  1308  001252  6859               	setf	buttonDebounce@counter^0,c
  1309  001254                     l256:
  1310  001254  0012               	return		;funcret
  1311  001256                     __end_of_buttonDebounce:
  1312                           	callstack 0
  1313                           
  1314 ;; *************** function _buttonCallback *****************
  1315 ;; Defined at:
  1316 ;;		line 15 in file "button.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;		None
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;		None
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		wreg, cstack
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1334 ;;Total ram usage:        0 bytes
  1335 ;; Hardware stack levels used: 1
  1336 ;; Hardware stack levels required when called: 8
  1337 ;; This function calls:
  1338 ;;		_testSpiSend
  1339 ;; This function is called by:
  1340 ;;		_main
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           	psect	text17
  1345  001210                     __ptext17:
  1346                           	callstack 0
  1347  001210                     _buttonCallback:
  1348                           	callstack 22
  1349  001210                     
  1350                           ;button.c: 16:     if (FLAGS.bits.PUSH_REQUEST_SERVICED == 0 && FLAGS.bits.PUSHED_BUTTON
      +                           == 1) {
  1351  001210  B657               	btfsc	_FLAGS^0,3,c
  1352  001212  EF0D  F009         	goto	u141
  1353  001216  EF0F  F009         	goto	u140
  1354  00121A                     u141:
  1355  00121A  EF18  F009         	goto	l1096
  1356  00121E                     u140:
  1357  00121E  A857               	btfss	_FLAGS^0,4,c
  1358  001220  EF14  F009         	goto	u151
  1359  001224  EF16  F009         	goto	u150
  1360  001228                     u151:
  1361  001228  EF18  F009         	goto	l1096
  1362  00122C                     u150:
  1363  00122C                     
  1364                           ;button.c: 18:         testSpiSend();
  1365  00122C  EC6E  F009         	call	_testSpiSend	;wreg free
  1366  001230                     l1096:
  1367                           
  1368                           ;button.c: 20:     FLAGS.bits.PUSHED_BUTTON = 0;
  1369  001230  9857               	bcf	_FLAGS^0,4,c
  1370  001232  0012               	return		;funcret
  1371  001234                     __end_of_buttonCallback:
  1372                           	callstack 0
  1373                           
  1374 ;; *************** function _testSpiSend *****************
  1375 ;; Defined at:
  1376 ;;		line 65 in file "spi.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;		None
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;		None
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg, cstack
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;Total ram usage:        0 bytes
  1395 ;; Hardware stack levels used: 1
  1396 ;; Hardware stack levels required when called: 7
  1397 ;; This function calls:
  1398 ;;		_spiWrite
  1399 ;; This function is called by:
  1400 ;;		_buttonCallback
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text18
  1405  0012DC                     __ptext18:
  1406                           	callstack 0
  1407  0012DC                     _testSpiSend:
  1408                           	callstack 22
  1409  0012DC                     
  1410                           ;spi.c: 66:     spiWrite(0x88);
  1411  0012DC  0E88               	movlw	136
  1412  0012DE  EC72  F009         	call	_spiWrite
  1413  0012E2  0012               	return		;funcret
  1414  0012E4                     __end_of_testSpiSend:
  1415                           	callstack 0
  1416                           
  1417 ;; *************** function _spiWrite *****************
  1418 ;; Defined at:
  1419 ;;		line 36 in file "spi.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;  dat             1    wreg     unsigned char 
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;  dat             1    0[COMRAM] unsigned char 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      void 
  1426 ;; Registers used:
  1427 ;;		wreg
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1434 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1437 ;;Total ram usage:        1 bytes
  1438 ;; Hardware stack levels used: 1
  1439 ;; Hardware stack levels required when called: 6
  1440 ;; This function calls:
  1441 ;;		Nothing
  1442 ;; This function is called by:
  1443 ;;		_testSpiSend
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text19
  1448  0012E4                     __ptext19:
  1449                           	callstack 0
  1450  0012E4                     _spiWrite:
  1451                           	callstack 22
  1452                           
  1453                           ;incstack = 0
  1454                           ;spiWrite@dat stored from wreg
  1455  0012E4  6E01               	movwf	spiWrite@dat^0,c
  1456  0012E6                     
  1457                           ;spi.c: 36: void spiWrite(char dat);spi.c: 37: {;spi.c: 38:     SSP1BUF = dat;
  1458  0012E6  C001  FFC9         	movff	spiWrite@dat,4041	;volatile
  1459  0012EA  0012               	return		;funcret
  1460  0012EC                     __end_of_spiWrite:
  1461                           	callstack 0
  1462                           
  1463 ;; *************** function _SPICallback *****************
  1464 ;; Defined at:
  1465 ;;		line 61 in file "spi.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;		None
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;		None
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  1    wreg      void 
  1472 ;; Registers used:
  1473 ;;		None
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1483 ;;Total ram usage:        0 bytes
  1484 ;; Hardware stack levels used: 1
  1485 ;; Hardware stack levels required when called: 6
  1486 ;; This function calls:
  1487 ;;		Nothing
  1488 ;; This function is called by:
  1489 ;;		_main
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           	psect	text20
  1494  001328                     __ptext20:
  1495                           	callstack 0
  1496  001328                     _SPICallback:
  1497                           	callstack 24
  1498  001328                     
  1499                           ;spi.c: 63:     FLAGS.bits.DISPLAY_READING = 1;
  1500  001328  8A57               	bsf	_FLAGS^0,5,c
  1501  00132A  0012               	return		;funcret
  1502  00132C                     __end_of_SPICallback:
  1503                           	callstack 0
  1504                           
  1505 ;; *************** function _service *****************
  1506 ;; Defined at:
  1507 ;;		line 18 in file "newmain.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;		None
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;		None
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      void 
  1514 ;; Registers used:
  1515 ;;		wreg, status,2, cstack
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;Total ram usage:        0 bytes
  1526 ;; Hardware stack levels used: 1
  1527 ;; Hardware stack levels required when called: 5
  1528 ;; This function calls:
  1529 ;;		_interruptService
  1530 ;; This function is called by:
  1531 ;;		Interrupt level 2
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           	psect	intcode
  1536  000008                     __pintcode:
  1537                           	callstack 0
  1538  000008                     _service:
  1539                           	callstack 22
  1540                           
  1541                           ;incstack = 0
  1542  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1543  00000A  ED64  F009         	call	int_func,f	;refresh shadow registers
  1544                           
  1545                           	psect	intcode_body
  1546  0012C8                     __pintcode_body:
  1547                           	callstack 22
  1548  0012C8                     int_func:
  1549                           	callstack 22
  1550  0012C8  0006               	pop		; remove dummy address from shadow register refresh
  1551  0012CA                     
  1552                           ;newmain.c: 19:     interruptService();
  1553  0012CA  EC8F  F009         	call	_interruptService	;wreg free
  1554  0012CE  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1555  0012D0  0011               	retfie		f
  1556  0012D2                     __end_of_service:
  1557                           	callstack 0
  1558                           
  1559 ;; *************** function _interruptService *****************
  1560 ;; Defined at:
  1561 ;;		line 28 in file "interruptService.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;		None
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;		None
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		wreg, status,2, cstack
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1579 ;;Total ram usage:        0 bytes
  1580 ;; Hardware stack levels used: 1
  1581 ;; Hardware stack levels required when called: 4
  1582 ;; This function calls:
  1583 ;;		_processInterruptService
  1584 ;; This function is called by:
  1585 ;;		_service
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           	psect	text22
  1590  00131E                     __ptext22:
  1591                           	callstack 0
  1592  00131E                     _interruptService:
  1593                           	callstack 22
  1594  00131E                     
  1595                           ;interruptService.c: 29:     processInterruptService();
  1596  00131E  EC83  F008         	call	_processInterruptService	;wreg free
  1597  001322  0012               	return		;funcret
  1598  001324                     __end_of_interruptService:
  1599                           	callstack 0
  1600                           
  1601 ;; *************** function _processInterruptService *****************
  1602 ;; Defined at:
  1603 ;;		line 13 in file "interruptService.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;		None
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;		None
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  1    wreg      void 
  1610 ;; Registers used:
  1611 ;;		wreg, status,2, cstack
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1621 ;;Total ram usage:        0 bytes
  1622 ;; Hardware stack levels used: 1
  1623 ;; Hardware stack levels required when called: 3
  1624 ;; This function calls:
  1625 ;;		_SPIHandle
  1626 ;;		_buttonHandle
  1627 ;;		_serialHandle
  1628 ;; This function is called by:
  1629 ;;		_interruptService
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           	psect	text23
  1634  001106                     __ptext23:
  1635                           	callstack 0
  1636  001106                     _processInterruptService:
  1637                           	callstack 22
  1638  001106                     
  1639                           ;interruptService.c: 14:     if (SSP1IE == 1 && SSP1IF == 1) {
  1640  001106  A69D               	btfss	3997,3,c	;volatile
  1641  001108  EF88  F008         	goto	i2u4_41
  1642  00110C  EF8A  F008         	goto	i2u4_40
  1643  001110                     i2u4_41:
  1644  001110  EF94  F008         	goto	i2l1006
  1645  001114                     i2u4_40:
  1646  001114  A69E               	btfss	3998,3,c	;volatile
  1647  001116  EF8F  F008         	goto	i2u5_41
  1648  00111A  EF91  F008         	goto	i2u5_40
  1649  00111E                     i2u5_41:
  1650  00111E  EF94  F008         	goto	i2l1006
  1651  001122                     i2u5_40:
  1652  001122                     
  1653                           ;interruptService.c: 15:         SPIHandle();
  1654  001122  EC4F  F009         	call	_SPIHandle	;wreg free
  1655  001126                     
  1656                           ;interruptService.c: 16:         SSP1IF = 0;
  1657  001126  969E               	bcf	3998,3,c	;volatile
  1658  001128                     i2l1006:
  1659                           
  1660                           ;interruptService.c: 18:     if (RC1IE == 1 && RC1IF == 1 && FLAGS.bits.UART_RECEIVED ==
      +                           0) {
  1661  001128  AA9D               	btfss	3997,5,c	;volatile
  1662  00112A  EF99  F008         	goto	i2u6_41
  1663  00112E  EF9B  F008         	goto	i2u6_40
  1664  001132                     i2u6_41:
  1665  001132  EFAC  F008         	goto	i2l1016
  1666  001136                     i2u6_40:
  1667  001136  AA9E               	btfss	3998,5,c	;volatile
  1668  001138  EFA0  F008         	goto	i2u7_41
  1669  00113C  EFA2  F008         	goto	i2u7_40
  1670  001140                     i2u7_41:
  1671  001140  EFAC  F008         	goto	i2l1016
  1672  001144                     i2u7_40:
  1673  001144  B457               	btfsc	_FLAGS^0,2,c
  1674  001146  EFA7  F008         	goto	i2u8_41
  1675  00114A  EFA9  F008         	goto	i2u8_40
  1676  00114E                     i2u8_41:
  1677  00114E  EFAC  F008         	goto	i2l1016
  1678  001152                     i2u8_40:
  1679  001152                     
  1680                           ;interruptService.c: 19:         serialHandle();
  1681  001152  EC69  F009         	call	_serialHandle	;wreg free
  1682  001156                     
  1683                           ;interruptService.c: 20:         RC1IF = 0;
  1684  001156  9A9E               	bcf	3998,5,c	;volatile
  1685  001158                     i2l1016:
  1686                           
  1687                           ;interruptService.c: 22:     if (INTEDG0 == 1 && INT0IF == 1) {
  1688  001158  ACF1               	btfss	4081,6,c	;volatile
  1689  00115A  EFB1  F008         	goto	i2u9_41
  1690  00115E  EFB3  F008         	goto	i2u9_40
  1691  001162                     i2u9_41:
  1692  001162  EFBD  F008         	goto	i2l167
  1693  001166                     i2u9_40:
  1694  001166  A2F2               	btfss	4082,1,c	;volatile
  1695  001168  EFB8  F008         	goto	i2u10_41
  1696  00116C  EFBA  F008         	goto	i2u10_40
  1697  001170                     i2u10_41:
  1698  001170  EFBD  F008         	goto	i2l167
  1699  001174                     i2u10_40:
  1700  001174                     
  1701                           ;interruptService.c: 23:         buttonHandle();
  1702  001174  EC2B  F009         	call	_buttonHandle	;wreg free
  1703  001178                     
  1704                           ;interruptService.c: 24:         INT0IF = 0;
  1705  001178  92F2               	bcf	4082,1,c	;volatile
  1706  00117A                     i2l167:
  1707  00117A  0012               	return		;funcret
  1708  00117C                     __end_of_processInterruptService:
  1709                           	callstack 0
  1710                           
  1711 ;; *************** function _serialHandle *****************
  1712 ;; Defined at:
  1713 ;;		line 28 in file "serial.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		wreg, status,2, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;Total ram usage:        0 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; Hardware stack levels required when called: 1
  1734 ;; This function calls:
  1735 ;;		_readSerial
  1736 ;; This function is called by:
  1737 ;;		_processInterruptService
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text24
  1742  0012D2                     __ptext24:
  1743                           	callstack 0
  1744  0012D2                     _serialHandle:
  1745                           	callstack 23
  1746  0012D2                     
  1747                           ;serial.c: 29:     FLAGS.bits.UART_RECEIVED = 1;
  1748  0012D2  8457               	bsf	_FLAGS^0,2,c
  1749  0012D4                     
  1750                           ;serial.c: 30:     readSerialValue = readSerial();
  1751  0012D4  EC96  F009         	call	_readSerial	;wreg free
  1752  0012D8  6E56               	movwf	_readSerialValue^0,c
  1753  0012DA  0012               	return		;funcret
  1754  0012DC                     __end_of_serialHandle:
  1755                           	callstack 0
  1756                           
  1757 ;; *************** function _readSerial *****************
  1758 ;; Defined at:
  1759 ;;		line 41 in file "serial.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;		None
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;		None
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  1    wreg      unsigned char 
  1766 ;; Registers used:
  1767 ;;		wreg, status,2
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1777 ;;Total ram usage:        0 bytes
  1778 ;; Hardware stack levels used: 1
  1779 ;; This function calls:
  1780 ;;		Nothing
  1781 ;; This function is called by:
  1782 ;;		_serialHandle
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           	psect	text25
  1787  00132C                     __ptext25:
  1788                           	callstack 0
  1789  00132C                     _readSerial:
  1790                           	callstack 23
  1791  00132C                     
  1792                           ;serial.c: 42:     return RCREG1;
  1793  00132C  50AE               	movf	174,w,c	;volatile
  1794  00132E  0012               	return		;funcret
  1795  001330                     __end_of_readSerial:
  1796                           	callstack 0
  1797                           
  1798 ;; *************** function _buttonHandle *****************
  1799 ;; Defined at:
  1800 ;;		line 23 in file "button.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;		None
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;		None
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      void 
  1807 ;; Registers used:
  1808 ;;		None
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;Total ram usage:        0 bytes
  1819 ;; Hardware stack levels used: 1
  1820 ;; This function calls:
  1821 ;;		Nothing
  1822 ;; This function is called by:
  1823 ;;		_processInterruptService
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           	psect	text26
  1828  001256                     __ptext26:
  1829                           	callstack 0
  1830  001256                     _buttonHandle:
  1831                           	callstack 24
  1832  001256                     
  1833                           ;button.c: 24:     if (FLAGS.bits.PUSH_REQUEST_SERVICED == 1 && FLAGS.bits.PUSHED_BUTTON
      +                           == 0) {
  1834  001256  A657               	btfss	_FLAGS^0,3,c
  1835  001258  EF30  F009         	goto	i2u2_41
  1836  00125C  EF32  F009         	goto	i2u2_40
  1837  001260                     i2u2_41:
  1838  001260  EF3A  F009         	goto	i2l250
  1839  001264                     i2u2_40:
  1840  001264  B857               	btfsc	_FLAGS^0,4,c
  1841  001266  EF37  F009         	goto	i2u3_41
  1842  00126A  EF39  F009         	goto	i2u3_40
  1843  00126E                     i2u3_41:
  1844  00126E  EF3A  F009         	goto	i2l250
  1845  001272                     i2u3_40:
  1846  001272                     
  1847                           ;button.c: 25:         FLAGS.bits.PUSHED_BUTTON = 1;
  1848  001272  8857               	bsf	_FLAGS^0,4,c
  1849  001274                     i2l250:
  1850  001274  0012               	return		;funcret
  1851  001276                     __end_of_buttonHandle:
  1852                           	callstack 0
  1853                           
  1854 ;; *************** function _SPIHandle *****************
  1855 ;; Defined at:
  1856 ;;		line 55 in file "spi.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;		None
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;		None
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  1    wreg      void 
  1863 ;; Registers used:
  1864 ;;		wreg, status,2, cstack
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1874 ;;Total ram usage:        0 bytes
  1875 ;; Hardware stack levels used: 1
  1876 ;; Hardware stack levels required when called: 2
  1877 ;; This function calls:
  1878 ;;		_spiRead
  1879 ;; This function is called by:
  1880 ;;		_processInterruptService
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           	psect	text27
  1885  00129E                     __ptext27:
  1886                           	callstack 0
  1887  00129E                     _SPIHandle:
  1888                           	callstack 22
  1889  00129E                     
  1890                           ;spi.c: 56:     readSPIValue = spiRead();
  1891  00129E  EC76  F009         	call	_spiRead	;wreg free
  1892  0012A2  6E58               	movwf	_readSPIValue^0,c
  1893  0012A4                     
  1894                           ;spi.c: 57:     FLAGS.bits.SPI_READ_REQUEST = 1;
  1895  0012A4  8257               	bsf	_FLAGS^0,1,c
  1896  0012A6                     
  1897                           ;spi.c: 58:     FLAGS.bits.DISPLAY_SPI_READING = 1;
  1898  0012A6  8C57               	bsf	_FLAGS^0,6,c
  1899  0012A8  0012               	return		;funcret
  1900  0012AA                     __end_of_SPIHandle:
  1901                           	callstack 0
  1902                           
  1903 ;; *************** function _spiRead *****************
  1904 ;; Defined at:
  1905 ;;		line 49 in file "spi.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;		None
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;		None
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      unsigned char 
  1912 ;; Registers used:
  1913 ;;		wreg, status,2, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1923 ;;Total ram usage:        0 bytes
  1924 ;; Hardware stack levels used: 1
  1925 ;; Hardware stack levels required when called: 1
  1926 ;; This function calls:
  1927 ;;		_spiReceiveWait
  1928 ;; This function is called by:
  1929 ;;		_SPIHandle
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text28
  1934  0012EC                     __ptext28:
  1935                           	callstack 0
  1936  0012EC                     _spiRead:
  1937                           	callstack 22
  1938  0012EC                     
  1939                           ;spi.c: 51:     spiReceiveWait();
  1940  0012EC  EC47  F009         	call	_spiReceiveWait	;wreg free
  1941  0012F0                     
  1942                           ;spi.c: 52:     return (SSP1BUF);
  1943  0012F0  50C9               	movf	201,w,c	;volatile
  1944  0012F2  0012               	return		;funcret
  1945  0012F4                     __end_of_spiRead:
  1946                           	callstack 0
  1947                           
  1948 ;; *************** function _spiReceiveWait *****************
  1949 ;; Defined at:
  1950 ;;		line 32 in file "spi.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;		None
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;		None
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      void 
  1957 ;; Registers used:
  1958 ;;		None
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;Total ram usage:        0 bytes
  1969 ;; Hardware stack levels used: 1
  1970 ;; This function calls:
  1971 ;;		Nothing
  1972 ;; This function is called by:
  1973 ;;		_spiRead
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           	psect	text29
  1978  00128E                     __ptext29:
  1979                           	callstack 0
  1980  00128E                     _spiReceiveWait:
  1981                           	callstack 22
  1982  00128E                     i2l97:
  1983  00128E  A0C7               	btfss	199,0,c	;volatile
  1984  001290  EF4C  F009         	goto	i2u1_41
  1985  001294  EF4E  F009         	goto	i2u1_40
  1986  001298                     i2u1_41:
  1987  001298  EF47  F009         	goto	i2l97
  1988  00129C                     i2u1_40:
  1989  00129C  0012               	return		;funcret
  1990  00129E                     __end_of_spiReceiveWait:
  1991                           	callstack 0
  1992                           
  1993                           	psect	rparam
  1994  0000                     
  1995                           	psect	temp
  1996  00005B                     btemp:
  1997                           	callstack 0
  1998  00005B                     	ds	1
  1999  0000                     int$flags	set	btemp
  2000  0000                     wtemp8	set	btemp+1
  2001  0000                     ttemp5	set	btemp+1
  2002  0000                     ttemp6	set	btemp+4
  2003  0000                     ttemp7	set	btemp+8
  2004                           
  2005                           	psect	idloc
  2006                           
  2007                           ;Config register IDLOC0 @ 0x200000
  2008                           ;	unspecified, using default values
  2009  200000                     	org	2097152
  2010  200000  FF                 	db	255
  2011                           
  2012                           ;Config register IDLOC1 @ 0x200001
  2013                           ;	unspecified, using default values
  2014  200001                     	org	2097153
  2015  200001  FF                 	db	255
  2016                           
  2017                           ;Config register IDLOC2 @ 0x200002
  2018                           ;	unspecified, using default values
  2019  200002                     	org	2097154
  2020  200002  FF                 	db	255
  2021                           
  2022                           ;Config register IDLOC3 @ 0x200003
  2023                           ;	unspecified, using default values
  2024  200003                     	org	2097155
  2025  200003  FF                 	db	255
  2026                           
  2027                           ;Config register IDLOC4 @ 0x200004
  2028                           ;	unspecified, using default values
  2029  200004                     	org	2097156
  2030  200004  FF                 	db	255
  2031                           
  2032                           ;Config register IDLOC5 @ 0x200005
  2033                           ;	unspecified, using default values
  2034  200005                     	org	2097157
  2035  200005  FF                 	db	255
  2036                           
  2037                           ;Config register IDLOC6 @ 0x200006
  2038                           ;	unspecified, using default values
  2039  200006                     	org	2097158
  2040  200006  FF                 	db	255
  2041                           
  2042                           ;Config register IDLOC7 @ 0x200007
  2043                           ;	unspecified, using default values
  2044  200007                     	org	2097159
  2045  200007  FF                 	db	255
  2046                           
  2047                           	psect	config
  2048                           
  2049                           ; Padding undefined space
  2050  300000                     	org	3145728
  2051  300000  FF                 	db	255
  2052                           
  2053                           ;Config register CONFIG1H @ 0x300001
  2054                           ;	Oscillator Selection bits
  2055                           ;	OSC = XT, XT oscillator
  2056                           ;	Fail-Safe Clock Monitor Enable bit
  2057                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2058                           ;	Internal/External Oscillator Switchover bit
  2059                           ;	IESO = OFF, Two-Speed Start-up disabled
  2060  300001                     	org	3145729
  2061  300001  01                 	db	1
  2062                           
  2063                           ;Config register CONFIG2L @ 0x300002
  2064                           ;	Power-up Timer Enable bit
  2065                           ;	PWRT = OFF, PWRT disabled
  2066                           ;	Brown-out Reset Enable bits
  2067                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2068                           ;	Brown-out Voltage bits
  2069                           ;	BORV = 3, Minimum setting
  2070  300002                     	org	3145730
  2071  300002  19                 	db	25
  2072                           
  2073                           ;Config register CONFIG2H @ 0x300003
  2074                           ;	Watchdog Timer
  2075                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2076                           ;	Watchdog Timer Postscale Select bits
  2077                           ;	WDTPS = 32768, 1:32768
  2078  300003                     	org	3145731
  2079  300003  1E                 	db	30
  2080                           
  2081                           ;Config register CONFIG3L @ 0x300004
  2082                           ;	Processor Data Memory Mode Select bits
  2083                           ;	MODE = MC, Microcontroller mode
  2084                           ;	Address Bus Width Select bits
  2085                           ;	ADDRBW = ADDR20BIT, 20-bit Address Bus
  2086                           ;	Data Bus Width Select bit
  2087                           ;	DATABW = DATA16BIT, 16-bit External Bus mode
  2088                           ;	External Bus Data Wait Enable bit
  2089                           ;	WAIT = OFF, Wait selections are unavailable for table reads and table writes
  2090  300004                     	org	3145732
  2091  300004  F3                 	db	243
  2092                           
  2093                           ;Config register CONFIG3H @ 0x300005
  2094                           ;	CCP2 MUX bit
  2095                           ;	CCP2MX = PORTC, ECCP2 input/output is multiplexed with RC1
  2096                           ;	ECCP MUX bit
  2097                           ;	ECCPMX = PORTE, ECCP1/3 (P1B/P1C/P3B/P3C) are multiplexed onto RE6, RE5, RE4 and RE3 r
      +                          espectively
  2098                           ;	Low-Power Timer1 Oscillator Enable bit
  2099                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2100                           ;	MCLR Pin Enable bit
  2101                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
  2102  300005                     	org	3145733
  2103  300005  83                 	db	131
  2104                           
  2105                           ;Config register CONFIG4L @ 0x300006
  2106                           ;	Stack Full/Underflow Reset Enable bit
  2107                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2108                           ;	Single-Supply ICSP Enable bit
  2109                           ;	LVP = OFF, Single-Supply ICSP disabled
  2110                           ;	Boot Block Size Select bits
  2111                           ;	BBSIZ = BB2K, 1K word (2 Kbytes) Boot Block size
  2112                           ;	Extended Instruction Set Enable bit
  2113                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2114                           ;	Background Debugger Enable bit
  2115                           ;	DEBUG = 0x1, unprogrammed default
  2116  300006                     	org	3145734
  2117  300006  81                 	db	129
  2118                           
  2119                           ; Padding undefined space
  2120  300007                     	org	3145735
  2121  300007  FF                 	db	255
  2122                           
  2123                           ;Config register CONFIG5L @ 0x300008
  2124                           ;	Code Protection bit Block 0
  2125                           ;	CP0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not code-protected
  2126                           ;	Code Protection bit Block 1
  2127                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2128                           ;	Code Protection bit Block 2
  2129                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2130                           ;	Code Protection bit Block 3
  2131                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2132                           ;	Code Protection bit Block 4
  2133                           ;	CP4 = OFF, Block 4 (010000-013FFFh) not code-protected
  2134                           ;	Code Protection bit Block 5
  2135                           ;	CP5 = OFF, Block 5 (014000-017FFFh) not code-protected
  2136                           ;	Code Protection bit Block 6
  2137                           ;	CP6 = OFF, Block 6 (01BFFF-018000h) not code-protected
  2138                           ;	Code Protection bit Block 7
  2139                           ;	CP7 = OFF, Block 7 (01C000-01FFFFh) not code-protected
  2140  300008                     	org	3145736
  2141  300008  FF                 	db	255
  2142                           
  2143                           ;Config register CONFIG5H @ 0x300009
  2144                           ;	Boot Block Code Protection bit
  2145                           ;	CPB = OFF, Boot Block (000000-0007FFh) not code-protected
  2146                           ;	Data EEPROM Code Protection bit
  2147                           ;	CPD = OFF, Data EEPROM not code-protected
  2148  300009                     	org	3145737
  2149  300009  C0                 	db	192
  2150                           
  2151                           ;Config register CONFIG6L @ 0x30000A
  2152                           ;	Write Protection bit Block 0
  2153                           ;	WRT0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not write-protected
  2154                           ;	Write Protection bit Block 1
  2155                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2156                           ;	Write Protection bit Block 2
  2157                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2158                           ;	Write Protection bit Block 3
  2159                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2160                           ;	Write Protection bit Block 4
  2161                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  2162                           ;	Write Protection bit Block 5
  2163                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  2164                           ;	Write Protection bit Block 6
  2165                           ;	WRT6 = OFF, Block 6 (01BFFF-018000h) not write-protected
  2166                           ;	Write Protection bit Block 7
  2167                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  2168  30000A                     	org	3145738
  2169  30000A  FF                 	db	255
  2170                           
  2171                           ;Config register CONFIG6H @ 0x30000B
  2172                           ;	Configuration Register Write Protection bit
  2173                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2174                           ;	Boot Block Write Protection bit
  2175                           ;	WRTB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not write-protected
  2176                           ;	Data EEPROM Write Protection bit
  2177                           ;	WRTD = OFF, Data EEPROM not write-protected
  2178  30000B                     	org	3145739
  2179  30000B  E0                 	db	224
  2180                           
  2181                           ;Config register CONFIG7L @ 0x30000C
  2182                           ;	Table Read Protection bit Block 0
  2183                           ;	EBTR0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not protected from table reads
      +                           executed in other blocks
  2184                           ;	Table Read Protection bit Block 1
  2185                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2186                           ;	Table Read Protection bit Block 2
  2187                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2188                           ;	Table Read Protection bit Block 3
  2189                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2190                           ;	Table Read Protection bit Block 4
  2191                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  2192                           ;	Table Read Protection bit Block 5
  2193                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  2194                           ;	Table Read Protection bit Block 6
  2195                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  2196                           ;	Table Read Protection bit Block 7
  2197                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  2198  30000C                     	org	3145740
  2199  30000C  FF                 	db	255
  2200                           
  2201                           ;Config register CONFIG7H @ 0x30000D
  2202                           ;	Boot Block Table Read Protection bit
  2203                           ;	EBTRB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not protected from table re
      +                          ads executed in other blocks
  2204  30000D                     	org	3145741
  2205  30000D  40                 	db	64
  2206                           tosu	equ	0xFFF
  2207                           tosh	equ	0xFFE
  2208                           tosl	equ	0xFFD
  2209                           stkptr	equ	0xFFC
  2210                           pclatu	equ	0xFFB
  2211                           pclath	equ	0xFFA
  2212                           pcl	equ	0xFF9
  2213                           tblptru	equ	0xFF8
  2214                           tblptrh	equ	0xFF7
  2215                           tblptrl	equ	0xFF6
  2216                           tablat	equ	0xFF5
  2217                           prodh	equ	0xFF4
  2218                           prodl	equ	0xFF3
  2219                           indf0	equ	0xFEF
  2220                           postinc0	equ	0xFEE
  2221                           postdec0	equ	0xFED
  2222                           preinc0	equ	0xFEC
  2223                           plusw0	equ	0xFEB
  2224                           fsr0h	equ	0xFEA
  2225                           fsr0l	equ	0xFE9
  2226                           wreg	equ	0xFE8
  2227                           indf1	equ	0xFE7
  2228                           postinc1	equ	0xFE6
  2229                           postdec1	equ	0xFE5
  2230                           preinc1	equ	0xFE4
  2231                           plusw1	equ	0xFE3
  2232                           fsr1h	equ	0xFE2
  2233                           fsr1l	equ	0xFE1
  2234                           bsr	equ	0xFE0
  2235                           indf2	equ	0xFDF
  2236                           postinc2	equ	0xFDE
  2237                           postdec2	equ	0xFDD
  2238                           preinc2	equ	0xFDC
  2239                           plusw2	equ	0xFDB
  2240                           fsr2h	equ	0xFDA
  2241                           fsr2l	equ	0xFD9
  2242                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    80
    Data        2
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      90
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_spiInit
    _testSpiSend->_spiWrite

Critical Paths under _service in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _service in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _service in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _service in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _service in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _service in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _service in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _service in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _service in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _service in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _service in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _service in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _service in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _service in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _service in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _service in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _service in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                80    80      0     376
                                              4 COMRAM    80    80      0
                        _SPICallback
                     _buttonCallback
                     _buttonDebounce
               _displayRequestHandle
                   _initialiseButton
                     _serialCallback
                 _setButtonInterrput
                        _setButtonIo
                      _setInterrupts
                              _setIo
                    _setSPIInterrupt
                          _setSerial
                        _setSerialIo
                     _setupDisplayIo
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setupDisplayIo                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSerialIo                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSerial                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSPIInterrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setIo                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setInterrupts                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setButtonIo                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setButtonInterrput                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _serialCallback                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialiseButton                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displayRequestHandle                                 0     0      0       0
                         _displaySPI
                      _displaySerial
 ---------------------------------------------------------------------------------
 (2) _displaySerial                                        0     0      0       0
                    _displayCallback
 ---------------------------------------------------------------------------------
 (2) _displaySPI                                           0     0      0       0
                    _displayCallback
 ---------------------------------------------------------------------------------
 (3) _displayCallback                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttonDebounce                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttonCallback                                       0     0      0      15
                        _testSpiSend
 ---------------------------------------------------------------------------------
 (2) _testSpiSend                                          0     0      0      15
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPICallback                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _service                                              0     0      0       0
                   _interruptService
 ---------------------------------------------------------------------------------
 (5) _interruptService                                     0     0      0       0
            _processInterruptService
 ---------------------------------------------------------------------------------
 (6) _processInterruptService                              0     0      0       0
                          _SPIHandle
                       _buttonHandle
                       _serialHandle
 ---------------------------------------------------------------------------------
 (7) _serialHandle                                         0     0      0       0
                         _readSerial
 ---------------------------------------------------------------------------------
 (8) _readSerial                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _buttonHandle                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _SPIHandle                                            0     0      0       0
                            _spiRead
 ---------------------------------------------------------------------------------
 (8) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (9) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPICallback
   _buttonCallback
     _testSpiSend
       _spiWrite
   _buttonDebounce
   _displayRequestHandle
     _displaySPI
       _displayCallback
     _displaySerial
       _displayCallback
   _initialiseButton
   _serialCallback
   _setButtonInterrput
   _setButtonIo
   _setInterrupts
   _setIo
   _setSPIInterrupt
   _setSerial
   _setSerialIo
   _setupDisplayIo
   _spiInit

 _service (ROOT)
   _interruptService
     _processInterruptService
       _SPIHandle
         _spiRead
           _spiReceiveWait
       _buttonHandle
       _serialHandle
         _readSerial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      5A       1       95.7%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5A       6        0.0%
DATA                 0      0      5A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jul  6 17:30:35 2021

        ?_processInterruptService 0001                                l93 11A8  
                              l94 11AE                                l89 12FE  
                             l103 12EA                               l120 12E2  
                             l211 1310                               l131 1332  
                             l117 132A                               l205 128C  
                             l134 1304                               l208 12F8  
                             l137 130A                               l242 1316  
                             l246 1232                               l239 1326  
                             l256 1254                               l273 12B2  
                             l282 11FA                               l276 12BC  
                             l285 120E                               l279 12C6  
                             l288 131C                               l976 12E6  
                             l994 1318                               _GIE 007F97  
                             l996 12DC                               u120 11F0  
                             u121 11EC                               u130 1208  
                             u131 1204                               u140 121E  
                             u141 121A                               u150 122C  
                             u230 1190                               u151 1228  
                             u231 118C                               u160 124C  
                             u240 1092                               u161 1248  
                             u250 10AA                               u251 10A6  
                             u260 10BE                               u261 10BA  
                             u270 10D2                               u271 10CE  
                             u280 10E6                               u281 10E2  
                             u290 10FA                               u291 10F6  
                             wreg 000FE8                    ?_displaySerial 0001  
          ??_displayRequestHandle 0001                              l1100 123A  
                            l1102 124C                              l1030 12C2  
                            l1104 124E                              l1024 12B4  
                            l1040 1278                              l1200 10E6  
                            l1026 12B8                              l1034 12FA  
                            l1050 1284                              l1042 127C  
                            l1202 10E8                              l1028 12BE  
                            l1060 1324                              l1052 1286  
                            l1044 127E                              l1036 12F4  
                            l1204 10EC                              l1062 1300  
                            l1046 1280                              l1038 1276  
                            l1054 12AA                              l1206 10FA  
                            l1080 11F0                              l1056 1312  
                            l1048 1282                              l1160 1182  
                            l1090 1210                              l1082 11F4  
                            l1058 1306                              l1162 1190  
                            l1170 1052                              l1076 1328  
                            l1092 121E                              l1084 1208  
                            l1164 119E                              l1180 109C  
                            l1172 105E                              l1094 122C  
                            l1086 120C                              l1078 11E2  
                            l1166 11A4                              l1158 117E  
                            l1190 10C2                              l1182 10AA  
                            l1174 1062                              l1096 1230  
                            l1088 130C                              l1168 11A6  
                            l1192 10C4                              l1184 10AE  
                            l1176 1076                              l1098 1234  
                            l1194 10D2                              l1186 10B0  
                            l1178 1088                              l1196 10D6  
                            l1188 10BE                              l1198 10D8  
                            _PEIE 007F96                              i2l45 12CE  
                            i2l97 128E                              _main 1052  
                            btemp 005B                              start 000E  
                    ___param_bank 000000          __end_of_interruptService 1324  
                           ?_main 0001                             _BRGH1 007D62  
                           _CREN1 007D5C                             _FLAGS 0057  
                           _LATC0 007C58                             _RC1IE 007CED  
                           _RC1IF 007CF5                             i2l100 129C  
                           i2l111 12F2                             i2l114 12A8  
                           i2l214 12DA                             i2l223 132E  
                           i2l250 1274                             i2l170 1322  
                           i2l167 117A                             i2l964 128E  
                           i2l980 12A4                             i2l972 132C  
                           i2l966 12EC                             i2l982 12A6  
                           i2l990 1264                             i2l968 12F0  
                           i2l992 1272                             i2l984 12D2  
                           i2l978 129E                             i2l986 12D4  
                           i2l988 1256                             i2l998 1106  
                           _SPEN1 007D5F                             _SPBRG 000FAF  
                           _PORTD 000F83                             _TRISD 000F95  
                           _TXEN1 007D65                             _SYNC1 007D64  
                           _setIo 1332                  ?_displayCallback 0001  
              __size_of_SPIHandle 000C                   __end_of_spiInit 11B0  
                 __end_of_spiRead 12F4                             tablat 000FF5  
                 __end_of_service 12D2                             ttemp5 005C  
                           ttemp6 005F                             ttemp7 0063  
                           status 000FD8             __end_of_setInterrupts 1306  
                           wtemp8 005C                  ??_setupDisplayIo 0001  
                 __initialization 11B0                      __end_of_main 1106  
                 _readSerialValue 0056                            ??_main 0005  
                   __activetblptr 000001                      ?_setButtonIo 0001  
                 ??_displaySerial 0001                 ?_initialiseButton 0001  
                    ?_setSerialIo 0001                            ?_setIo 0001  
              ??_initialiseButton 0001                     ?_buttonHandle 0001  
                          _INT0IE 007F94                            _INT0IF 007F91  
                          i2l1000 1114                            i2l1010 1144  
                          i2l1002 1122                            i2l1020 1174  
                          i2l1012 1152                            i2l1004 1126  
                          i2l1022 1178                            i2l1014 1156  
                          i2l1006 1128                            i2l1008 1136  
                          i2l1016 1158                            i2l1032 131E  
                          i2l1018 1166                            i2l1106 12CA  
                          _RCREG1 000FAE                            _SSP1IE 007CEB  
                          i2u1_40 129C                            _SSP1IF 007CF3  
                          i2u1_41 1298                            i2u2_40 1264  
                          i2u2_41 1260                            i2u3_40 1272  
                          i2u3_41 126E                            i2u4_40 1114  
                          i2u4_41 1110                            i2u5_40 1122  
                          i2u5_41 111E                            i2u6_40 1136  
                          i2u6_41 1132                            i2u7_40 1144  
                          i2u7_41 1140                            i2u8_40 1152  
                          i2u8_41 114E                            _TRISB0 007C98  
                          i2u9_40 1166                            _TRISC2 007CA2  
                          i2u9_41 1162                            _TRISC3 007CA3  
                          _TRISC4 007CA4                            _TRISC5 007CA5  
                          _TRISC6 007CA6                            _TRISC7 007CA7  
                          _TXREG1 000FAD                _setButtonInterrput 1306  
             ?_setButtonInterrput 0001                 __end_of_SPIHandle 12AA  
         __size_of_serialCallback 0006                            isa$std 000001  
                    __pdataCOMRAM 0059                      ?_SPICallback 0001  
                    __mediumconst 0000                  __end_of_spiWrite 12EC  
                    ?_testSpiSend 0001                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                       ??_spiInit 0004                         ??_spiRead 0001  
                       ??_service 0001                    ??_buttonHandle 0001  
            ??_setButtonInterrput 0001                        __accesstop 0060  
         __end_of__initialization 11D0                     ___rparam_used 000001  
                  __pcstackCOMRAM 0001                     __end_of_setIo 1334  
        __size_of_setSPIInterrupt 0006  __size_of_processInterruptService 0076  
                         ??_setIo 0001                 ?_interruptService 0001  
         __size_of_spiReceiveWait 0010                __size_of_setSerial 0018  
              ??_interruptService 0001                           _INTEDG0 007F8E  
                         i2u10_40 1174                           i2u10_41 1170  
            __size_of_setButtonIo 0004                           _SSP1BUF 000FC9  
                      _displaySPI 12BE           __size_of_buttonCallback 0024  
            __size_of_setSerialIo 0006           __size_of_buttonDebounce 0022  
   __size_of_displayRequestHandle 002E                     ?_serialHandle 0001  
                         __Hparam 0000                           __Lparam 0000  
                       ?_spiWrite 0001                        _readSerial 132C  
            __end_of_buttonHandle 1276                      __psmallconst 1000  
                  _serialCallback 130C                           __pcinit 11B0  
                         __ramtop 1000                           __ptext0 1052  
                         __ptext1 117C                           __ptext2 12AA  
                         __ptext3 12F4                           __ptext4 1276  
                         __ptext5 12FA                           __ptext6 1332  
                         __ptext7 1300                           __ptext8 1324  
                         __ptext9 1306                           _spiInit 117C  
                         _spiRead 12EC                           _service 0008  
            __size_of_SPICallback 0004              __size_of_testSpiSend 0008  
                  __pintcode_body 12C8              end_of_initialization 11D0  
               __end_of_setSerial 128E                    ??_serialHandle 0001  
                         int_func 12C8                 ??_setSPIInterrupt 0001  
               __end_ofmain@F4619 1051          __size_of_displayCallback 0006  
       __size_of_initialiseButton 0006                        ??_spiWrite 0001  
          __end_of_serialCallback 1312                           postinc2 000FDE  
          __size_of_setInterrupts 0006                         _SPIHandle 129E  
         _processInterruptService 1106                       ?_displaySPI 0001  
           __end_of_displaySerial 12BE                       spiWrite@dat 0001  
                 ?_serialCallback 0001                    _spiReceiveWait 128E  
                     ?_readSerial 0001           __size_of_setupDisplayIo 000A  
                   __pidataCOMRAM 1330                        ?_SPIHandle 0001  
             start_initialization 11B0                    _buttonCallback 1210  
     __size_of_setButtonInterrput 0006                    _buttonDebounce 1234  
                   _setInterrupts 1300                      _readSPIValue 0058  
           __size_of_buttonHandle 0020            __end_of_spiReceiveWait 129E  
             __size_of_displaySPI 000A                 ??_displayCallback 0001  
            __end_of_serialHandle 12DC         ??_processInterruptService 0001  
                     __pbssCOMRAM 0055            __end_of_buttonCallback 1234  
       __size_of_interruptService 0006             buttonDebounce@counter 0059  
          __end_of_buttonDebounce 1256                      _buttonHandle 1256  
             __size_of_readSerial 0004                    ?_setInterrupts 0001  
                _initialiseButton 1312                   ?_spiReceiveWait 0001  
                       __pintcode 0008      __end_of_displayRequestHandle 1210  
               __size_of_spiWrite 0008                     ??_setButtonIo 0001  
                     __smallconst 1000                       ??_SPIHandle 0001  
                 _setSPIInterrupt 12FA                          ?_spiInit 0001  
                        ?_spiRead 0001                   ?_buttonCallback 0001  
                        ?_service 0001                     ??_setSerialIo 0001  
                 ?_buttonDebounce 0001                    __size_of_setIo 0002  
            spiInit@sTransmitEdge 0003   __end_of_processInterruptService 117C  
                       _setSerial 1276                spiInit@sDataSample 0001  
                       main@F4619 1001                          _SSP1CON1 000FC6  
                        _SSP1STAT 000FC7                    _setupDisplayIo 12AA  
                   ??_SPICallback 0001                     ??_testSpiSend 0002  
                    ??_displaySPI 0001               __end_of_setButtonIo 1328  
                 ??_setInterrupts 0001               __end_of_setSerialIo 12FA  
                ??_serialCallback 0001                        ?_setSerial 0001  
                        __Hrparam 0000                          __Lrparam 0000  
                    __Lsmallconst 1000            __end_of_setupDisplayIo 12B4  
           __size_of_serialHandle 000A                      ??_readSerial 0001  
              __end_of_displaySPI 12C8           __end_of_setSPIInterrupt 1300  
                _interruptService 131E                          __ptext10 130C  
                        __ptext11 1312                          __ptext20 1328  
                        __ptext12 11E2                          __ptext13 12B4  
                        __ptext22 131E                          __ptext14 12BE  
                        __ptext23 1106                          __ptext15 1318  
                        __ptext24 12D2                          __ptext16 1234  
                        __ptext25 132C                          __ptext17 1210  
                        __ptext26 1256                          __ptext18 12DC  
                        __ptext27 129E                          __ptext19 12E4  
                        __ptext28 12EC                          __ptext29 128E  
                __size_of_spiInit 0034                  __size_of_spiRead 0008  
                __size_of_service 12CA                          _ledValue 0055  
             __end_of_SPICallback 132C               __end_of_testSpiSend 12E4  
            _displayRequestHandle 11E2                __end_of_readSerial 1330  
                   __size_of_main 00B4                      _serialHandle 12D2  
                 _displayCallback 1318                          isa$xinst 000000  
                 ?_setupDisplayIo 0001                          _spiWrite 12E4  
                        int$flags 005B                      spiInit@sType 0004  
          __size_of_displaySerial 000A                      _SSP1STATbits 000FC7  
               spiInit@sClockIdle 0002                          main@test 0005  
                     _setButtonIo 1324          __end_of_initialiseButton 1318  
      __end_of_setButtonInterrput 130C                       _setSerialIo 12F4  
                        intlevel2 0000             ?_displayRequestHandle 0001  
                ??_spiReceiveWait 0001                       ??_setSerial 0001  
                ?_setSPIInterrupt 0001                  ??_buttonCallback 0002  
                ??_buttonDebounce 0001                       _SPICallback 1328  
                     _testSpiSend 12DC                     _displaySerial 12B4  
         __end_of_displayCallback 131E  
