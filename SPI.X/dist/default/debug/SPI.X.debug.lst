

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jun 27 21:34:23 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F8722 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	smallconst
    73  001000                     __psmallconst:
    74                           	callstack 0
    75  001000  00                 	db	0
    76  001001                     main@F4611:
    77                           	callstack 0
    78  001001  73                 	db	115
    79  001002  73                 	db	115
    80  001003  73                 	db	115
    81  001004  64                 	db	100
    82  001005  64                 	db	100
    83  001006  64                 	db	100
    84  001007  64                 	db	100
    85  001008  00                 	db	0
    86  001009  00                 	db	0
    87  00100A  00                 	db	0
    88  00100B  00                 	db	0
    89  00100C  00                 	db	0
    90  00100D  00                 	db	0
    91  00100E  00                 	db	0
    92  00100F  00                 	db	0
    93  001010  00                 	db	0
    94  001011  00                 	db	0
    95  001012  00                 	db	0
    96  001013  00                 	db	0
    97  001014  00                 	db	0
    98  001015  00                 	db	0
    99  001016  00                 	db	0
   100  001017  00                 	db	0
   101  001018  00                 	db	0
   102  001019  00                 	db	0
   103  00101A  00                 	db	0
   104  00101B  00                 	db	0
   105  00101C  00                 	db	0
   106  00101D  00                 	db	0
   107  00101E  00                 	db	0
   108  00101F  00                 	db	0
   109  001020  00                 	db	0
   110  001021  00                 	db	0
   111  001022  00                 	db	0
   112  001023  00                 	db	0
   113  001024  00                 	db	0
   114  001025  00                 	db	0
   115  001026  00                 	db	0
   116  001027  00                 	db	0
   117  001028  00                 	db	0
   118  001029  00                 	db	0
   119  00102A  00                 	db	0
   120  00102B  00                 	db	0
   121  00102C  00                 	db	0
   122  00102D  00                 	db	0
   123  00102E  00                 	db	0
   124  00102F  00                 	db	0
   125  001030  00                 	db	0
   126  001031  00                 	db	0
   127  001032  00                 	db	0
   128  001033  00                 	db	0
   129  001034  00                 	db	0
   130  001035  00                 	db	0
   131  001036  00                 	db	0
   132  001037  00                 	db	0
   133  001038  00                 	db	0
   134  001039  00                 	db	0
   135  00103A  00                 	db	0
   136  00103B  00                 	db	0
   137  00103C  00                 	db	0
   138  00103D  00                 	db	0
   139  00103E  00                 	db	0
   140  00103F  00                 	db	0
   141  001040  00                 	db	0
   142  001041  00                 	db	0
   143  001042  00                 	db	0
   144  001043  00                 	db	0
   145  001044  00                 	db	0
   146  001045  00                 	db	0
   147  001046  00                 	db	0
   148  001047  00                 	db	0
   149  001048  00                 	db	0
   150  001049  00                 	db	0
   151  00104A  00                 	db	0
   152  00104B  00                 	db	0
   153  00104C  00                 	db	0
   154  00104D  00                 	db	0
   155  00104E  00                 	db	0
   156  00104F  00                 	db	0
   157  001050  00                 	db	0
   158  001051                     __end_ofmain@F4611:
   159                           	callstack 0
   160  0000                     _PORTD	set	3971
   161  0000                     _TRISD	set	3989
   162  0000                     _TRISB0	set	31896
   163  0000                     _TRISC6	set	31910
   164  0000                     _TRISC7	set	31911
   165  0000                     _LATC0	set	31832
   166  0000                     _TRISC2	set	31906
   167  0000                     _TRISC3	set	31907
   168  0000                     _TRISC4	set	31908
   169  0000                     _TRISC5	set	31909
   170  0000                     _TXREG1	set	4013
   171  0000                     _RCREG1	set	4014
   172  0000                     _SPBRG	set	4015
   173  0000                     _SSPBUF	set	4041
   174  0000                     _SSPSTATbits	set	4039
   175  0000                     _SSP1CON1	set	4038
   176  0000                     _SSPSTAT	set	4039
   177  0000                     _TXEN1	set	32101
   178  0000                     _CREN1	set	32092
   179  0000                     _SPEN1	set	32095
   180  0000                     _SYNC1	set	32100
   181  0000                     _BRGH1	set	32098
   182  0000                     _RC1IF	set	31989
   183  0000                     _RC1IE	set	31981
   184  0000                     _SSPIE	set	31979
   185  0000                     _SSPIF	set	31987
   186  0000                     _INT0IF	set	32657
   187  0000                     _INT0IE	set	32660
   188  0000                     _INTEDG0	set	32654
   189  0000                     _PEIE	set	32662
   190  0000                     _GIE	set	32663
   191  001051  00                 	db	0	; dummy byte at the end
   192  0000                     
   193                           ; #config settings
   194                           
   195                           	psect	cinit
   196  0011A8                     __pcinit:
   197                           	callstack 0
   198  0011A8                     start_initialization:
   199                           	callstack 0
   200  0011A8                     __initialization:
   201                           	callstack 0
   202                           
   203                           ; Clear objects allocated to COMRAM (4 bytes)
   204  0011A8  6A55               	clrf	(__pbssCOMRAM+3)& (0+255),c
   205  0011AA  6A54               	clrf	(__pbssCOMRAM+2)& (0+255),c
   206  0011AC  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
   207  0011AE  6A52               	clrf	__pbssCOMRAM& (0+255),c
   208  0011B0                     end_of_initialization:
   209                           	callstack 0
   210  0011B0                     __end_of__initialization:
   211                           	callstack 0
   212  0011B0  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   213  0011B2  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   214  0011B4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   215  0011B6  6EF8               	movwf	tblptru,c
   216  0011B8  0E10               	movlw	high __Lsmallconst
   217  0011BA  6EF7               	movwf	tblptrh,c
   218  0011BC  0100               	movlb	0
   219  0011BE  EF64  F008         	goto	_main	;jump to C main() function
   220                           
   221                           	psect	bssCOMRAM
   222  000052                     __pbssCOMRAM:
   223                           	callstack 0
   224  000052                     _outValue:
   225                           	callstack 0
   226  000052                     	ds	1
   227  000053                     _readSerialValue:
   228                           	callstack 0
   229  000053                     	ds	1
   230  000054                     _FLAGS:
   231                           	callstack 0
   232  000054                     	ds	1
   233  000055                     _readSPIValue:
   234                           	callstack 0
   235  000055                     	ds	1
   236                           
   237                           	psect	cstackCOMRAM
   238  000001                     __pcstackCOMRAM:
   239                           	callstack 0
   240  000001                     ??_buttonCallback:
   241  000001                     
   242                           ; 1 bytes @ 0x0
   243  000001                     	ds	1
   244  000002                     main@test:
   245                           	callstack 0
   246                           
   247                           ; 80 bytes @ 0x1
   248  000002                     	ds	80
   249                           
   250 ;;
   251 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   252 ;;
   253 ;; *************** function _main *****************
   254 ;; Defined at:
   255 ;;		line 22 in file "newmain.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;  test           80    1[COMRAM] const unsigned char [80]
   260 ;; Return value:  Size  Location     Type
   261 ;;                  1    wreg      void 
   262 ;; Registers used:
   263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   264 ;; Tracked objects:
   265 ;;		On entry : 0/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   270 ;;      Locals:        80       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   272 ;;      Totals:        80       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   273 ;;Total ram usage:       80 bytes
   274 ;; Hardware stack levels required when called: 9
   275 ;; This function calls:
   276 ;;		_buttonCallback
   277 ;;		_displayRequestHandle
   278 ;;		_serialCallback
   279 ;;		_setInterrupts
   280 ;;		_setIo
   281 ;;		_setSPIInterrupt
   282 ;;		_setSerial
   283 ;;		_setSwitchInterrput
   284 ;; This function is called by:
   285 ;;		Startup code after reset
   286 ;; This function uses a non-reentrant model
   287 ;;
   288                           
   289                           	psect	text0
   290  0010C8                     __ptext0:
   291                           	callstack 0
   292  0010C8                     _main:
   293                           	callstack 22
   294  0010C8                     
   295                           ;newmain.c: 23:     setIo();
   296  0010C8  ECED  F008         	call	_setIo	;wreg free
   297  0010CC                     
   298                           ;newmain.c: 24:     setSPIInterrupt();
   299  0010CC  EC1C  F009         	call	_setSPIInterrupt	;wreg free
   300  0010D0                     
   301                           ;newmain.c: 25:     setSerial();
   302  0010D0  ECE1  F008         	call	_setSerial	;wreg free
   303                           
   304                           ;newmain.c: 26:     setSwitchInterrput();
   305  0010D4  EC19  F009         	call	_setSwitchInterrput	;wreg free
   306                           
   307                           ;newmain.c: 27:     setInterrupts();
   308  0010D8  EC1F  F009         	call	_setInterrupts	;wreg free
   309  0010DC                     
   310                           ;newmain.c: 31:     const unsigned char test[80] = "sssdddd";
   311  0010DC  0E01               	movlw	low main@F4611
   312  0010DE  6EF6               	movwf	tblptrl,c
   313  0010E0                     	if	0	;There is only one active tblptr byte
   314  0010E0                     	endif
   315  0010E0                     	if	0	;There are less than 3 active tblptr bytes
   316  0010E0                     	endif
   317  0010E0  EE20  F002         	lfsr	2,main@test
   318  0010E4  0E4F               	movlw	79
   319  0010E6                     u150:
   320  0010E6  0009               	tblrd		*+
   321  0010E8  CFF5 FFDE          	movff	tablat,postinc2
   322  0010EC  06E8               	decf	wreg,f,c
   323  0010EE  E2FB               	bc	u150
   324  0010F0                     l1035:
   325                           
   326                           ;newmain.c: 34:         if (FLAGS.bits.DISPLAY_READING) {
   327  0010F0  A854               	btfss	_FLAGS^0,4,c
   328  0010F2  EF7D  F008         	goto	u161
   329  0010F6  EF7F  F008         	goto	u160
   330  0010FA                     u161:
   331  0010FA  EF82  F008         	goto	l1041
   332  0010FE                     u160:
   333  0010FE                     
   334                           ;newmain.c: 35:             displayRequestHandle();
   335  0010FE  ECBD  F008         	call	_displayRequestHandle	;wreg free
   336  001102                     
   337                           ;newmain.c: 36:             FLAGS.bits.DISPLAY_READING = 0;
   338  001102  9854               	bcf	_FLAGS^0,4,c
   339  001104                     l1041:
   340                           
   341                           ;newmain.c: 38:         if (FLAGS.bits.UART_RECEIVED) {
   342  001104  A254               	btfss	_FLAGS^0,1,c
   343  001106  EF87  F008         	goto	u171
   344  00110A  EF89  F008         	goto	u170
   345  00110E                     u171:
   346  00110E  EF8C  F008         	goto	l1047
   347  001112                     u170:
   348  001112                     
   349                           ;newmain.c: 39:             serialCallback();
   350  001112  EC22  F009         	call	_serialCallback	;wreg free
   351  001116                     
   352                           ;newmain.c: 40:             FLAGS.bits.UART_RECEIVED = 0;
   353  001116  9254               	bcf	_FLAGS^0,1,c
   354  001118                     l1047:
   355                           
   356                           ;newmain.c: 42:         if (FLAGS.bits.PUSHED_BUTTON) {
   357  001118  A654               	btfss	_FLAGS^0,3,c
   358  00111A  EF91  F008         	goto	u181
   359  00111E  EF93  F008         	goto	u180
   360  001122                     u181:
   361  001122  EF78  F008         	goto	l1035
   362  001126                     u180:
   363  001126                     
   364                           ;newmain.c: 43:             buttonCallback();
   365  001126  EC9A  F008         	call	_buttonCallback	;wreg free
   366  00112A                     
   367                           ;newmain.c: 44:             FLAGS.bits.PUSHED_BUTTON = 0;
   368  00112A  9654               	bcf	_FLAGS^0,3,c
   369  00112C  EF78  F008         	goto	l1035
   370  001130  EF07  F000         	goto	start
   371  001134                     __end_of_main:
   372                           	callstack 0
   373                           
   374 ;; *************** function _setSwitchInterrput *****************
   375 ;; Defined at:
   376 ;;		line 24 in file "init.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;		None
   379 ;; Auto vars:     Size  Location     Type
   380 ;;		None
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		None
   385 ;; Tracked objects:
   386 ;;		On entry : 0/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   394 ;;Total ram usage:        0 bytes
   395 ;; Hardware stack levels used: 1
   396 ;; Hardware stack levels required when called: 6
   397 ;; This function calls:
   398 ;;		Nothing
   399 ;; This function is called by:
   400 ;;		_main
   401 ;; This function uses a non-reentrant model
   402 ;;
   403                           
   404                           	psect	text1
   405  001232                     __ptext1:
   406                           	callstack 0
   407  001232                     _setSwitchInterrput:
   408                           	callstack 24
   409  001232                     
   410                           ;init.c: 25:     INTEDG0 = 1;
   411  001232  8CF1               	bsf	4081,6,c	;volatile
   412                           
   413                           ;init.c: 26:     INT0IE = 1;
   414  001234  88F2               	bsf	4082,4,c	;volatile
   415  001236  0012               	return		;funcret
   416  001238                     __end_of_setSwitchInterrput:
   417                           	callstack 0
   418                           
   419 ;; *************** function _setSerial *****************
   420 ;; Defined at:
   421 ;;		line 5 in file "serial.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;		None
   424 ;; Auto vars:     Size  Location     Type
   425 ;;		None
   426 ;; Return value:  Size  Location     Type
   427 ;;                  1    wreg      void 
   428 ;; Registers used:
   429 ;;		wreg, status,2
   430 ;; Tracked objects:
   431 ;;		On entry : 0/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   439 ;;Total ram usage:        0 bytes
   440 ;; Hardware stack levels used: 1
   441 ;; Hardware stack levels required when called: 6
   442 ;; This function calls:
   443 ;;		Nothing
   444 ;; This function is called by:
   445 ;;		_main
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           	psect	text2
   450  0011C2                     __ptext2:
   451                           	callstack 0
   452  0011C2                     _setSerial:
   453                           	callstack 24
   454  0011C2                     
   455                           ;serial.c: 6:     BRGH1 = 0;
   456  0011C2  94AC               	bcf	4012,2,c	;volatile
   457  0011C4                     
   458                           ;serial.c: 7:     SPBRG = 15;
   459  0011C4  0E0F               	movlw	15
   460  0011C6  6EAF               	movwf	175,c	;volatile
   461  0011C8                     
   462                           ;serial.c: 8:     SYNC1=0;
   463  0011C8  98AC               	bcf	4012,4,c	;volatile
   464  0011CA                     
   465                           ;serial.c: 9:     SPEN1 = 1;
   466  0011CA  8EAB               	bsf	4011,7,c	;volatile
   467  0011CC                     
   468                           ;serial.c: 10:     RC1IE = 1;
   469  0011CC  8A9D               	bsf	3997,5,c	;volatile
   470  0011CE                     
   471                           ;serial.c: 11:     CREN1 = 1;
   472  0011CE  88AB               	bsf	4011,4,c	;volatile
   473  0011D0                     
   474                           ;serial.c: 12:     RC1IF = 0;
   475  0011D0  9A9E               	bcf	3998,5,c	;volatile
   476  0011D2                     
   477                           ;serial.c: 13:     TXEN1 = 1;
   478  0011D2  8AAC               	bsf	4012,5,c	;volatile
   479                           
   480                           ;serial.c: 14:     RCREG1 = 0;
   481  0011D4  0E00               	movlw	0
   482  0011D6  6EAE               	movwf	174,c	;volatile
   483  0011D8  0012               	return		;funcret
   484  0011DA                     __end_of_setSerial:
   485                           	callstack 0
   486                           
   487 ;; *************** function _setSPIInterrupt *****************
   488 ;; Defined at:
   489 ;;		line 8 in file "spi.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;		None
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		None
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   507 ;;Total ram usage:        0 bytes
   508 ;; Hardware stack levels used: 1
   509 ;; Hardware stack levels required when called: 6
   510 ;; This function calls:
   511 ;;		Nothing
   512 ;; This function is called by:
   513 ;;		_main
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           	psect	text3
   518  001238                     __ptext3:
   519                           	callstack 0
   520  001238                     _setSPIInterrupt:
   521                           	callstack 24
   522  001238                     
   523                           ;spi.c: 9:     SSPIF = 0;
   524  001238  969E               	bcf	3998,3,c	;volatile
   525                           
   526                           ;spi.c: 10:     SSPIE = 1;
   527  00123A  869D               	bsf	3997,3,c	;volatile
   528  00123C  0012               	return		;funcret
   529  00123E                     __end_of_setSPIInterrupt:
   530                           	callstack 0
   531                           
   532 ;; *************** function _setIo *****************
   533 ;; Defined at:
   534 ;;		line 9 in file "init.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, status,2
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   552 ;;Total ram usage:        0 bytes
   553 ;; Hardware stack levels used: 1
   554 ;; Hardware stack levels required when called: 6
   555 ;; This function calls:
   556 ;;		Nothing
   557 ;; This function is called by:
   558 ;;		_main
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           	psect	text4
   563  0011DA                     __ptext4:
   564                           	callstack 0
   565  0011DA                     _setIo:
   566                           	callstack 24
   567  0011DA                     
   568                           ;init.c: 11:     TRISD = 0x00;
   569  0011DA  0E00               	movlw	0
   570  0011DC  6E95               	movwf	149,c	;volatile
   571                           
   572                           ;init.c: 12:     PORTD = 0x00;
   573  0011DE  0E00               	movlw	0
   574  0011E0  6E83               	movwf	131,c	;volatile
   575  0011E2                     
   576                           ;init.c: 13:     TRISC7 = 1;
   577  0011E2  8E94               	bsf	3988,7,c	;volatile
   578  0011E4                     
   579                           ;init.c: 14:     TRISC6 = 0;
   580  0011E4  9C94               	bcf	3988,6,c	;volatile
   581  0011E6                     
   582                           ;init.c: 15:     TRISB0 = 1;
   583  0011E6  8093               	bsf	3987,0,c	;volatile
   584  0011E8  0012               	return		;funcret
   585  0011EA                     __end_of_setIo:
   586                           	callstack 0
   587                           
   588 ;; *************** function _setInterrupts *****************
   589 ;; Defined at:
   590 ;;		line 18 in file "init.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;		None
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		None
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;Total ram usage:        0 bytes
   609 ;; Hardware stack levels used: 1
   610 ;; Hardware stack levels required when called: 6
   611 ;; This function calls:
   612 ;;		Nothing
   613 ;; This function is called by:
   614 ;;		_main
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           	psect	text5
   619  00123E                     __ptext5:
   620                           	callstack 0
   621  00123E                     _setInterrupts:
   622                           	callstack 24
   623  00123E                     
   624                           ;init.c: 19:     GIE = 1;
   625  00123E  8EF2               	bsf	4082,7,c	;volatile
   626                           
   627                           ;init.c: 20:     PEIE = 1;
   628  001240  8CF2               	bsf	4082,6,c	;volatile
   629  001242  0012               	return		;funcret
   630  001244                     __end_of_setInterrupts:
   631                           	callstack 0
   632                           
   633 ;; *************** function _serialCallback *****************
   634 ;; Defined at:
   635 ;;		line 17 in file "serial.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		None
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   653 ;;Total ram usage:        0 bytes
   654 ;; Hardware stack levels used: 1
   655 ;; Hardware stack levels required when called: 6
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_main
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           	psect	text6
   664  001244                     __ptext6:
   665                           	callstack 0
   666  001244                     _serialCallback:
   667                           	callstack 24
   668  001244                     
   669                           ;serial.c: 18:     FLAGS.bits.DISPLAY_READING = 1;
   670  001244  8854               	bsf	_FLAGS^0,4,c
   671                           
   672                           ;serial.c: 19:     FLAGS.bits.DISPLAY_SERIAL_READING = 1;
   673  001246  8C54               	bsf	_FLAGS^0,6,c
   674  001248  0012               	return		;funcret
   675  00124A                     __end_of_serialCallback:
   676                           	callstack 0
   677                           
   678 ;; *************** function _displayRequestHandle *****************
   679 ;; Defined at:
   680 ;;		line 16 in file "display.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		cstack
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   698 ;;Total ram usage:        0 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; Hardware stack levels required when called: 8
   701 ;; This function calls:
   702 ;;		_displaySPI
   703 ;;		_displaySerial
   704 ;; This function is called by:
   705 ;;		_main
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           	psect	text7
   710  00117A                     __ptext7:
   711                           	callstack 0
   712  00117A                     _displayRequestHandle:
   713                           	callstack 22
   714  00117A                     
   715                           ;display.c: 17:     if (FLAGS.bits.DISPLAY_SERIAL_READING) {
   716  00117A  AC54               	btfss	_FLAGS^0,6,c
   717  00117C  EFC2  F008         	goto	u91
   718  001180  EFC4  F008         	goto	u90
   719  001184                     u91:
   720  001184  EFC9  F008         	goto	l237
   721  001188                     u90:
   722  001188                     
   723                           ;display.c: 18:         displaySerial();
   724  001188  ECFD  F008         	call	_displaySerial	;wreg free
   725  00118C                     
   726                           ;display.c: 19:         FLAGS.bits.DISPLAY_SERIAL_READING = 0;
   727  00118C  9C54               	bcf	_FLAGS^0,6,c
   728                           
   729                           ;display.c: 20:     } else {
   730  00118E  EFD3  F008         	goto	l240
   731  001192                     l237:
   732                           
   733                           ;display.c: 21:         if (FLAGS.bits.DISPLAY_SPI_READING) {
   734  001192  AA54               	btfss	_FLAGS^0,5,c
   735  001194  EFCE  F008         	goto	u101
   736  001198  EFD0  F008         	goto	u100
   737  00119C                     u101:
   738  00119C  EFD3  F008         	goto	l240
   739  0011A0                     u100:
   740  0011A0                     
   741                           ;display.c: 22:             displaySPI();
   742  0011A0  EC02  F009         	call	_displaySPI	;wreg free
   743  0011A4                     
   744                           ;display.c: 23:             FLAGS.bits.DISPLAY_SPI_READING = 0;
   745  0011A4  9A54               	bcf	_FLAGS^0,5,c
   746  0011A6                     l240:
   747  0011A6  0012               	return		;funcret
   748  0011A8                     __end_of_displayRequestHandle:
   749                           	callstack 0
   750                           
   751 ;; *************** function _displaySerial *****************
   752 ;; Defined at:
   753 ;;		line 6 in file "display.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;		None
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		cstack
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   771 ;;Total ram usage:        0 bytes
   772 ;; Hardware stack levels used: 1
   773 ;; Hardware stack levels required when called: 7
   774 ;; This function calls:
   775 ;;		_displayCallback
   776 ;; This function is called by:
   777 ;;		_displayRequestHandle
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           	psect	text8
   782  0011FA                     __ptext8:
   783                           	callstack 0
   784  0011FA                     _displaySerial:
   785                           	callstack 22
   786  0011FA                     
   787                           ;display.c: 7:     outValue = readSerialValue;
   788  0011FA  C053  F052         	movff	_readSerialValue,_outValue
   789  0011FE                     
   790                           ;display.c: 8:     displayCallback();
   791  0011FE  EC25  F009         	call	_displayCallback	;wreg free
   792  001202  0012               	return		;funcret
   793  001204                     __end_of_displaySerial:
   794                           	callstack 0
   795                           
   796 ;; *************** function _displaySPI *****************
   797 ;; Defined at:
   798 ;;		line 11 in file "display.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;		None
   801 ;; Auto vars:     Size  Location     Type
   802 ;;		None
   803 ;; Return value:  Size  Location     Type
   804 ;;                  1    wreg      void 
   805 ;; Registers used:
   806 ;;		cstack
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   816 ;;Total ram usage:        0 bytes
   817 ;; Hardware stack levels used: 1
   818 ;; Hardware stack levels required when called: 7
   819 ;; This function calls:
   820 ;;		_displayCallback
   821 ;; This function is called by:
   822 ;;		_displayRequestHandle
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           	psect	text9
   827  001204                     __ptext9:
   828                           	callstack 0
   829  001204                     _displaySPI:
   830                           	callstack 22
   831  001204                     
   832                           ;display.c: 12:     outValue = readSPIValue;
   833  001204  C055  F052         	movff	_readSPIValue,_outValue
   834  001208                     
   835                           ;display.c: 13:     displayCallback();
   836  001208  EC25  F009         	call	_displayCallback	;wreg free
   837  00120C  0012               	return		;funcret
   838  00120E                     __end_of_displaySPI:
   839                           	callstack 0
   840                           
   841 ;; *************** function _displayCallback *****************
   842 ;; Defined at:
   843 ;;		line 28 in file "display.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;		None
   846 ;; Auto vars:     Size  Location     Type
   847 ;;		None
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		None
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;Total ram usage:        0 bytes
   862 ;; Hardware stack levels used: 1
   863 ;; Hardware stack levels required when called: 6
   864 ;; This function calls:
   865 ;;		Nothing
   866 ;; This function is called by:
   867 ;;		_displaySerial
   868 ;;		_displaySPI
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           	psect	text10
   873  00124A                     __ptext10:
   874                           	callstack 0
   875  00124A                     _displayCallback:
   876                           	callstack 22
   877  00124A                     
   878                           ;display.c: 29:     PORTD = outValue;
   879  00124A  C052  FF83         	movff	_outValue,3971	;volatile
   880  00124E  0012               	return		;funcret
   881  001250                     __end_of_displayCallback:
   882                           	callstack 0
   883                           
   884 ;; *************** function _buttonCallback *****************
   885 ;; Defined at:
   886 ;;		line 4 in file "button.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		wreg, status,2
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   904 ;;Total ram usage:        1 bytes
   905 ;; Hardware stack levels used: 1
   906 ;; Hardware stack levels required when called: 6
   907 ;; This function calls:
   908 ;;		Nothing
   909 ;; This function is called by:
   910 ;;		_main
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text11
   915  001134                     __ptext11:
   916                           	callstack 0
   917  001134                     _buttonCallback:
   918                           	callstack 24
   919  001134                     
   920                           ;button.c: 5:     if (FLAGS.bits.PREVIOUS_BUTTON_STATE != FLAGS.bits.PUSHED_BUTTON) {
   921  001134  B654               	btfsc	_FLAGS^0,3,c
   922  001136  EF9F  F008         	goto	u111
   923  00113A  EFA2  F008         	goto	u110
   924  00113E                     u111:
   925  00113E  0E01               	movlw	1
   926  001140  EFA3  F008         	goto	u112
   927  001144                     u110:
   928  001144  0E00               	movlw	0
   929  001146                     u112:
   930  001146  6E01               	movwf	??_buttonCallback^0,c
   931  001148  B454               	btfsc	_FLAGS^0,2,c
   932  00114A  EFA9  F008         	goto	u121
   933  00114E  EFAC  F008         	goto	u120
   934  001152                     u121:
   935  001152  0E01               	movlw	1
   936  001154  EFAD  F008         	goto	u122
   937  001158                     u120:
   938  001158  0E00               	movlw	0
   939  00115A                     u122:
   940  00115A  1A01               	xorwf	??_buttonCallback^0,f,c
   941  00115C  B4D8               	btfsc	status,2,c
   942  00115E  EFB3  F008         	goto	u131
   943  001162  EFB5  F008         	goto	u130
   944  001166                     u131:
   945  001166  EFBC  F008         	goto	l213
   946  00116A                     u130:
   947  00116A                     
   948                           ;button.c: 6:         FLAGS.bits.PREVIOUS_BUTTON_STATE = FLAGS.bits.PUSHED_BUTTON;
   949  00116A  A654               	btfss	_FLAGS^0,3,c
   950  00116C  D002               	bra	u145
   951  00116E  8454               	bsf	_FLAGS^0,2,c
   952  001170  D001               	bra	u147
   953  001172                     u145:
   954  001172  9454               	bcf	_FLAGS^0,2,c
   955  001174                     u147:
   956  001174                     
   957                           ;button.c: 7:         TXREG1 = 'a';
   958  001174  0E61               	movlw	97
   959  001176  6EAD               	movwf	173,c	;volatile
   960  001178                     l213:
   961  001178  0012               	return		;funcret
   962  00117A                     __end_of_buttonCallback:
   963                           	callstack 0
   964                           
   965 ;; *************** function _service *****************
   966 ;; Defined at:
   967 ;;		line 18 in file "newmain.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;		None
   970 ;; Auto vars:     Size  Location     Type
   971 ;;		None
   972 ;; Return value:  Size  Location     Type
   973 ;;                  1    wreg      void 
   974 ;; Registers used:
   975 ;;		wreg, status,2, cstack
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   985 ;;Total ram usage:        0 bytes
   986 ;; Hardware stack levels used: 1
   987 ;; Hardware stack levels required when called: 5
   988 ;; This function calls:
   989 ;;		_interruptService
   990 ;; This function is called by:
   991 ;;		Interrupt level 2
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           	psect	intcode
   996  000008                     __pintcode:
   997                           	callstack 0
   998  000008                     _service:
   999                           	callstack 22
  1000                           
  1001                           ;incstack = 0
  1002  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1003  00000A  ED07  F009         	call	int_func,f	;refresh shadow registers
  1004                           
  1005                           	psect	intcode_body
  1006  00120E                     __pintcode_body:
  1007                           	callstack 22
  1008  00120E                     int_func:
  1009                           	callstack 22
  1010  00120E  0006               	pop		; remove dummy address from shadow register refresh
  1011  001210                     
  1012                           ;newmain.c: 19:     interruptService();
  1013  001210  EC28  F009         	call	_interruptService	;wreg free
  1014  001214  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1015  001216  0011               	retfie		f
  1016  001218                     __end_of_service:
  1017                           	callstack 0
  1018                           
  1019 ;; *************** function _interruptService *****************
  1020 ;; Defined at:
  1021 ;;		line 28 in file "interruptService.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;		None
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1039 ;;Total ram usage:        0 bytes
  1040 ;; Hardware stack levels used: 1
  1041 ;; Hardware stack levels required when called: 4
  1042 ;; This function calls:
  1043 ;;		_processInterruptService
  1044 ;; This function is called by:
  1045 ;;		_service
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text13
  1050  001250                     __ptext13:
  1051                           	callstack 0
  1052  001250                     _interruptService:
  1053                           	callstack 22
  1054  001250                     
  1055                           ;interruptService.c: 29:     processInterruptService();
  1056  001250  EC29  F008         	call	_processInterruptService	;wreg free
  1057  001254  0012               	return		;funcret
  1058  001256                     __end_of_interruptService:
  1059                           	callstack 0
  1060                           
  1061 ;; *************** function _processInterruptService *****************
  1062 ;; Defined at:
  1063 ;;		line 13 in file "interruptService.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, status,2, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;Total ram usage:        0 bytes
  1082 ;; Hardware stack levels used: 1
  1083 ;; Hardware stack levels required when called: 3
  1084 ;; This function calls:
  1085 ;;		_SPIHandle
  1086 ;;		_buttonHandle
  1087 ;;		_serialHandle
  1088 ;; This function is called by:
  1089 ;;		_interruptService
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text14
  1094  001052                     __ptext14:
  1095                           	callstack 0
  1096  001052                     _processInterruptService:
  1097                           	callstack 22
  1098  001052                     
  1099                           ;interruptService.c: 14:     if (SSPIE == 1 && SSPIF == 1) {
  1100  001052  A69D               	btfss	3997,3,c	;volatile
  1101  001054  EF2E  F008         	goto	i2u2_41
  1102  001058  EF30  F008         	goto	i2u2_40
  1103  00105C                     i2u2_41:
  1104  00105C  EF3A  F008         	goto	i2l949
  1105  001060                     i2u2_40:
  1106  001060  A69E               	btfss	3998,3,c	;volatile
  1107  001062  EF35  F008         	goto	i2u3_41
  1108  001066  EF37  F008         	goto	i2u3_40
  1109  00106A                     i2u3_41:
  1110  00106A  EF3A  F008         	goto	i2l949
  1111  00106E                     i2u3_40:
  1112  00106E                     
  1113                           ;interruptService.c: 15:         SPIHandle();
  1114  00106E  EC11  F009         	call	_SPIHandle	;wreg free
  1115  001072                     
  1116                           ;interruptService.c: 16:         SSPIF = 0;
  1117  001072  969E               	bcf	3998,3,c	;volatile
  1118  001074                     i2l949:
  1119                           
  1120                           ;interruptService.c: 18:     if (RC1IE == 1 && RC1IF == 1 && FLAGS.bits.UART_RECEIVED ==
      +                           0) {
  1121  001074  AA9D               	btfss	3997,5,c	;volatile
  1122  001076  EF3F  F008         	goto	i2u4_41
  1123  00107A  EF41  F008         	goto	i2u4_40
  1124  00107E                     i2u4_41:
  1125  00107E  EF52  F008         	goto	i2l959
  1126  001082                     i2u4_40:
  1127  001082  AA9E               	btfss	3998,5,c	;volatile
  1128  001084  EF46  F008         	goto	i2u5_41
  1129  001088  EF48  F008         	goto	i2u5_40
  1130  00108C                     i2u5_41:
  1131  00108C  EF52  F008         	goto	i2l959
  1132  001090                     i2u5_40:
  1133  001090  B254               	btfsc	_FLAGS^0,1,c
  1134  001092  EF4D  F008         	goto	i2u6_41
  1135  001096  EF4F  F008         	goto	i2u6_40
  1136  00109A                     i2u6_41:
  1137  00109A  EF52  F008         	goto	i2l959
  1138  00109E                     i2u6_40:
  1139  00109E                     
  1140                           ;interruptService.c: 19:         serialHandle();
  1141  00109E  EC0C  F009         	call	_serialHandle	;wreg free
  1142  0010A2                     
  1143                           ;interruptService.c: 20:         RC1IF = 0;
  1144  0010A2  9A9E               	bcf	3998,5,c	;volatile
  1145  0010A4                     i2l959:
  1146                           
  1147                           ;interruptService.c: 22:     if (INTEDG0 == 1 && INT0IF == 1) {
  1148  0010A4  ACF1               	btfss	4081,6,c	;volatile
  1149  0010A6  EF57  F008         	goto	i2u7_41
  1150  0010AA  EF59  F008         	goto	i2u7_40
  1151  0010AE                     i2u7_41:
  1152  0010AE  EF63  F008         	goto	i2l156
  1153  0010B2                     i2u7_40:
  1154  0010B2  A2F2               	btfss	4082,1,c	;volatile
  1155  0010B4  EF5E  F008         	goto	i2u8_41
  1156  0010B8  EF60  F008         	goto	i2u8_40
  1157  0010BC                     i2u8_41:
  1158  0010BC  EF63  F008         	goto	i2l156
  1159  0010C0                     i2u8_40:
  1160  0010C0                     
  1161                           ;interruptService.c: 23:         buttonHandle();
  1162  0010C0  EC2D  F009         	call	_buttonHandle	;wreg free
  1163  0010C4                     
  1164                           ;interruptService.c: 24:         INT0IF = 0;
  1165  0010C4  92F2               	bcf	4082,1,c	;volatile
  1166  0010C6                     i2l156:
  1167  0010C6  0012               	return		;funcret
  1168  0010C8                     __end_of_processInterruptService:
  1169                           	callstack 0
  1170                           
  1171 ;; *************** function _serialHandle *****************
  1172 ;; Defined at:
  1173 ;;		line 23 in file "serial.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;		None
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;		None
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, status,2, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;Total ram usage:        0 bytes
  1192 ;; Hardware stack levels used: 1
  1193 ;; Hardware stack levels required when called: 1
  1194 ;; This function calls:
  1195 ;;		_readSerial
  1196 ;; This function is called by:
  1197 ;;		_processInterruptService
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text15
  1202  001218                     __ptext15:
  1203                           	callstack 0
  1204  001218                     _serialHandle:
  1205                           	callstack 23
  1206  001218                     
  1207                           ;serial.c: 24:     FLAGS.bits.UART_RECEIVED = 1;
  1208  001218  8254               	bsf	_FLAGS^0,1,c
  1209  00121A                     
  1210                           ;serial.c: 25:     readSerialValue = readSerial();
  1211  00121A  EC2B  F009         	call	_readSerial	;wreg free
  1212  00121E  6E53               	movwf	_readSerialValue^0,c
  1213  001220  0012               	return		;funcret
  1214  001222                     __end_of_serialHandle:
  1215                           	callstack 0
  1216                           
  1217 ;; *************** function _readSerial *****************
  1218 ;; Defined at:
  1219 ;;		line 36 in file "serial.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;		None
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;		None
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  1    wreg      unsigned char 
  1226 ;; Registers used:
  1227 ;;		wreg, status,2
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1237 ;;Total ram usage:        0 bytes
  1238 ;; Hardware stack levels used: 1
  1239 ;; This function calls:
  1240 ;;		Nothing
  1241 ;; This function is called by:
  1242 ;;		_serialHandle
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text16
  1247  001256                     __ptext16:
  1248                           	callstack 0
  1249  001256                     _readSerial:
  1250                           	callstack 23
  1251  001256                     
  1252                           ;serial.c: 37:     return RCREG1;
  1253  001256  50AE               	movf	174,w,c	;volatile
  1254  001258  0012               	return		;funcret
  1255  00125A                     __end_of_readSerial:
  1256                           	callstack 0
  1257                           
  1258 ;; *************** function _buttonHandle *****************
  1259 ;; Defined at:
  1260 ;;		line 11 in file "button.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;		None
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;		None
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  1    wreg      void 
  1267 ;; Registers used:
  1268 ;;		None
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1278 ;;Total ram usage:        0 bytes
  1279 ;; Hardware stack levels used: 1
  1280 ;; This function calls:
  1281 ;;		Nothing
  1282 ;; This function is called by:
  1283 ;;		_processInterruptService
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           	psect	text17
  1288  00125A                     __ptext17:
  1289                           	callstack 0
  1290  00125A                     _buttonHandle:
  1291                           	callstack 24
  1292  00125A                     
  1293                           ;button.c: 12:     FLAGS.bits.PUSHED_BUTTON = 1;
  1294  00125A  8654               	bsf	_FLAGS^0,3,c
  1295  00125C  0012               	return		;funcret
  1296  00125E                     __end_of_buttonHandle:
  1297                           	callstack 0
  1298                           
  1299 ;; *************** function _SPIHandle *****************
  1300 ;; Defined at:
  1301 ;;		line 54 in file "spi.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;		None
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;		None
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      void 
  1308 ;; Registers used:
  1309 ;;		wreg, status,2, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;Total ram usage:        0 bytes
  1320 ;; Hardware stack levels used: 1
  1321 ;; Hardware stack levels required when called: 2
  1322 ;; This function calls:
  1323 ;;		_spiRead
  1324 ;; This function is called by:
  1325 ;;		_processInterruptService
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text18
  1330  001222                     __ptext18:
  1331                           	callstack 0
  1332  001222                     _SPIHandle:
  1333                           	callstack 22
  1334  001222                     
  1335                           ;spi.c: 55:     readSPIValue = spiRead();
  1336  001222  EC15  F009         	call	_spiRead	;wreg free
  1337  001226  6E55               	movwf	_readSPIValue^0,c
  1338  001228  0012               	return		;funcret
  1339  00122A                     __end_of_SPIHandle:
  1340                           	callstack 0
  1341                           
  1342 ;; *************** function _spiRead *****************
  1343 ;; Defined at:
  1344 ;;		line 48 in file "spi.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;		None
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;		None
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      unsigned char 
  1351 ;; Registers used:
  1352 ;;		wreg, status,2, cstack
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1362 ;;Total ram usage:        0 bytes
  1363 ;; Hardware stack levels used: 1
  1364 ;; Hardware stack levels required when called: 1
  1365 ;; This function calls:
  1366 ;;		_spiReceiveWait
  1367 ;; This function is called by:
  1368 ;;		_SPIHandle
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           	psect	text19
  1373  00122A                     __ptext19:
  1374                           	callstack 0
  1375  00122A                     _spiRead:
  1376                           	callstack 22
  1377  00122A                     
  1378                           ;spi.c: 50:     spiReceiveWait();
  1379  00122A  ECF5  F008         	call	_spiReceiveWait	;wreg free
  1380  00122E                     
  1381                           ;spi.c: 51:     return (SSPBUF);
  1382  00122E  50C9               	movf	201,w,c	;volatile
  1383  001230  0012               	return		;funcret
  1384  001232                     __end_of_spiRead:
  1385                           	callstack 0
  1386                           
  1387 ;; *************** function _spiReceiveWait *****************
  1388 ;; Defined at:
  1389 ;;		line 31 in file "spi.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;		None
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;		None
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		None
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1407 ;;Total ram usage:        0 bytes
  1408 ;; Hardware stack levels used: 1
  1409 ;; This function calls:
  1410 ;;		Nothing
  1411 ;; This function is called by:
  1412 ;;		_spiRead
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           	psect	text20
  1417  0011EA                     __ptext20:
  1418                           	callstack 0
  1419  0011EA                     _spiReceiveWait:
  1420                           	callstack 22
  1421  0011EA                     i2l79:
  1422  0011EA  A0C7               	btfss	199,0,c	;volatile
  1423  0011EC  EFFA  F008         	goto	i2u1_41
  1424  0011F0  EFFC  F008         	goto	i2u1_40
  1425  0011F4                     i2u1_41:
  1426  0011F4  EFF5  F008         	goto	i2l79
  1427  0011F8                     i2u1_40:
  1428  0011F8  0012               	return		;funcret
  1429  0011FA                     __end_of_spiReceiveWait:
  1430                           	callstack 0
  1431                           
  1432                           	psect	rparam
  1433  0000                     
  1434                           	psect	temp
  1435  000056                     btemp:
  1436                           	callstack 0
  1437  000056                     	ds	1
  1438  0000                     int$flags	set	btemp
  1439  0000                     wtemp8	set	btemp+1
  1440  0000                     ttemp5	set	btemp+1
  1441  0000                     ttemp6	set	btemp+4
  1442  0000                     ttemp7	set	btemp+8
  1443                           
  1444                           	psect	idloc
  1445                           
  1446                           ;Config register IDLOC0 @ 0x200000
  1447                           ;	unspecified, using default values
  1448  200000                     	org	2097152
  1449  200000  FF                 	db	255
  1450                           
  1451                           ;Config register IDLOC1 @ 0x200001
  1452                           ;	unspecified, using default values
  1453  200001                     	org	2097153
  1454  200001  FF                 	db	255
  1455                           
  1456                           ;Config register IDLOC2 @ 0x200002
  1457                           ;	unspecified, using default values
  1458  200002                     	org	2097154
  1459  200002  FF                 	db	255
  1460                           
  1461                           ;Config register IDLOC3 @ 0x200003
  1462                           ;	unspecified, using default values
  1463  200003                     	org	2097155
  1464  200003  FF                 	db	255
  1465                           
  1466                           ;Config register IDLOC4 @ 0x200004
  1467                           ;	unspecified, using default values
  1468  200004                     	org	2097156
  1469  200004  FF                 	db	255
  1470                           
  1471                           ;Config register IDLOC5 @ 0x200005
  1472                           ;	unspecified, using default values
  1473  200005                     	org	2097157
  1474  200005  FF                 	db	255
  1475                           
  1476                           ;Config register IDLOC6 @ 0x200006
  1477                           ;	unspecified, using default values
  1478  200006                     	org	2097158
  1479  200006  FF                 	db	255
  1480                           
  1481                           ;Config register IDLOC7 @ 0x200007
  1482                           ;	unspecified, using default values
  1483  200007                     	org	2097159
  1484  200007  FF                 	db	255
  1485                           
  1486                           	psect	config
  1487                           
  1488                           ; Padding undefined space
  1489  300000                     	org	3145728
  1490  300000  FF                 	db	255
  1491                           
  1492                           ;Config register CONFIG1H @ 0x300001
  1493                           ;	Oscillator Selection bits
  1494                           ;	OSC = XT, XT oscillator
  1495                           ;	Fail-Safe Clock Monitor Enable bit
  1496                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1497                           ;	Internal/External Oscillator Switchover bit
  1498                           ;	IESO = OFF, Two-Speed Start-up disabled
  1499  300001                     	org	3145729
  1500  300001  01                 	db	1
  1501                           
  1502                           ;Config register CONFIG2L @ 0x300002
  1503                           ;	Power-up Timer Enable bit
  1504                           ;	PWRT = OFF, PWRT disabled
  1505                           ;	Brown-out Reset Enable bits
  1506                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1507                           ;	Brown-out Voltage bits
  1508                           ;	BORV = 3, Minimum setting
  1509  300002                     	org	3145730
  1510  300002  19                 	db	25
  1511                           
  1512                           ;Config register CONFIG2H @ 0x300003
  1513                           ;	Watchdog Timer
  1514                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1515                           ;	Watchdog Timer Postscale Select bits
  1516                           ;	WDTPS = 32768, 1:32768
  1517  300003                     	org	3145731
  1518  300003  1E                 	db	30
  1519                           
  1520                           ;Config register CONFIG3L @ 0x300004
  1521                           ;	Processor Data Memory Mode Select bits
  1522                           ;	MODE = MC, Microcontroller mode
  1523                           ;	Address Bus Width Select bits
  1524                           ;	ADDRBW = ADDR20BIT, 20-bit Address Bus
  1525                           ;	Data Bus Width Select bit
  1526                           ;	DATABW = DATA16BIT, 16-bit External Bus mode
  1527                           ;	External Bus Data Wait Enable bit
  1528                           ;	WAIT = OFF, Wait selections are unavailable for table reads and table writes
  1529  300004                     	org	3145732
  1530  300004  F3                 	db	243
  1531                           
  1532                           ;Config register CONFIG3H @ 0x300005
  1533                           ;	CCP2 MUX bit
  1534                           ;	CCP2MX = PORTC, ECCP2 input/output is multiplexed with RC1
  1535                           ;	ECCP MUX bit
  1536                           ;	ECCPMX = PORTE, ECCP1/3 (P1B/P1C/P3B/P3C) are multiplexed onto RE6, RE5, RE4 and RE3 r
      +                          espectively
  1537                           ;	Low-Power Timer1 Oscillator Enable bit
  1538                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1539                           ;	MCLR Pin Enable bit
  1540                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
  1541  300005                     	org	3145733
  1542  300005  83                 	db	131
  1543                           
  1544                           ;Config register CONFIG4L @ 0x300006
  1545                           ;	Stack Full/Underflow Reset Enable bit
  1546                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1547                           ;	Single-Supply ICSP Enable bit
  1548                           ;	LVP = OFF, Single-Supply ICSP disabled
  1549                           ;	Boot Block Size Select bits
  1550                           ;	BBSIZ = BB2K, 1K word (2 Kbytes) Boot Block size
  1551                           ;	Extended Instruction Set Enable bit
  1552                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1553                           ;	Background Debugger Enable bit
  1554                           ;	DEBUG = 0x1, unprogrammed default
  1555  300006                     	org	3145734
  1556  300006  81                 	db	129
  1557                           
  1558                           ; Padding undefined space
  1559  300007                     	org	3145735
  1560  300007  FF                 	db	255
  1561                           
  1562                           ;Config register CONFIG5L @ 0x300008
  1563                           ;	Code Protection bit Block 0
  1564                           ;	CP0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not code-protected
  1565                           ;	Code Protection bit Block 1
  1566                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1567                           ;	Code Protection bit Block 2
  1568                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1569                           ;	Code Protection bit Block 3
  1570                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1571                           ;	Code Protection bit Block 4
  1572                           ;	CP4 = OFF, Block 4 (010000-013FFFh) not code-protected
  1573                           ;	Code Protection bit Block 5
  1574                           ;	CP5 = OFF, Block 5 (014000-017FFFh) not code-protected
  1575                           ;	Code Protection bit Block 6
  1576                           ;	CP6 = OFF, Block 6 (01BFFF-018000h) not code-protected
  1577                           ;	Code Protection bit Block 7
  1578                           ;	CP7 = OFF, Block 7 (01C000-01FFFFh) not code-protected
  1579  300008                     	org	3145736
  1580  300008  FF                 	db	255
  1581                           
  1582                           ;Config register CONFIG5H @ 0x300009
  1583                           ;	Boot Block Code Protection bit
  1584                           ;	CPB = OFF, Boot Block (000000-0007FFh) not code-protected
  1585                           ;	Data EEPROM Code Protection bit
  1586                           ;	CPD = OFF, Data EEPROM not code-protected
  1587  300009                     	org	3145737
  1588  300009  C0                 	db	192
  1589                           
  1590                           ;Config register CONFIG6L @ 0x30000A
  1591                           ;	Write Protection bit Block 0
  1592                           ;	WRT0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not write-protected
  1593                           ;	Write Protection bit Block 1
  1594                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1595                           ;	Write Protection bit Block 2
  1596                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1597                           ;	Write Protection bit Block 3
  1598                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1599                           ;	Write Protection bit Block 4
  1600                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  1601                           ;	Write Protection bit Block 5
  1602                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  1603                           ;	Write Protection bit Block 6
  1604                           ;	WRT6 = OFF, Block 6 (01BFFF-018000h) not write-protected
  1605                           ;	Write Protection bit Block 7
  1606                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  1607  30000A                     	org	3145738
  1608  30000A  FF                 	db	255
  1609                           
  1610                           ;Config register CONFIG6H @ 0x30000B
  1611                           ;	Configuration Register Write Protection bit
  1612                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1613                           ;	Boot Block Write Protection bit
  1614                           ;	WRTB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not write-protected
  1615                           ;	Data EEPROM Write Protection bit
  1616                           ;	WRTD = OFF, Data EEPROM not write-protected
  1617  30000B                     	org	3145739
  1618  30000B  E0                 	db	224
  1619                           
  1620                           ;Config register CONFIG7L @ 0x30000C
  1621                           ;	Table Read Protection bit Block 0
  1622                           ;	EBTR0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not protected from table reads
      +                           executed in other blocks
  1623                           ;	Table Read Protection bit Block 1
  1624                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1625                           ;	Table Read Protection bit Block 2
  1626                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1627                           ;	Table Read Protection bit Block 3
  1628                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1629                           ;	Table Read Protection bit Block 4
  1630                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  1631                           ;	Table Read Protection bit Block 5
  1632                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  1633                           ;	Table Read Protection bit Block 6
  1634                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  1635                           ;	Table Read Protection bit Block 7
  1636                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  1637  30000C                     	org	3145740
  1638  30000C  FF                 	db	255
  1639                           
  1640                           ;Config register CONFIG7H @ 0x30000D
  1641                           ;	Boot Block Table Read Protection bit
  1642                           ;	EBTRB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not protected from table re
      +                          ads executed in other blocks
  1643  30000D                     	org	3145741
  1644  30000D  40                 	db	64
  1645                           tosu	equ	0xFFF
  1646                           tosh	equ	0xFFE
  1647                           tosl	equ	0xFFD
  1648                           stkptr	equ	0xFFC
  1649                           pclatu	equ	0xFFB
  1650                           pclath	equ	0xFFA
  1651                           pcl	equ	0xFF9
  1652                           tblptru	equ	0xFF8
  1653                           tblptrh	equ	0xFF7
  1654                           tblptrl	equ	0xFF6
  1655                           tablat	equ	0xFF5
  1656                           prodh	equ	0xFF4
  1657                           prodl	equ	0xFF3
  1658                           indf0	equ	0xFEF
  1659                           postinc0	equ	0xFEE
  1660                           postdec0	equ	0xFED
  1661                           preinc0	equ	0xFEC
  1662                           plusw0	equ	0xFEB
  1663                           fsr0h	equ	0xFEA
  1664                           fsr0l	equ	0xFE9
  1665                           wreg	equ	0xFE8
  1666                           indf1	equ	0xFE7
  1667                           postinc1	equ	0xFE6
  1668                           postdec1	equ	0xFE5
  1669                           preinc1	equ	0xFE4
  1670                           plusw1	equ	0xFE3
  1671                           fsr1h	equ	0xFE2
  1672                           fsr1l	equ	0xFE1
  1673                           bsr	equ	0xFE0
  1674                           indf2	equ	0xFDF
  1675                           postinc2	equ	0xFDE
  1676                           postdec2	equ	0xFDD
  1677                           preinc2	equ	0xFDC
  1678                           plusw2	equ	0xFDB
  1679                           fsr2h	equ	0xFDA
  1680                           fsr2l	equ	0xFD9
  1681                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    80
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      85
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_buttonCallback

Critical Paths under _service in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _service in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _service in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _service in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _service in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _service in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _service in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _service in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _service in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _service in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _service in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _service in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _service in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _service in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _service in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _service in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _service in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                80    80      0       0
                                              1 COMRAM    80    80      0
                     _buttonCallback
               _displayRequestHandle
                     _serialCallback
                      _setInterrupts
                              _setIo
                    _setSPIInterrupt
                          _setSerial
                 _setSwitchInterrput
 ---------------------------------------------------------------------------------
 (1) _setSwitchInterrput                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSerial                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSPIInterrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setIo                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setInterrupts                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _serialCallback                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displayRequestHandle                                 0     0      0       0
                         _displaySPI
                      _displaySerial
 ---------------------------------------------------------------------------------
 (2) _displaySerial                                        0     0      0       0
                    _displayCallback
 ---------------------------------------------------------------------------------
 (2) _displaySPI                                           0     0      0       0
                    _displayCallback
 ---------------------------------------------------------------------------------
 (3) _displayCallback                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttonCallback                                       1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _service                                              0     0      0       0
                   _interruptService
 ---------------------------------------------------------------------------------
 (5) _interruptService                                     0     0      0       0
            _processInterruptService
 ---------------------------------------------------------------------------------
 (6) _processInterruptService                              0     0      0       0
                          _SPIHandle
                       _buttonHandle
                       _serialHandle
 ---------------------------------------------------------------------------------
 (7) _serialHandle                                         0     0      0       0
                         _readSerial
 ---------------------------------------------------------------------------------
 (8) _readSerial                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _buttonHandle                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _SPIHandle                                            0     0      0       0
                            _spiRead
 ---------------------------------------------------------------------------------
 (8) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (9) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _buttonCallback
   _displayRequestHandle
     _displaySPI
       _displayCallback
     _displaySerial
       _displayCallback
   _serialCallback
   _setInterrupts
   _setIo
   _setSPIInterrupt
   _setSerial
   _setSwitchInterrput

 _service (ROOT)
   _interruptService
     _processInterruptService
       _SPIHandle
         _spiRead
           _spiReceiveWait
       _buttonHandle
       _serialHandle
         _readSerial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      55       1       90.4%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      55       6        0.0%
DATA                 0      0      55       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jun 27 21:34:23 2021

        ?_processInterruptService 0001                       _SSPSTATbits 000FC7  
                              l71 123C                                u90 1188  
                              u91 1184                               l120 11E8  
                             l123 1242                               l213 1178  
                             l126 1236                               l231 1202  
                             l240 11A6                               l234 120C  
                             l243 124E                               l237 1192  
                             l190 11D8                               l193 1248  
                             l939 124A                               l971 1204  
                             l973 1208                               l981 11E4  
                             l967 11FA                               l983 11E6  
                             l991 11C8                               l969 11FE  
                             l977 11DA                               l985 1238  
                             l993 11CA                               l979 11E2  
                             l995 11CC                               l987 11C2  
                             _GIE 007F97                               l997 11CE  
                             l989 11C4                               l999 11D0  
                             u100 11A0                               u101 119C  
                             u110 1144                               u111 113E  
                             u120 1158                               u112 1146  
                             u121 1152                               u130 116A  
                             u122 115A                               u131 1166  
                             u150 10E6                               u160 10FE  
                             u145 1172                               u161 10FA  
                             u170 1112                               u147 1174  
                             u171 110E                               u180 1126  
                             u181 1122                               wreg 000FE8  
                  ?_displaySerial 0001            ??_displayRequestHandle 0001  
                            l1001 11D2                              l1011 118C  
                            l1003 1232                              l1021 116A  
                            l1013 11A0                              l1005 123E  
                            l1023 1174                              l1015 11A4  
                            l1007 117A                              l1031 10D0  
                            l1009 1188                              l1017 1244  
                            l1041 1104                              l1033 10DC  
                            l1019 1134                              l1051 112A  
                            l1043 1112                              l1035 10F0  
                            l1027 10C8                              l1045 1116  
                            l1037 10FE                              l1029 10CC  
                            l1047 1118                              l1039 1102  
                            l1049 1126                              _PEIE 007F96  
                            i2l31 1214                              i2l82 11F8  
                            i2l93 1230                              i2l79 11EA  
                            i2l96 1228                              _main 10C8  
                            btemp 0056                              start 000E  
                    ___param_bank 000000          __end_of_interruptService 1256  
              _setSwitchInterrput 1232                             ?_main 0001  
                           _BRGH1 007D62                             _CREN1 007D5C  
                           _FLAGS 0054                             _LATC0 007C58  
                           _RC1IE 007CED                             _RC1IF 007CF5  
             ?_setSwitchInterrput 0001                             i2l205 1258  
                           i2l216 125C                             i2l156 10C6  
                           i2l159 1254                             i2l196 1220  
                           i2l921 122A                             i2l923 122E  
                           i2l931 1222                             i2l933 1218  
                           i2l941 1052                             i2l919 11EA  
                           i2l927 1256                             i2l935 121A  
                           i2l951 1082                             i2l943 1060  
                           i2l937 125A                             i2l961 10B2  
                           i2l953 1090                             i2l945 106E  
                           i2l963 10C0                             i2l955 109E  
                           i2l947 1072                             i2l965 10C4  
                           i2l957 10A2                             i2l949 1074  
                           i2l959 10A4                             i2l975 1250  
                           _SPEN1 007D5F                             _SPBRG 000FAF  
                           _PORTD 000F83                             _TRISD 000F95  
                           _SSPIE 007CEB                             _SSPIF 007CF3  
                           _TXEN1 007D65                             _SYNC1 007D64  
                           _setIo 11DA                  ?_displayCallback 0001  
              __size_of_SPIHandle 0008                   __end_of_spiRead 1232  
                           tablat 000FF5                   __end_of_service 1218  
                           ttemp5 0057                             ttemp6 005A  
                           ttemp7 005E                             status 000FD8  
           __end_of_setInterrupts 1244                             wtemp8 0057  
            ??_setSwitchInterrput 0001                   __initialization 11A8  
                    __end_of_main 1134                   _readSerialValue 0053  
                          ??_main 0002                     __activetblptr 000001  
                 ??_displaySerial 0001                            ?_setIo 0001  
                   ?_buttonHandle 0001                            _INT0IE 007F94  
                          _INT0IF 007F91                            i2l1025 1210  
                          _RCREG1 000FAE                            i2u1_40 11F8  
                          i2u1_41 11F4                            i2u2_40 1060  
                          i2u2_41 105C                            i2u3_40 106E  
                          i2u3_41 106A                            i2u4_40 1082  
                          i2u4_41 107E                            i2u5_40 1090  
                          i2u5_41 108C                            i2u6_40 109E  
                          i2u6_41 109A                            i2u7_40 10B2  
                          i2u7_41 10AE                            i2u8_40 10C0  
                          i2u8_41 10BC                            _TRISB0 007C98  
                          _TRISC2 007CA2                            _TRISC3 007CA3  
                          _TRISC4 007CA4                            _TRISC5 007CA5  
                          _TRISC6 007CA6                            _TRISC7 007CA7  
                          _SSPBUF 000FC9                            _TXREG1 000FAD  
               __end_of_SPIHandle 122A           __size_of_serialCallback 0006  
                          isa$std 000001                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                         ??_spiRead 0001  
                       ??_service 0001                    ??_buttonHandle 0001  
                      __accesstop 0060           __end_of__initialization 11B0  
                   ___rparam_used 000001                    __pcstackCOMRAM 0001  
                   __end_of_setIo 11EA          __size_of_setSPIInterrupt 0006  
__size_of_processInterruptService 0076                           ??_setIo 0001  
               ?_interruptService 0001           __size_of_spiReceiveWait 0010  
              __size_of_setSerial 0018                ??_interruptService 0001  
                         _INTEDG0 007F8E                        _displaySPI 1204  
                         _SSPSTAT 000FC7           __size_of_buttonCallback 0046  
   __size_of_displayRequestHandle 002E                     ?_serialHandle 0001  
                         __Hparam 0000                           __Lparam 0000  
                      _readSerial 1256              __end_of_buttonHandle 125E  
                    __psmallconst 1000                    _serialCallback 1244  
                         __pcinit 11A8                           __ramtop 1000  
                         __ptext0 10C8                           __ptext1 1232  
                         __ptext2 11C2                           __ptext3 1238  
                         __ptext4 11DA                           __ptext5 123E  
                         __ptext6 1244                           __ptext7 117A  
                         __ptext8 11FA                           __ptext9 1204  
                         _spiRead 122A                           _service 0008  
                  __pintcode_body 120E              end_of_initialization 11B0  
               __end_of_setSerial 11DA                    ??_serialHandle 0001  
                         int_func 120E                 ??_setSPIInterrupt 0001  
     __size_of_setSwitchInterrput 0006                 __end_ofmain@F4611 1051  
        __size_of_displayCallback 0006            __end_of_serialCallback 124A  
                         postinc2 000FDE            __size_of_setInterrupts 0006  
                       _SPIHandle 1222           _processInterruptService 1052  
                     ?_displaySPI 0001             __end_of_displaySerial 1204  
                 ?_serialCallback 0001                    _spiReceiveWait 11EA  
                     ?_readSerial 0001                        ?_SPIHandle 0001  
             start_initialization 11A8                    _buttonCallback 1134  
                   _setInterrupts 123E                      _readSPIValue 0055  
           __size_of_buttonHandle 0004            __end_of_spiReceiveWait 11FA  
             __size_of_displaySPI 000A                 ??_displayCallback 0001  
            __end_of_serialHandle 1222         ??_processInterruptService 0001  
                     __pbssCOMRAM 0052            __end_of_buttonCallback 117A  
       __size_of_interruptService 0006                      _buttonHandle 125A  
             __size_of_readSerial 0004                    ?_setInterrupts 0001  
                 ?_spiReceiveWait 0001                         __pintcode 0008  
    __end_of_displayRequestHandle 11A8                       __smallconst 1000  
                     ??_SPIHandle 0001                   _setSPIInterrupt 1238  
                        ?_spiRead 0001                   ?_buttonCallback 0001  
                        ?_service 0001                    __size_of_setIo 0010  
 __end_of_processInterruptService 10C8                         _setSerial 11C2  
                       main@F4611 1001                          _SSP1CON1 000FC6  
                    ??_displaySPI 0001                   ??_setInterrupts 0001  
      __end_of_setSwitchInterrput 1238                  ??_serialCallback 0001  
                      ?_setSerial 0001                          __Hrparam 0000  
                        __Lrparam 0000                      __Lsmallconst 1000  
           __size_of_serialHandle 000A                      ??_readSerial 0001  
              __end_of_displaySPI 120E           __end_of_setSPIInterrupt 123E  
                _interruptService 1250                          __ptext10 124A  
                        __ptext11 1134                          __ptext20 11EA  
                        __ptext13 1250                          __ptext14 1052  
                        __ptext15 1218                          __ptext16 1256  
                        __ptext17 125A                          __ptext18 1222  
                        __ptext19 122A                  __size_of_spiRead 0008  
                __size_of_service 1210              _displayRequestHandle 117A  
              __end_of_readSerial 125A                     __size_of_main 006C  
                    _serialHandle 1218                   _displayCallback 124A  
                        isa$xinst 000000                          _outValue 0052  
                        int$flags 0056            __size_of_displaySerial 000A  
                        main@test 0002                          intlevel2 0000  
           ?_displayRequestHandle 0001                  ??_spiReceiveWait 0001  
                     ??_setSerial 0001                  ?_setSPIInterrupt 0001  
                ??_buttonCallback 0001                     _displaySerial 11FA  
         __end_of_displayCallback 1250  
