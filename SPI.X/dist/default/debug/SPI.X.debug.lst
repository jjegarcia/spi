

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat May 22 13:26:34 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F8722 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     _TRISD	set	3989
    60  0000                     _PORTD	set	3971
    61  0000                     _TRISC3	set	31907
    62  0000                     _TRISC5	set	31909
    63  0000                     _SSPBUF	set	4041
    64  0000                     _SSPSTATbits	set	4039
    65  0000                     _SSP1CON1	set	4038
    66  0000                     _SSPSTAT	set	4039
    67  0000                     _SSPIE	set	31979
    68  0000                     _SSPIF	set	31987
    69  0000                     _PEIE	set	32662
    70  0000                     _GIE	set	32663
    71  0000                     _nRBPU	set	32655
    72                           
    73                           ; #config settings
    74                           
    75                           	psect	cinit
    76  0000BA                     __pcinit:
    77                           	callstack 0
    78  0000BA                     start_initialization:
    79                           	callstack 0
    80  0000BA                     __initialization:
    81                           	callstack 0
    82                           
    83                           ; Clear objects allocated to COMRAM (2 bytes)
    84  0000BA  6A08               	clrf	(__pbssCOMRAM+1)& (0+255),c
    85  0000BC  6A07               	clrf	__pbssCOMRAM& (0+255),c
    86  0000BE                     end_of_initialization:
    87                           	callstack 0
    88  0000BE                     __end_of__initialization:
    89                           	callstack 0
    90  0000BE  9009               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    91  0000C0  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    92  0000C2  0100               	movlb	0
    93  0000C4  EF09  F000         	goto	_main	;jump to C main() function
    94                           
    95                           	psect	bssCOMRAM
    96  000007                     __pbssCOMRAM:
    97                           	callstack 0
    98  000007                     _readValue:
    99                           	callstack 0
   100  000007                     	ds	1
   101  000008                     _FLAGS:
   102                           	callstack 0
   103  000008                     	ds	1
   104                           
   105                           	psect	cstackCOMRAM
   106  000001                     __pcstackCOMRAM:
   107                           	callstack 0
   108  000001                     spiInit@sDataSample:
   109                           	callstack 0
   110  000001                     spiWrite@dat:
   111                           	callstack 0
   112                           
   113                           ; 1 bytes @ 0x0
   114  000001                     	ds	1
   115  000002                     spiInit@sClockIdle:
   116                           	callstack 0
   117                           
   118                           ; 1 bytes @ 0x1
   119  000002                     	ds	1
   120  000003                     spiInit@sTransmitEdge:
   121                           	callstack 0
   122                           
   123                           ; 1 bytes @ 0x2
   124  000003                     	ds	1
   125  000004                     spiInit@sType:
   126                           	callstack 0
   127                           
   128                           ; 1 bytes @ 0x3
   129  000004                     	ds	1
   130  000005                     ??_main:
   131                           
   132                           ; 1 bytes @ 0x4
   133  000005                     	ds	2
   134                           
   135 ;;
   136 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   137 ;;
   138 ;; *************** function _main *****************
   139 ;; Defined at:
   140 ;;		line 18 in file "newmain.c"
   141 ;; Parameters:    Size  Location     Type
   142 ;;		None
   143 ;; Auto vars:     Size  Location     Type
   144 ;;		None
   145 ;; Return value:  Size  Location     Type
   146 ;;                  1    wreg      void 
   147 ;; Registers used:
   148 ;;		wreg, status,2, status,0, cstack
   149 ;; Tracked objects:
   150 ;;		On entry : 0/0
   151 ;;		On exit  : 0/0
   152 ;;		Unchanged: 0/0
   153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   156 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   157 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   158 ;;Total ram usage:        2 bytes
   159 ;; Hardware stack levels required when called: 6
   160 ;; This function calls:
   161 ;;		_setInterrupts
   162 ;;		_setIo
   163 ;;		_spiInit
   164 ;;		_spiWrite
   165 ;; This function is called by:
   166 ;;		Startup code after reset
   167 ;; This function uses a non-reentrant model
   168 ;;
   169                           
   170                           	psect	text0
   171  000012                     __ptext0:
   172                           	callstack 0
   173  000012                     _main:
   174                           	callstack 25
   175  000012                     
   176                           ;newmain.c: 19:     setIo();
   177  000012  EC64  F000         	call	_setIo	;wreg free
   178  000016                     
   179                           ;newmain.c: 20:     setInterrupts();
   180  000016  EC6A  F000         	call	_setInterrupts	;wreg free
   181  00001A                     
   182                           ;newmain.c: 21:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_
      +                          LOW, SPI_IDLE_2_ACTIVE);
   183  00001A  0E00               	movlw	0
   184  00001C  6E01               	movwf	spiInit@sDataSample^0,c
   185  00001E  0E00               	movlw	0
   186  000020  6E02               	movwf	spiInit@sClockIdle^0,c
   187  000022  0E00               	movlw	0
   188  000024  6E03               	movwf	spiInit@sTransmitEdge^0,c
   189  000026  0E20               	movlw	32
   190  000028  EC32  F000         	call	_spiInit
   191  00002C                     
   192                           ;newmain.c: 23:     spiWrite(0b01010101);
   193  00002C  0E55               	movlw	85
   194  00002E  EC74  F000         	call	_spiWrite
   195  000032                     l855:
   196                           
   197                           ;newmain.c: 25:         if (FLAGS.ByteBits.DISPLAY_READING) {
   198  000032  A208               	btfss	_FLAGS^0,1,c
   199  000034  EF1E  F000         	goto	u61
   200  000038  EF20  F000         	goto	u60
   201  00003C                     u61:
   202  00003C  EF23  F000         	goto	l859
   203  000040                     u60:
   204  000040                     
   205                           ;newmain.c: 26:             PORTD = readValue;
   206  000040  C007  FF83         	movff	_readValue,3971	;volatile
   207                           
   208                           ;newmain.c: 27:             FLAGS.ByteBits.DISPLAY_READING = 0;
   209  000044  9208               	bcf	_FLAGS^0,1,c
   210  000046                     l859:
   211                           
   212                           ;newmain.c: 31:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   213  000046  0E0B               	movlw	11
   214  000048  6E06               	movwf	(??_main+1)^0,c
   215  00004A  0E26               	movlw	38
   216  00004C  6E05               	movwf	??_main^0,c
   217  00004E  0E5E               	movlw	94
   218  000050                     u77:
   219  000050  2EE8               	decfsz	wreg,f,c
   220  000052  D7FE               	bra	u77
   221  000054  2E05               	decfsz	??_main^0,f,c
   222  000056  D7FC               	bra	u77
   223  000058  2E06               	decfsz	(??_main+1)^0,f,c
   224  00005A  D7FA               	bra	u77
   225  00005C  EF19  F000         	goto	l855
   226  000060  EF07  F000         	goto	start
   227  000064                     __end_of_main:
   228                           	callstack 0
   229                           
   230 ;; *************** function _spiWrite *****************
   231 ;; Defined at:
   232 ;;		line 31 in file "spi.c"
   233 ;; Parameters:    Size  Location     Type
   234 ;;  dat             1    wreg     unsigned char 
   235 ;; Auto vars:     Size  Location     Type
   236 ;;  dat             1    0[COMRAM] unsigned char 
   237 ;; Return value:  Size  Location     Type
   238 ;;                  1    wreg      void 
   239 ;; Registers used:
   240 ;;		wreg
   241 ;; Tracked objects:
   242 ;;		On entry : 0/0
   243 ;;		On exit  : 0/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   247 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   249 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   250 ;;Total ram usage:        1 bytes
   251 ;; Hardware stack levels used: 1
   252 ;; Hardware stack levels required when called: 5
   253 ;; This function calls:
   254 ;;		Nothing
   255 ;; This function is called by:
   256 ;;		_main
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260                           	psect	text1
   261  0000E8                     __ptext1:
   262                           	callstack 0
   263  0000E8                     _spiWrite:
   264                           	callstack 25
   265                           
   266                           ;incstack = 0
   267                           ;spiWrite@dat stored from wreg
   268  0000E8  6E01               	movwf	spiWrite@dat^0,c
   269  0000EA                     
   270                           ;spi.c: 31: void spiWrite(char dat);spi.c: 32: {;spi.c: 33:     SSPBUF = dat;
   271  0000EA  C001  FFC9         	movff	spiWrite@dat,4041	;volatile
   272  0000EE  0012               	return		;funcret
   273  0000F0                     __end_of_spiWrite:
   274                           	callstack 0
   275                           
   276 ;; *************** function _spiInit *****************
   277 ;; Defined at:
   278 ;;		line 9 in file "spi.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;  sType           1    wreg     enum E4544
   281 ;;  sDataSample     1    0[COMRAM] enum E4552
   282 ;;  sClockIdle      1    1[COMRAM] enum E4556
   283 ;;  sTransmitEdg    1    2[COMRAM] enum E4560
   284 ;; Auto vars:     Size  Location     Type
   285 ;;  sType           1    3[COMRAM] enum E4544
   286 ;; Return value:  Size  Location     Type
   287 ;;                  1    wreg      void 
   288 ;; Registers used:
   289 ;;		wreg, status,2, status,0
   290 ;; Tracked objects:
   291 ;;		On entry : 0/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   295 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   296 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   298 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   299 ;;Total ram usage:        4 bytes
   300 ;; Hardware stack levels used: 1
   301 ;; Hardware stack levels required when called: 5
   302 ;; This function calls:
   303 ;;		Nothing
   304 ;; This function is called by:
   305 ;;		_main
   306 ;; This function uses a non-reentrant model
   307 ;;
   308                           
   309                           	psect	text2
   310  000064                     __ptext2:
   311                           	callstack 0
   312  000064                     _spiInit:
   313                           	callstack 25
   314                           
   315                           ;incstack = 0
   316                           ;spiInit@sType stored from wreg
   317  000064  6E04               	movwf	spiInit@sType^0,c
   318  000066                     
   319                           ;spi.c: 9: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sClo
      +                          ckIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 10: {;spi.c: 11:     TRISC5 = 0;
   320  000066  9A94               	bcf	3988,5,c	;volatile
   321  000068                     
   322                           ;spi.c: 12:     if(sType & 0b00000100)
   323  000068  A404               	btfss	spiInit@sType^0,2,c
   324  00006A  EF39  F000         	goto	u51
   325  00006E  EF3B  F000         	goto	u50
   326  000072                     u51:
   327  000072  EF40  F000         	goto	l843
   328  000076                     u50:
   329  000076                     
   330                           ;spi.c: 13:     {;spi.c: 14:         SSPSTAT = sTransmitEdge;
   331  000076  C003  FFC7         	movff	spiInit@sTransmitEdge,4039	;volatile
   332                           
   333                           ;spi.c: 15:         TRISC3 = 1;
   334  00007A  8694               	bsf	3988,3,c	;volatile
   335                           
   336                           ;spi.c: 16:     }
   337  00007C  EF44  F000         	goto	l48
   338  000080                     l843:
   339                           
   340                           ;spi.c: 18:     {;spi.c: 19:         SSPSTAT = sDataSample | sTransmitEdge;
   341  000080  5001               	movf	spiInit@sDataSample^0,w,c
   342  000082  1003               	iorwf	spiInit@sTransmitEdge^0,w,c
   343  000084  6EC7               	movwf	199,c	;volatile
   344  000086                     
   345                           ;spi.c: 20:         TRISC3 = 0;
   346  000086  9694               	bcf	3988,3,c	;volatile
   347  000088                     l48:
   348                           
   349                           ;spi.c: 23:     SSP1CON1 = sType | sClockIdle;
   350  000088  5004               	movf	spiInit@sType^0,w,c
   351  00008A  1002               	iorwf	spiInit@sClockIdle^0,w,c
   352  00008C  6EC6               	movwf	198,c	;volatile
   353  00008E  0012               	return		;funcret
   354  000090                     __end_of_spiInit:
   355                           	callstack 0
   356                           
   357 ;; *************** function _setIo *****************
   358 ;; Defined at:
   359 ;;		line 8 in file "init.c"
   360 ;; Parameters:    Size  Location     Type
   361 ;;		None
   362 ;; Auto vars:     Size  Location     Type
   363 ;;		None
   364 ;; Return value:  Size  Location     Type
   365 ;;                  1    wreg      void 
   366 ;; Registers used:
   367 ;;		wreg, status,2
   368 ;; Tracked objects:
   369 ;;		On entry : 0/0
   370 ;;		On exit  : 0/0
   371 ;;		Unchanged: 0/0
   372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   377 ;;Total ram usage:        0 bytes
   378 ;; Hardware stack levels used: 1
   379 ;; Hardware stack levels required when called: 5
   380 ;; This function calls:
   381 ;;		Nothing
   382 ;; This function is called by:
   383 ;;		_main
   384 ;; This function uses a non-reentrant model
   385 ;;
   386                           
   387                           	psect	text3
   388  0000C8                     __ptext3:
   389                           	callstack 0
   390  0000C8                     _setIo:
   391                           	callstack 25
   392  0000C8                     
   393                           ;init.c: 9:     nRBPU = 0;
   394  0000C8  9EF1               	bcf	4081,7,c	;volatile
   395  0000CA                     
   396                           ;init.c: 10:     TRISD = 0x00;
   397  0000CA  0E00               	movlw	0
   398  0000CC  6E95               	movwf	149,c	;volatile
   399                           
   400                           ;init.c: 11:     PORTD = 0x00;
   401  0000CE  0E00               	movlw	0
   402  0000D0  6E83               	movwf	131,c	;volatile
   403  0000D2  0012               	return		;funcret
   404  0000D4                     __end_of_setIo:
   405                           	callstack 0
   406                           
   407 ;; *************** function _setInterrupts *****************
   408 ;; Defined at:
   409 ;;		line 14 in file "init.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;		None
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		None
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   427 ;;Total ram usage:        0 bytes
   428 ;; Hardware stack levels used: 1
   429 ;; Hardware stack levels required when called: 5
   430 ;; This function calls:
   431 ;;		Nothing
   432 ;; This function is called by:
   433 ;;		_main
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437                           	psect	text4
   438  0000D4                     __ptext4:
   439                           	callstack 0
   440  0000D4                     _setInterrupts:
   441                           	callstack 25
   442  0000D4                     
   443                           ;init.c: 15:     GIE = 1;
   444  0000D4  8EF2               	bsf	4082,7,c	;volatile
   445                           
   446                           ;init.c: 16:     PEIE = 1;
   447  0000D6  8CF2               	bsf	4082,6,c	;volatile
   448                           
   449                           ;init.c: 17:     SSPIF = 0;
   450  0000D8  969E               	bcf	3998,3,c	;volatile
   451                           
   452                           ;init.c: 18:     SSPIE = 1;
   453  0000DA  869D               	bsf	3997,3,c	;volatile
   454  0000DC  0012               	return		;funcret
   455  0000DE                     __end_of_setInterrupts:
   456                           	callstack 0
   457                           
   458 ;; *************** function _service *****************
   459 ;; Defined at:
   460 ;;		line 15 in file "newmain.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;		None
   463 ;; Auto vars:     Size  Location     Type
   464 ;;		None
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, status,2, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   478 ;;Total ram usage:        0 bytes
   479 ;; Hardware stack levels used: 1
   480 ;; Hardware stack levels required when called: 4
   481 ;; This function calls:
   482 ;;		_interruptService
   483 ;; This function is called by:
   484 ;;		Interrupt level 2
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           	psect	intcode
   489  000008                     __pintcode:
   490                           	callstack 0
   491  000008                     _service:
   492                           	callstack 25
   493                           
   494                           ;incstack = 0
   495  000008  8209               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   496  00000A  ED6F  F000         	call	int_func,f	;refresh shadow registers
   497                           
   498                           	psect	intcode_body
   499  0000DE                     __pintcode_body:
   500                           	callstack 25
   501  0000DE                     int_func:
   502                           	callstack 25
   503  0000DE  0006               	pop		; remove dummy address from shadow register refresh
   504  0000E0                     
   505                           ;newmain.c: 16:     interruptService();
   506  0000E0  EC7C  F000         	call	_interruptService	;wreg free
   507  0000E4  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   508  0000E6  0011               	retfie		f
   509  0000E8                     __end_of_service:
   510                           	callstack 0
   511                           
   512 ;; *************** function _interruptService *****************
   513 ;; Defined at:
   514 ;;		line 11 in file "interruptService.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;		None
   517 ;; Auto vars:     Size  Location     Type
   518 ;;		None
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		wreg, status,2, cstack
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   532 ;;Total ram usage:        0 bytes
   533 ;; Hardware stack levels used: 1
   534 ;; Hardware stack levels required when called: 3
   535 ;; This function calls:
   536 ;;		_spiService
   537 ;; This function is called by:
   538 ;;		_service
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           	psect	text6
   543  0000F8                     __ptext6:
   544                           	callstack 0
   545  0000F8                     _interruptService:
   546                           	callstack 25
   547  0000F8                     
   548                           ;interruptService.c: 12:     spiService();
   549  0000F8  EC48  F000         	call	_spiService	;wreg free
   550  0000FC  0012               	return		;funcret
   551  0000FE                     __end_of_interruptService:
   552                           	callstack 0
   553                           
   554 ;; *************** function _spiService *****************
   555 ;; Defined at:
   556 ;;		line 15 in file "interruptService.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;		None
   559 ;; Auto vars:     Size  Location     Type
   560 ;;		None
   561 ;; Return value:  Size  Location     Type
   562 ;;                  1    wreg      void 
   563 ;; Registers used:
   564 ;;		wreg, status,2, cstack
   565 ;; Tracked objects:
   566 ;;		On entry : 0/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   574 ;;Total ram usage:        0 bytes
   575 ;; Hardware stack levels used: 1
   576 ;; Hardware stack levels required when called: 2
   577 ;; This function calls:
   578 ;;		_spiRead
   579 ;; This function is called by:
   580 ;;		_interruptService
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	text7
   585  000090                     __ptext7:
   586                           	callstack 0
   587  000090                     _spiService:
   588                           	callstack 25
   589  000090                     
   590                           ;interruptService.c: 16:     if (SSPIF == 1) {
   591  000090  A69E               	btfss	3998,3,c	;volatile
   592  000092  EF4D  F000         	goto	i2u2_41
   593  000096  EF4F  F000         	goto	i2u2_40
   594  00009A                     i2u2_41:
   595  00009A  EF54  F000         	goto	i2l103
   596  00009E                     i2u2_40:
   597  00009E                     
   598                           ;interruptService.c: 17:         SSPIF = 0;
   599  00009E  969E               	bcf	3998,3,c	;volatile
   600  0000A0                     
   601                           ;interruptService.c: 18:         readValue = spiRead();
   602  0000A0  EC78  F000         	call	_spiRead	;wreg free
   603  0000A4  6E07               	movwf	_readValue^0,c
   604  0000A6                     
   605                           ;interruptService.c: 19:         FLAGS.ByteBits.DISPLAY_READING = 1;
   606  0000A6  8208               	bsf	_FLAGS^0,1,c
   607  0000A8                     i2l103:
   608  0000A8  0012               	return		;funcret
   609  0000AA                     __end_of_spiService:
   610                           	callstack 0
   611                           
   612 ;; *************** function _spiRead *****************
   613 ;; Defined at:
   614 ;;		line 44 in file "spi.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      unsigned char 
   621 ;; Registers used:
   622 ;;		wreg, status,2, cstack
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   632 ;;Total ram usage:        0 bytes
   633 ;; Hardware stack levels used: 1
   634 ;; Hardware stack levels required when called: 1
   635 ;; This function calls:
   636 ;;		_spiReceiveWait
   637 ;; This function is called by:
   638 ;;		_spiService
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           	psect	text8
   643  0000F0                     __ptext8:
   644                           	callstack 0
   645  0000F0                     _spiRead:
   646                           	callstack 25
   647  0000F0                     
   648                           ;spi.c: 46:     spiReceiveWait();
   649  0000F0  EC55  F000         	call	_spiReceiveWait	;wreg free
   650  0000F4                     
   651                           ;spi.c: 47:     return(SSPBUF);
   652  0000F4  50C9               	movf	201,w,c	;volatile
   653  0000F6  0012               	return		;funcret
   654  0000F8                     __end_of_spiRead:
   655                           	callstack 0
   656                           
   657 ;; *************** function _spiReceiveWait *****************
   658 ;; Defined at:
   659 ;;		line 26 in file "spi.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;		None
   662 ;; Auto vars:     Size  Location     Type
   663 ;;		None
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      void 
   666 ;; Registers used:
   667 ;;		None
   668 ;; Tracked objects:
   669 ;;		On entry : 0/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   677 ;;Total ram usage:        0 bytes
   678 ;; Hardware stack levels used: 1
   679 ;; This function calls:
   680 ;;		Nothing
   681 ;; This function is called by:
   682 ;;		_spiRead
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text9
   687  0000AA                     __ptext9:
   688                           	callstack 0
   689  0000AA                     _spiReceiveWait:
   690                           	callstack 25
   691  0000AA                     i2l52:
   692  0000AA  A0C7               	btfss	199,0,c	;volatile
   693  0000AC  EF5A  F000         	goto	i2u1_41
   694  0000B0  EF5C  F000         	goto	i2u1_40
   695  0000B4                     i2u1_41:
   696  0000B4  EF55  F000         	goto	i2l52
   697  0000B8                     i2u1_40:
   698  0000B8  0012               	return		;funcret
   699  0000BA                     __end_of_spiReceiveWait:
   700                           	callstack 0
   701  0000                     
   702                           	psect	rparam
   703  0000                     
   704                           	psect	temp
   705  000009                     btemp:
   706                           	callstack 0
   707  000009                     	ds	1
   708  0000                     int$flags	set	btemp
   709  0000                     wtemp8	set	btemp+1
   710  0000                     ttemp5	set	btemp+1
   711  0000                     ttemp6	set	btemp+4
   712  0000                     ttemp7	set	btemp+8
   713                           
   714                           	psect	idloc
   715                           
   716                           ;Config register IDLOC0 @ 0x200000
   717                           ;	unspecified, using default values
   718  200000                     	org	2097152
   719  200000  FF                 	db	255
   720                           
   721                           ;Config register IDLOC1 @ 0x200001
   722                           ;	unspecified, using default values
   723  200001                     	org	2097153
   724  200001  FF                 	db	255
   725                           
   726                           ;Config register IDLOC2 @ 0x200002
   727                           ;	unspecified, using default values
   728  200002                     	org	2097154
   729  200002  FF                 	db	255
   730                           
   731                           ;Config register IDLOC3 @ 0x200003
   732                           ;	unspecified, using default values
   733  200003                     	org	2097155
   734  200003  FF                 	db	255
   735                           
   736                           ;Config register IDLOC4 @ 0x200004
   737                           ;	unspecified, using default values
   738  200004                     	org	2097156
   739  200004  FF                 	db	255
   740                           
   741                           ;Config register IDLOC5 @ 0x200005
   742                           ;	unspecified, using default values
   743  200005                     	org	2097157
   744  200005  FF                 	db	255
   745                           
   746                           ;Config register IDLOC6 @ 0x200006
   747                           ;	unspecified, using default values
   748  200006                     	org	2097158
   749  200006  FF                 	db	255
   750                           
   751                           ;Config register IDLOC7 @ 0x200007
   752                           ;	unspecified, using default values
   753  200007                     	org	2097159
   754  200007  FF                 	db	255
   755                           
   756                           	psect	config
   757                           
   758                           ; Padding undefined space
   759  300000                     	org	3145728
   760  300000  FF                 	db	255
   761                           
   762                           ;Config register CONFIG1H @ 0x300001
   763                           ;	Oscillator Selection bits
   764                           ;	OSC = XT, XT oscillator
   765                           ;	Fail-Safe Clock Monitor Enable bit
   766                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   767                           ;	Internal/External Oscillator Switchover bit
   768                           ;	IESO = OFF, Two-Speed Start-up disabled
   769  300001                     	org	3145729
   770  300001  01                 	db	1
   771                           
   772                           ;Config register CONFIG2L @ 0x300002
   773                           ;	Power-up Timer Enable bit
   774                           ;	PWRT = OFF, PWRT disabled
   775                           ;	Brown-out Reset Enable bits
   776                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   777                           ;	Brown-out Voltage bits
   778                           ;	BORV = 3, Minimum setting
   779  300002                     	org	3145730
   780  300002  19                 	db	25
   781                           
   782                           ;Config register CONFIG2H @ 0x300003
   783                           ;	Watchdog Timer
   784                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   785                           ;	Watchdog Timer Postscale Select bits
   786                           ;	WDTPS = 32768, 1:32768
   787  300003                     	org	3145731
   788  300003  1E                 	db	30
   789                           
   790                           ;Config register CONFIG3L @ 0x300004
   791                           ;	Processor Data Memory Mode Select bits
   792                           ;	MODE = MC, Microcontroller mode
   793                           ;	Address Bus Width Select bits
   794                           ;	ADDRBW = ADDR20BIT, 20-bit Address Bus
   795                           ;	Data Bus Width Select bit
   796                           ;	DATABW = DATA16BIT, 16-bit External Bus mode
   797                           ;	External Bus Data Wait Enable bit
   798                           ;	WAIT = OFF, Wait selections are unavailable for table reads and table writes
   799  300004                     	org	3145732
   800  300004  F3                 	db	243
   801                           
   802                           ;Config register CONFIG3H @ 0x300005
   803                           ;	CCP2 MUX bit
   804                           ;	CCP2MX = PORTC, ECCP2 input/output is multiplexed with RC1
   805                           ;	ECCP MUX bit
   806                           ;	ECCPMX = PORTE, ECCP1/3 (P1B/P1C/P3B/P3C) are multiplexed onto RE6, RE5, RE4 and RE3 r
      +                          espectively
   807                           ;	Low-Power Timer1 Oscillator Enable bit
   808                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   809                           ;	MCLR Pin Enable bit
   810                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
   811  300005                     	org	3145733
   812  300005  83                 	db	131
   813                           
   814                           ;Config register CONFIG4L @ 0x300006
   815                           ;	Stack Full/Underflow Reset Enable bit
   816                           ;	STVREN = ON, Stack full/underflow will cause Reset
   817                           ;	Single-Supply ICSP Enable bit
   818                           ;	LVP = OFF, Single-Supply ICSP disabled
   819                           ;	Boot Block Size Select bits
   820                           ;	BBSIZ = BB2K, 1K word (2 Kbytes) Boot Block size
   821                           ;	Extended Instruction Set Enable bit
   822                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   823                           ;	Background Debugger Enable bit
   824                           ;	DEBUG = 0x1, unprogrammed default
   825  300006                     	org	3145734
   826  300006  81                 	db	129
   827                           
   828                           ; Padding undefined space
   829  300007                     	org	3145735
   830  300007  FF                 	db	255
   831                           
   832                           ;Config register CONFIG5L @ 0x300008
   833                           ;	Code Protection bit Block 0
   834                           ;	CP0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not code-protected
   835                           ;	Code Protection bit Block 1
   836                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   837                           ;	Code Protection bit Block 2
   838                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   839                           ;	Code Protection bit Block 3
   840                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   841                           ;	Code Protection bit Block 4
   842                           ;	CP4 = OFF, Block 4 (010000-013FFFh) not code-protected
   843                           ;	Code Protection bit Block 5
   844                           ;	CP5 = OFF, Block 5 (014000-017FFFh) not code-protected
   845                           ;	Code Protection bit Block 6
   846                           ;	CP6 = OFF, Block 6 (01BFFF-018000h) not code-protected
   847                           ;	Code Protection bit Block 7
   848                           ;	CP7 = OFF, Block 7 (01C000-01FFFFh) not code-protected
   849  300008                     	org	3145736
   850  300008  FF                 	db	255
   851                           
   852                           ;Config register CONFIG5H @ 0x300009
   853                           ;	Boot Block Code Protection bit
   854                           ;	CPB = OFF, Boot Block (000000-0007FFh) not code-protected
   855                           ;	Data EEPROM Code Protection bit
   856                           ;	CPD = OFF, Data EEPROM not code-protected
   857  300009                     	org	3145737
   858  300009  C0                 	db	192
   859                           
   860                           ;Config register CONFIG6L @ 0x30000A
   861                           ;	Write Protection bit Block 0
   862                           ;	WRT0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not write-protected
   863                           ;	Write Protection bit Block 1
   864                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   865                           ;	Write Protection bit Block 2
   866                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   867                           ;	Write Protection bit Block 3
   868                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   869                           ;	Write Protection bit Block 4
   870                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
   871                           ;	Write Protection bit Block 5
   872                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
   873                           ;	Write Protection bit Block 6
   874                           ;	WRT6 = OFF, Block 6 (01BFFF-018000h) not write-protected
   875                           ;	Write Protection bit Block 7
   876                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
   877  30000A                     	org	3145738
   878  30000A  FF                 	db	255
   879                           
   880                           ;Config register CONFIG6H @ 0x30000B
   881                           ;	Configuration Register Write Protection bit
   882                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   883                           ;	Boot Block Write Protection bit
   884                           ;	WRTB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not write-protected
   885                           ;	Data EEPROM Write Protection bit
   886                           ;	WRTD = OFF, Data EEPROM not write-protected
   887  30000B                     	org	3145739
   888  30000B  E0                 	db	224
   889                           
   890                           ;Config register CONFIG7L @ 0x30000C
   891                           ;	Table Read Protection bit Block 0
   892                           ;	EBTR0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not protected from table reads
      +                           executed in other blocks
   893                           ;	Table Read Protection bit Block 1
   894                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   895                           ;	Table Read Protection bit Block 2
   896                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   897                           ;	Table Read Protection bit Block 3
   898                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   899                           ;	Table Read Protection bit Block 4
   900                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
   901                           ;	Table Read Protection bit Block 5
   902                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
   903                           ;	Table Read Protection bit Block 6
   904                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
   905                           ;	Table Read Protection bit Block 7
   906                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
   907  30000C                     	org	3145740
   908  30000C  FF                 	db	255
   909                           
   910                           ;Config register CONFIG7H @ 0x30000D
   911                           ;	Boot Block Table Read Protection bit
   912                           ;	EBTRB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not protected from table re
      +                          ads executed in other blocks
   913  30000D                     	org	3145741
   914  30000D  40                 	db	64
   915                           tosu	equ	0xFFF
   916                           tosh	equ	0xFFE
   917                           tosl	equ	0xFFD
   918                           stkptr	equ	0xFFC
   919                           pclatu	equ	0xFFB
   920                           pclath	equ	0xFFA
   921                           pcl	equ	0xFF9
   922                           tblptru	equ	0xFF8
   923                           tblptrh	equ	0xFF7
   924                           tblptrl	equ	0xFF6
   925                           tablat	equ	0xFF5
   926                           prodh	equ	0xFF4
   927                           prodl	equ	0xFF3
   928                           indf0	equ	0xFEF
   929                           postinc0	equ	0xFEE
   930                           postdec0	equ	0xFED
   931                           preinc0	equ	0xFEC
   932                           plusw0	equ	0xFEB
   933                           fsr0h	equ	0xFEA
   934                           fsr0l	equ	0xFE9
   935                           wreg	equ	0xFE8
   936                           indf1	equ	0xFE7
   937                           postinc1	equ	0xFE6
   938                           postdec1	equ	0xFE5
   939                           preinc1	equ	0xFE4
   940                           plusw1	equ	0xFE3
   941                           fsr1h	equ	0xFE2
   942                           fsr1l	equ	0xFE1
   943                           bsr	equ	0xFE0
   944                           indf2	equ	0xFDF
   945                           postinc2	equ	0xFDE
   946                           postdec2	equ	0xFDD
   947                           preinc2	equ	0xFDC
   948                           plusw2	equ	0xFDB
   949                           fsr2h	equ	0xFDA
   950                           fsr2l	equ	0xFD9
   951                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      6       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_spiInit

Critical Paths under _service in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _service in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _service in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _service in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _service in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _service in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _service in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _service in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _service in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _service in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _service in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _service in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _service in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _service in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _service in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _service in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _service in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     375
                                              4 COMRAM     2     2      0
                      _setInterrupts
                              _setIo
                            _spiInit
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setIo                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setInterrupts                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _service                                              0     0      0       0
                   _interruptService
 ---------------------------------------------------------------------------------
 (3) _interruptService                                     0     0      0       0
                         _spiService
 ---------------------------------------------------------------------------------
 (4) _spiService                                           0     0      0       0
                            _spiRead
 ---------------------------------------------------------------------------------
 (5) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (6) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setInterrupts
   _setIo
   _spiInit
   _spiWrite

 _service (ROOT)
   _interruptService
     _spiService
       _spiRead
         _spiReceiveWait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      6       8       1        8.5%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       8       6        0.0%
DATA                 0      0       8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat May 22 13:26:34 2021

              _SSPSTATbits 000FC7                         l48 0088                         l49 008E  
                       l58 00EE                         l83 00D2                         l86 00DC  
                       u50 0076                         u51 0072                         u60 0040  
                       u61 003C                         u77 0050                        l801 00D4  
                      l813 00EA                        l841 0076                        l843 0080  
                      l851 001A                        l845 0086                        l837 0066  
                      l853 002C                        l839 0068                        l855 0032  
                      l847 0012                        l857 0040                        l849 0016  
                      l859 0046                        l797 00C8                        l799 00CA  
                      _GIE 007F97                        wreg 000FE8                       _PEIE 007F96  
                     i2l23 00E4                       i2l52 00AA                       i2l55 00B8  
                     i2l66 00F6                       i2l99 00FC                       _main 0012  
                     btemp 0009                       start 000E               ___param_bank 000000  
 __end_of_interruptService 00FE                      ?_main 0001                      _FLAGS 0008  
                    i2l103 00A8                      i2l815 00E0                      i2l781 00F0  
                    i2l783 00F4                      i2l791 00A0                      i2l793 00A6  
                    i2l779 00AA                      i2l787 0090                      i2l795 00F8  
                    i2l789 009E                      _PORTD 000F83                      _TRISD 000F95  
                    _SSPIE 007CEB                      _SSPIF 007CF3                      _nRBPU 007F8F  
                    _setIo 00C8            __end_of_spiInit 0090            __end_of_spiRead 00F8  
          __end_of_service 00E8                      ttemp5 000A                      ttemp6 000D  
                    ttemp7 0011      __end_of_setInterrupts 00DE                      wtemp8 000A  
          __initialization 00BA               __end_of_main 0064                     ??_main 0005  
            __activetblptr 000000                     ?_setIo 0001                     i2u1_40 00B8  
                   i2u1_41 00B4                     i2u2_40 009E                     i2u2_41 009A  
                   _TRISC3 007CA3                     _TRISC5 007CA5                     _SSPBUF 000FC9  
                   isa$std 000001           __end_of_spiWrite 00F0                  ??_spiInit 0004  
                ??_spiRead 0001                  ??_service 0001                 __accesstop 0060  
  __end_of__initialization 00BE              ___rparam_used 000001             __pcstackCOMRAM 0001  
            __end_of_setIo 00D4                    ??_setIo 0001          ?_interruptService 0001  
  __size_of_spiReceiveWait 0010         ??_interruptService 0001                    _SSPSTAT 000FC7  
                  __Hparam 0000                    __Lparam 0000                  ?_spiWrite 0001  
                  __pcinit 00BA                    __ramtop 1000                    __ptext0 0012  
                  __ptext1 00E8                    __ptext2 0064                    __ptext3 00C8  
                  __ptext4 00D4                    __ptext6 00F8                    __ptext7 0090  
                  __ptext8 00F0                    __ptext9 00AA                    _spiInit 0064  
                  _spiRead 00F0                    _service 0008             __pintcode_body 00DE  
     end_of_initialization 00BE                    int_func 00DE                 ??_spiWrite 0001  
               _spiService 0090     __size_of_setInterrupts 000A                spiWrite@dat 0001  
           _spiReceiveWait 00AA        start_initialization 00BA              _setInterrupts 00D4  
   __end_of_spiReceiveWait 00BA                ?_spiService 0001                __pbssCOMRAM 0007  
__size_of_interruptService 0006             ?_setInterrupts 0001            ?_spiReceiveWait 0001  
                __pintcode 0008          __size_of_spiWrite 0008                   ?_spiInit 0001  
                 ?_spiRead 0001                   ?_service 0001                  _readValue 0007  
           __size_of_setIo 000C        __size_of_spiService 001A       spiInit@sTransmitEdge 0003  
       spiInit@sDataSample 0001                   _SSP1CON1 000FC6            ??_setInterrupts 0001  
                 __Hrparam 0000                   __Lrparam 0000           _interruptService 00F8  
         __size_of_spiInit 002C           __size_of_spiRead 0008           __size_of_service 00E0  
            __size_of_main 0052                   isa$xinst 000000                   _spiWrite 00E8  
                 int$flags 0009               spiInit@sType 0004               ??_spiService 0001  
        spiInit@sClockIdle 0002                   intlevel2 0000         __end_of_spiService 00AA  
         ??_spiReceiveWait 0001  
