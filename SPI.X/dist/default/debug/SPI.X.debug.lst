

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jun 27 16:36:26 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F8722 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74                           	psect	smallconst
    75  001000                     __psmallconst:
    76                           	callstack 0
    77  001000  00                 	db	0
    78  001001                     main@F4611:
    79                           	callstack 0
    80  001001  73                 	db	115
    81  001002  73                 	db	115
    82  001003  73                 	db	115
    83  001004  64                 	db	100
    84  001005  64                 	db	100
    85  001006  64                 	db	100
    86  001007  64                 	db	100
    87  001008  00                 	db	0
    88  001009  00                 	db	0
    89  00100A  00                 	db	0
    90  00100B  00                 	db	0
    91  00100C  00                 	db	0
    92  00100D  00                 	db	0
    93  00100E  00                 	db	0
    94  00100F  00                 	db	0
    95  001010  00                 	db	0
    96  001011  00                 	db	0
    97  001012  00                 	db	0
    98  001013  00                 	db	0
    99  001014  00                 	db	0
   100  001015  00                 	db	0
   101  001016  00                 	db	0
   102  001017  00                 	db	0
   103  001018  00                 	db	0
   104  001019  00                 	db	0
   105  00101A  00                 	db	0
   106  00101B  00                 	db	0
   107  00101C  00                 	db	0
   108  00101D  00                 	db	0
   109  00101E  00                 	db	0
   110  00101F  00                 	db	0
   111  001020  00                 	db	0
   112  001021  00                 	db	0
   113  001022  00                 	db	0
   114  001023  00                 	db	0
   115  001024  00                 	db	0
   116  001025  00                 	db	0
   117  001026  00                 	db	0
   118  001027  00                 	db	0
   119  001028  00                 	db	0
   120  001029  00                 	db	0
   121  00102A  00                 	db	0
   122  00102B  00                 	db	0
   123  00102C  00                 	db	0
   124  00102D  00                 	db	0
   125  00102E  00                 	db	0
   126  00102F  00                 	db	0
   127  001030  00                 	db	0
   128  001031  00                 	db	0
   129  001032  00                 	db	0
   130  001033  00                 	db	0
   131  001034  00                 	db	0
   132  001035  00                 	db	0
   133  001036  00                 	db	0
   134  001037  00                 	db	0
   135  001038  00                 	db	0
   136  001039  00                 	db	0
   137  00103A  00                 	db	0
   138  00103B  00                 	db	0
   139  00103C  00                 	db	0
   140  00103D  00                 	db	0
   141  00103E  00                 	db	0
   142  00103F  00                 	db	0
   143  001040  00                 	db	0
   144  001041  00                 	db	0
   145  001042  00                 	db	0
   146  001043  00                 	db	0
   147  001044  00                 	db	0
   148  001045  00                 	db	0
   149  001046  00                 	db	0
   150  001047  00                 	db	0
   151  001048  00                 	db	0
   152  001049  00                 	db	0
   153  00104A  00                 	db	0
   154  00104B  00                 	db	0
   155  00104C  00                 	db	0
   156  00104D  00                 	db	0
   157  00104E  00                 	db	0
   158  00104F  00                 	db	0
   159  001050  00                 	db	0
   160  001051                     __end_ofmain@F4611:
   161                           	callstack 0
   162  0000                     _PORTD	set	3971
   163  0000                     _TRISD	set	3989
   164  0000                     _TRISB0	set	31896
   165  0000                     _TRISC6	set	31910
   166  0000                     _TRISC7	set	31911
   167  0000                     _LATC0	set	31832
   168  0000                     _TRISC2	set	31906
   169  0000                     _TRISC3	set	31907
   170  0000                     _TRISC4	set	31908
   171  0000                     _TRISC5	set	31909
   172  0000                     _TXREG1	set	4013
   173  0000                     _RCREG1	set	4014
   174  0000                     _SPBRG	set	4015
   175  0000                     _SSPBUF	set	4041
   176  0000                     _SSPSTATbits	set	4039
   177  0000                     _SSP1CON1	set	4038
   178  0000                     _SSPSTAT	set	4039
   179  0000                     _TXEN1	set	32101
   180  0000                     _CREN1	set	32092
   181  0000                     _SPEN1	set	32095
   182  0000                     _SYNC1	set	32100
   183  0000                     _BRGH1	set	32098
   184  0000                     _RC1IF	set	31989
   185  0000                     _RC1IE	set	31981
   186  0000                     _SSPIE	set	31979
   187  0000                     _SSPIF	set	31987
   188  0000                     _INT0IF	set	32657
   189  0000                     _INT0IE	set	32660
   190  0000                     _INTEDG0	set	32654
   191  0000                     _PEIE	set	32662
   192  0000                     _GIE	set	32663
   193  001051  00                 	db	0	; dummy byte at the end
   194  0000                     
   195                           ; #config settings
   196                           
   197                           	psect	cinit
   198  0011A8                     __pcinit:
   199                           	callstack 0
   200  0011A8                     start_initialization:
   201                           	callstack 0
   202  0011A8                     __initialization:
   203                           	callstack 0
   204                           
   205                           ; Clear objects allocated to COMRAM (4 bytes)
   206  0011A8  6A55               	clrf	(__pbssCOMRAM+3)& (0+255),c
   207  0011AA  6A54               	clrf	(__pbssCOMRAM+2)& (0+255),c
   208  0011AC  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
   209  0011AE  6A52               	clrf	__pbssCOMRAM& (0+255),c
   210  0011B0                     end_of_initialization:
   211                           	callstack 0
   212  0011B0                     __end_of__initialization:
   213                           	callstack 0
   214  0011B0  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   215  0011B2  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   216  0011B4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   217  0011B6  6EF8               	movwf	tblptru,c
   218  0011B8  0E10               	movlw	high __Lsmallconst
   219  0011BA  6EF7               	movwf	tblptrh,c
   220  0011BC  0100               	movlb	0
   221  0011BE  EF64  F008         	goto	_main	;jump to C main() function
   222                           
   223                           	psect	bssCOMRAM
   224  000052                     __pbssCOMRAM:
   225                           	callstack 0
   226  000052                     _outValue:
   227                           	callstack 0
   228  000052                     	ds	1
   229  000053                     _readSerialValue:
   230                           	callstack 0
   231  000053                     	ds	1
   232  000054                     _FLAGS:
   233                           	callstack 0
   234  000054                     	ds	1
   235  000055                     _readSPIValue:
   236                           	callstack 0
   237  000055                     	ds	1
   238                           
   239                           	psect	cstackCOMRAM
   240  000001                     __pcstackCOMRAM:
   241                           	callstack 0
   242  000001                     ??_buttonCallback:
   243  000001                     writeSerial@value:
   244                           	callstack 0
   245                           
   246                           ; 1 bytes @ 0x0
   247  000001                     	ds	1
   248  000002                     main@test:
   249                           	callstack 0
   250                           
   251                           ; 80 bytes @ 0x1
   252  000002                     	ds	80
   253                           
   254 ;;
   255 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   256 ;;
   257 ;; *************** function _main *****************
   258 ;; Defined at:
   259 ;;		line 22 in file "newmain.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;  test           80    1[COMRAM] const unsigned char [80]
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      void 
   266 ;; Registers used:
   267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   268 ;; Tracked objects:
   269 ;;		On entry : 0/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   274 ;;      Locals:        80       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   276 ;;      Totals:        80       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   277 ;;Total ram usage:       80 bytes
   278 ;; Hardware stack levels required when called: 9
   279 ;; This function calls:
   280 ;;		_buttonCallback
   281 ;;		_displayRequestHandle
   282 ;;		_serialCallback
   283 ;;		_setInterrupts
   284 ;;		_setIo
   285 ;;		_setSPIInterrupt
   286 ;;		_setSerial
   287 ;;		_setSwitchInterrput
   288 ;; This function is called by:
   289 ;;		Startup code after reset
   290 ;; This function uses a non-reentrant model
   291 ;;
   292                           
   293                           	psect	text0
   294  0010C8                     __ptext0:
   295                           	callstack 0
   296  0010C8                     _main:
   297                           	callstack 22
   298  0010C8                     
   299                           ;newmain.c: 23:     setIo();
   300  0010C8  ECED  F008         	call	_setIo	;wreg free
   301  0010CC                     
   302                           ;newmain.c: 24:     setSPIInterrupt();
   303  0010CC  EC29  F009         	call	_setSPIInterrupt	;wreg free
   304  0010D0                     
   305                           ;newmain.c: 25:     setSerial();
   306  0010D0  ECE1  F008         	call	_setSerial	;wreg free
   307                           
   308                           ;newmain.c: 26:     setSwitchInterrput();
   309  0010D4  EC26  F009         	call	_setSwitchInterrput	;wreg free
   310                           
   311                           ;newmain.c: 27:     setInterrupts();
   312  0010D8  EC2C  F009         	call	_setInterrupts	;wreg free
   313  0010DC                     
   314                           ;newmain.c: 31:     const unsigned char test[80] = "sssdddd";
   315  0010DC  0E01               	movlw	low main@F4611
   316  0010DE  6EF6               	movwf	tblptrl,c
   317  0010E0                     	if	0	;There is only one active tblptr byte
   318  0010E0                     	endif
   319  0010E0                     	if	0	;There are less than 3 active tblptr bytes
   320  0010E0                     	endif
   321  0010E0  EE20  F002         	lfsr	2,main@test
   322  0010E4  0E4F               	movlw	79
   323  0010E6                     u150:
   324  0010E6  0009               	tblrd		*+
   325  0010E8  CFF5 FFDE          	movff	tablat,postinc2
   326  0010EC  06E8               	decf	wreg,f,c
   327  0010EE  E2FB               	bc	u150
   328  0010F0                     l1043:
   329                           
   330                           ;newmain.c: 34:         if (FLAGS.bits.DISPLAY_READING) {
   331  0010F0  A854               	btfss	_FLAGS^0,4,c
   332  0010F2  EF7D  F008         	goto	u161
   333  0010F6  EF7F  F008         	goto	u160
   334  0010FA                     u161:
   335  0010FA  EF82  F008         	goto	l1049
   336  0010FE                     u160:
   337  0010FE                     
   338                           ;newmain.c: 35:             displayRequestHandle();
   339  0010FE  ECBD  F008         	call	_displayRequestHandle	;wreg free
   340  001102                     
   341                           ;newmain.c: 36:             FLAGS.bits.DISPLAY_READING = 0;
   342  001102  9854               	bcf	_FLAGS^0,4,c
   343  001104                     l1049:
   344                           
   345                           ;newmain.c: 38:         if (FLAGS.bits.UART_RECEIVED) {
   346  001104  A254               	btfss	_FLAGS^0,1,c
   347  001106  EF87  F008         	goto	u171
   348  00110A  EF89  F008         	goto	u170
   349  00110E                     u171:
   350  00110E  EF8C  F008         	goto	l1055
   351  001112                     u170:
   352  001112                     
   353                           ;newmain.c: 39:             serialCallback();
   354  001112  ECFD  F008         	call	_serialCallback	;wreg free
   355  001116                     
   356                           ;newmain.c: 40:             FLAGS.bits.UART_RECEIVED = 0;
   357  001116  9254               	bcf	_FLAGS^0,1,c
   358  001118                     l1055:
   359                           
   360                           ;newmain.c: 42:         if (FLAGS.bits.PUSHED_BUTTON) {
   361  001118  A654               	btfss	_FLAGS^0,3,c
   362  00111A  EF91  F008         	goto	u181
   363  00111E  EF93  F008         	goto	u180
   364  001122                     u181:
   365  001122  EF78  F008         	goto	l1043
   366  001126                     u180:
   367  001126                     
   368                           ;newmain.c: 43:             buttonCallback();
   369  001126  EC9A  F008         	call	_buttonCallback	;wreg free
   370  00112A                     
   371                           ;newmain.c: 44:             FLAGS.bits.PUSHED_BUTTON = 0;
   372  00112A  9654               	bcf	_FLAGS^0,3,c
   373  00112C  EF78  F008         	goto	l1043
   374  001130  EF07  F000         	goto	start
   375  001134                     __end_of_main:
   376                           	callstack 0
   377                           
   378 ;; *************** function _setSwitchInterrput *****************
   379 ;; Defined at:
   380 ;;		line 24 in file "init.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		None
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   398 ;;Total ram usage:        0 bytes
   399 ;; Hardware stack levels used: 1
   400 ;; Hardware stack levels required when called: 6
   401 ;; This function calls:
   402 ;;		Nothing
   403 ;; This function is called by:
   404 ;;		_main
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           	psect	text1
   409  00124C                     __ptext1:
   410                           	callstack 0
   411  00124C                     _setSwitchInterrput:
   412                           	callstack 24
   413  00124C                     
   414                           ;init.c: 25:     INTEDG0 = 1;
   415  00124C  8CF1               	bsf	4081,6,c	;volatile
   416                           
   417                           ;init.c: 26:     INT0IE = 1;
   418  00124E  88F2               	bsf	4082,4,c	;volatile
   419  001250  0012               	return		;funcret
   420  001252                     __end_of_setSwitchInterrput:
   421                           	callstack 0
   422                           
   423 ;; *************** function _setSerial *****************
   424 ;; Defined at:
   425 ;;		line 5 in file "serial.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;		None
   428 ;; Auto vars:     Size  Location     Type
   429 ;;		None
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, status,2
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   443 ;;Total ram usage:        0 bytes
   444 ;; Hardware stack levels used: 1
   445 ;; Hardware stack levels required when called: 6
   446 ;; This function calls:
   447 ;;		Nothing
   448 ;; This function is called by:
   449 ;;		_main
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453                           	psect	text2
   454  0011C2                     __ptext2:
   455                           	callstack 0
   456  0011C2                     _setSerial:
   457                           	callstack 24
   458  0011C2                     
   459                           ;serial.c: 6:     BRGH1 = 0;
   460  0011C2  94AC               	bcf	4012,2,c	;volatile
   461  0011C4                     
   462                           ;serial.c: 7:     SPBRG = 31;
   463  0011C4  0E1F               	movlw	31
   464  0011C6  6EAF               	movwf	175,c	;volatile
   465  0011C8                     
   466                           ;serial.c: 8:     SYNC1=0;
   467  0011C8  98AC               	bcf	4012,4,c	;volatile
   468  0011CA                     
   469                           ;serial.c: 9:     SPEN1 = 1;
   470  0011CA  8EAB               	bsf	4011,7,c	;volatile
   471  0011CC                     
   472                           ;serial.c: 10:     RC1IE = 1;
   473  0011CC  8A9D               	bsf	3997,5,c	;volatile
   474  0011CE                     
   475                           ;serial.c: 11:     CREN1 = 1;
   476  0011CE  88AB               	bsf	4011,4,c	;volatile
   477  0011D0                     
   478                           ;serial.c: 12:     RC1IF = 0;
   479  0011D0  9A9E               	bcf	3998,5,c	;volatile
   480  0011D2                     
   481                           ;serial.c: 13:     TXEN1 = 1;
   482  0011D2  8AAC               	bsf	4012,5,c	;volatile
   483                           
   484                           ;serial.c: 19:     RCREG1 = 0;
   485  0011D4  0E00               	movlw	0
   486  0011D6  6EAE               	movwf	174,c	;volatile
   487  0011D8  0012               	return		;funcret
   488  0011DA                     __end_of_setSerial:
   489                           	callstack 0
   490                           
   491 ;; *************** function _setSPIInterrupt *****************
   492 ;; Defined at:
   493 ;;		line 8 in file "spi.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;		None
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		None
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   511 ;;Total ram usage:        0 bytes
   512 ;; Hardware stack levels used: 1
   513 ;; Hardware stack levels required when called: 6
   514 ;; This function calls:
   515 ;;		Nothing
   516 ;; This function is called by:
   517 ;;		_main
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           	psect	text3
   522  001252                     __ptext3:
   523                           	callstack 0
   524  001252                     _setSPIInterrupt:
   525                           	callstack 24
   526  001252                     
   527                           ;spi.c: 9:     SSPIF = 0;
   528  001252  969E               	bcf	3998,3,c	;volatile
   529                           
   530                           ;spi.c: 10:     SSPIE = 1;
   531  001254  869D               	bsf	3997,3,c	;volatile
   532  001256  0012               	return		;funcret
   533  001258                     __end_of_setSPIInterrupt:
   534                           	callstack 0
   535                           
   536 ;; *************** function _setIo *****************
   537 ;; Defined at:
   538 ;;		line 9 in file "init.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;		None
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg, status,2
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;Total ram usage:        0 bytes
   557 ;; Hardware stack levels used: 1
   558 ;; Hardware stack levels required when called: 6
   559 ;; This function calls:
   560 ;;		Nothing
   561 ;; This function is called by:
   562 ;;		_main
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           	psect	text4
   567  0011DA                     __ptext4:
   568                           	callstack 0
   569  0011DA                     _setIo:
   570                           	callstack 24
   571  0011DA                     
   572                           ;init.c: 11:     TRISD = 0x00;
   573  0011DA  0E00               	movlw	0
   574  0011DC  6E95               	movwf	149,c	;volatile
   575                           
   576                           ;init.c: 12:     PORTD = 0x00;
   577  0011DE  0E00               	movlw	0
   578  0011E0  6E83               	movwf	131,c	;volatile
   579  0011E2                     
   580                           ;init.c: 13:     TRISC7 = 1;
   581  0011E2  8E94               	bsf	3988,7,c	;volatile
   582  0011E4                     
   583                           ;init.c: 14:     TRISC6 = 0;
   584  0011E4  9C94               	bcf	3988,6,c	;volatile
   585  0011E6                     
   586                           ;init.c: 15:     TRISB0 = 1;
   587  0011E6  8093               	bsf	3987,0,c	;volatile
   588  0011E8  0012               	return		;funcret
   589  0011EA                     __end_of_setIo:
   590                           	callstack 0
   591                           
   592 ;; *************** function _setInterrupts *****************
   593 ;; Defined at:
   594 ;;		line 18 in file "init.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;		None
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		None
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   612 ;;Total ram usage:        0 bytes
   613 ;; Hardware stack levels used: 1
   614 ;; Hardware stack levels required when called: 6
   615 ;; This function calls:
   616 ;;		Nothing
   617 ;; This function is called by:
   618 ;;		_main
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           	psect	text5
   623  001258                     __ptext5:
   624                           	callstack 0
   625  001258                     _setInterrupts:
   626                           	callstack 24
   627  001258                     
   628                           ;init.c: 19:     GIE = 1;
   629  001258  8EF2               	bsf	4082,7,c	;volatile
   630                           
   631                           ;init.c: 20:     PEIE = 1;
   632  00125A  8CF2               	bsf	4082,6,c	;volatile
   633  00125C  0012               	return		;funcret
   634  00125E                     __end_of_setInterrupts:
   635                           	callstack 0
   636                           
   637 ;; *************** function _serialCallback *****************
   638 ;; Defined at:
   639 ;;		line 25 in file "serial.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, status,2, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;Total ram usage:        0 bytes
   658 ;; Hardware stack levels used: 1
   659 ;; Hardware stack levels required when called: 8
   660 ;; This function calls:
   661 ;;		_transmittRead
   662 ;; This function is called by:
   663 ;;		_main
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text6
   668  0011FA                     __ptext6:
   669                           	callstack 0
   670  0011FA                     _serialCallback:
   671                           	callstack 22
   672  0011FA                     
   673                           ;serial.c: 26:     FLAGS.bits.DISPLAY_READING = 1;
   674  0011FA  8854               	bsf	_FLAGS^0,4,c
   675                           
   676                           ;serial.c: 27:     FLAGS.bits.DISPLAY_SERIAL_READING = 1;
   677  0011FC  8C54               	bsf	_FLAGS^0,6,c
   678  0011FE                     
   679                           ;serial.c: 28:     transmittRead();
   680  0011FE  EC16  F009         	call	_transmittRead	;wreg free
   681  001202  0012               	return		;funcret
   682  001204                     __end_of_serialCallback:
   683                           	callstack 0
   684                           
   685 ;; *************** function _transmittRead *****************
   686 ;; Defined at:
   687 ;;		line 36 in file "serial.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, status,2, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;Total ram usage:        0 bytes
   706 ;; Hardware stack levels used: 1
   707 ;; Hardware stack levels required when called: 7
   708 ;; This function calls:
   709 ;;		_writeSerial
   710 ;; This function is called by:
   711 ;;		_serialCallback
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text7
   716  00122C                     __ptext7:
   717                           	callstack 0
   718  00122C                     _transmittRead:
   719                           	callstack 22
   720  00122C                     
   721                           ;serial.c: 37:     writeSerial(readSerialValue);
   722  00122C  5053               	movf	_readSerialValue^0,w,c
   723  00122E  EC1A  F009         	call	_writeSerial
   724  001232  0012               	return		;funcret
   725  001234                     __end_of_transmittRead:
   726                           	callstack 0
   727                           
   728 ;; *************** function _writeSerial *****************
   729 ;; Defined at:
   730 ;;		line 40 in file "serial.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;  value           1    wreg     unsigned char 
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  value           1    0[COMRAM] unsigned char 
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   745 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   747 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   748 ;;Total ram usage:        1 bytes
   749 ;; Hardware stack levels used: 1
   750 ;; Hardware stack levels required when called: 6
   751 ;; This function calls:
   752 ;;		Nothing
   753 ;; This function is called by:
   754 ;;		_transmittRead
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           	psect	text8
   759  001234                     __ptext8:
   760                           	callstack 0
   761  001234                     _writeSerial:
   762                           	callstack 22
   763                           
   764                           ;incstack = 0
   765                           ;writeSerial@value stored from wreg
   766  001234  6E01               	movwf	writeSerial@value^0,c
   767  001236                     
   768                           ;serial.c: 41:     TXREG1 = value;
   769  001236  C001  FFAD         	movff	writeSerial@value,4013	;volatile
   770  00123A  0012               	return		;funcret
   771  00123C                     __end_of_writeSerial:
   772                           	callstack 0
   773                           
   774 ;; *************** function _displayRequestHandle *****************
   775 ;; Defined at:
   776 ;;		line 16 in file "display.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;		None
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		cstack
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;Total ram usage:        0 bytes
   795 ;; Hardware stack levels used: 1
   796 ;; Hardware stack levels required when called: 8
   797 ;; This function calls:
   798 ;;		_displaySPI
   799 ;;		_displaySerial
   800 ;; This function is called by:
   801 ;;		_main
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           	psect	text9
   806  00117A                     __ptext9:
   807                           	callstack 0
   808  00117A                     _displayRequestHandle:
   809                           	callstack 22
   810  00117A                     
   811                           ;display.c: 17:     if (FLAGS.bits.DISPLAY_SERIAL_READING) {
   812  00117A  AC54               	btfss	_FLAGS^0,6,c
   813  00117C  EFC2  F008         	goto	u91
   814  001180  EFC4  F008         	goto	u90
   815  001184                     u91:
   816  001184  EFC9  F008         	goto	l239
   817  001188                     u90:
   818  001188                     
   819                           ;display.c: 18:         displaySerial();
   820  001188  EC02  F009         	call	_displaySerial	;wreg free
   821  00118C                     
   822                           ;display.c: 19:         FLAGS.bits.DISPLAY_SERIAL_READING = 0;
   823  00118C  9C54               	bcf	_FLAGS^0,6,c
   824                           
   825                           ;display.c: 20:     } else {
   826  00118E  EFD3  F008         	goto	l242
   827  001192                     l239:
   828                           
   829                           ;display.c: 21:         if (FLAGS.bits.DISPLAY_SPI_READING) {
   830  001192  AA54               	btfss	_FLAGS^0,5,c
   831  001194  EFCE  F008         	goto	u101
   832  001198  EFD0  F008         	goto	u100
   833  00119C                     u101:
   834  00119C  EFD3  F008         	goto	l242
   835  0011A0                     u100:
   836  0011A0                     
   837                           ;display.c: 22:             displaySPI();
   838  0011A0  EC07  F009         	call	_displaySPI	;wreg free
   839  0011A4                     
   840                           ;display.c: 23:             FLAGS.bits.DISPLAY_SPI_READING = 0;
   841  0011A4  9A54               	bcf	_FLAGS^0,5,c
   842  0011A6                     l242:
   843  0011A6  0012               	return		;funcret
   844  0011A8                     __end_of_displayRequestHandle:
   845                           	callstack 0
   846                           
   847 ;; *************** function _displaySerial *****************
   848 ;; Defined at:
   849 ;;		line 6 in file "display.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;		None
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      void 
   856 ;; Registers used:
   857 ;;		cstack
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   867 ;;Total ram usage:        0 bytes
   868 ;; Hardware stack levels used: 1
   869 ;; Hardware stack levels required when called: 7
   870 ;; This function calls:
   871 ;;		_displayCallback
   872 ;; This function is called by:
   873 ;;		_displayRequestHandle
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           	psect	text10
   878  001204                     __ptext10:
   879                           	callstack 0
   880  001204                     _displaySerial:
   881                           	callstack 22
   882  001204                     
   883                           ;display.c: 7:     outValue = readSerialValue;
   884  001204  C053  F052         	movff	_readSerialValue,_outValue
   885  001208                     
   886                           ;display.c: 8:     displayCallback();
   887  001208  EC2F  F009         	call	_displayCallback	;wreg free
   888  00120C  0012               	return		;funcret
   889  00120E                     __end_of_displaySerial:
   890                           	callstack 0
   891                           
   892 ;; *************** function _displaySPI *****************
   893 ;; Defined at:
   894 ;;		line 11 in file "display.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		cstack
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   912 ;;Total ram usage:        0 bytes
   913 ;; Hardware stack levels used: 1
   914 ;; Hardware stack levels required when called: 7
   915 ;; This function calls:
   916 ;;		_displayCallback
   917 ;; This function is called by:
   918 ;;		_displayRequestHandle
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text11
   923  00120E                     __ptext11:
   924                           	callstack 0
   925  00120E                     _displaySPI:
   926                           	callstack 22
   927  00120E                     
   928                           ;display.c: 12:     outValue = readSPIValue;
   929  00120E  C055  F052         	movff	_readSPIValue,_outValue
   930  001212                     
   931                           ;display.c: 13:     displayCallback();
   932  001212  EC2F  F009         	call	_displayCallback	;wreg free
   933  001216  0012               	return		;funcret
   934  001218                     __end_of_displaySPI:
   935                           	callstack 0
   936                           
   937 ;; *************** function _displayCallback *****************
   938 ;; Defined at:
   939 ;;		line 28 in file "display.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;		None
   942 ;; Auto vars:     Size  Location     Type
   943 ;;		None
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		None
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;Total ram usage:        0 bytes
   958 ;; Hardware stack levels used: 1
   959 ;; Hardware stack levels required when called: 6
   960 ;; This function calls:
   961 ;;		Nothing
   962 ;; This function is called by:
   963 ;;		_displaySerial
   964 ;;		_displaySPI
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           	psect	text12
   969  00125E                     __ptext12:
   970                           	callstack 0
   971  00125E                     _displayCallback:
   972                           	callstack 22
   973  00125E                     
   974                           ;display.c: 29:     PORTD = outValue;
   975  00125E  C052  FF83         	movff	_outValue,3971	;volatile
   976  001262  0012               	return		;funcret
   977  001264                     __end_of_displayCallback:
   978                           	callstack 0
   979                           
   980 ;; *************** function _buttonCallback *****************
   981 ;; Defined at:
   982 ;;		line 4 in file "button.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;		None
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg, status,2
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   998 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   999 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1000 ;;Total ram usage:        1 bytes
  1001 ;; Hardware stack levels used: 1
  1002 ;; Hardware stack levels required when called: 6
  1003 ;; This function calls:
  1004 ;;		Nothing
  1005 ;; This function is called by:
  1006 ;;		_main
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           	psect	text13
  1011  001134                     __ptext13:
  1012                           	callstack 0
  1013  001134                     _buttonCallback:
  1014                           	callstack 24
  1015  001134                     
  1016                           ;button.c: 5:     if (FLAGS.bits.PREVIOUS_BUTTON_STATE != FLAGS.bits.PUSHED_BUTTON) {
  1017  001134  B654               	btfsc	_FLAGS^0,3,c
  1018  001136  EF9F  F008         	goto	u111
  1019  00113A  EFA2  F008         	goto	u110
  1020  00113E                     u111:
  1021  00113E  0E01               	movlw	1
  1022  001140  EFA3  F008         	goto	u112
  1023  001144                     u110:
  1024  001144  0E00               	movlw	0
  1025  001146                     u112:
  1026  001146  6E01               	movwf	??_buttonCallback^0,c
  1027  001148  B454               	btfsc	_FLAGS^0,2,c
  1028  00114A  EFA9  F008         	goto	u121
  1029  00114E  EFAC  F008         	goto	u120
  1030  001152                     u121:
  1031  001152  0E01               	movlw	1
  1032  001154  EFAD  F008         	goto	u122
  1033  001158                     u120:
  1034  001158  0E00               	movlw	0
  1035  00115A                     u122:
  1036  00115A  1A01               	xorwf	??_buttonCallback^0,f,c
  1037  00115C  B4D8               	btfsc	status,2,c
  1038  00115E  EFB3  F008         	goto	u131
  1039  001162  EFB5  F008         	goto	u130
  1040  001166                     u131:
  1041  001166  EFBC  F008         	goto	l215
  1042  00116A                     u130:
  1043  00116A                     
  1044                           ;button.c: 6:         FLAGS.bits.PREVIOUS_BUTTON_STATE = FLAGS.bits.PUSHED_BUTTON;
  1045  00116A  A654               	btfss	_FLAGS^0,3,c
  1046  00116C  D002               	bra	u145
  1047  00116E  8454               	bsf	_FLAGS^0,2,c
  1048  001170  D001               	bra	u147
  1049  001172                     u145:
  1050  001172  9454               	bcf	_FLAGS^0,2,c
  1051  001174                     u147:
  1052  001174                     
  1053                           ;button.c: 7:         TXREG1 = 'a';
  1054  001174  0E61               	movlw	97
  1055  001176  6EAD               	movwf	173,c	;volatile
  1056  001178                     l215:
  1057  001178  0012               	return		;funcret
  1058  00117A                     __end_of_buttonCallback:
  1059                           	callstack 0
  1060                           
  1061 ;; *************** function _service *****************
  1062 ;; Defined at:
  1063 ;;		line 18 in file "newmain.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, status,2, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;Total ram usage:        0 bytes
  1082 ;; Hardware stack levels used: 1
  1083 ;; Hardware stack levels required when called: 5
  1084 ;; This function calls:
  1085 ;;		_interruptService
  1086 ;; This function is called by:
  1087 ;;		Interrupt level 2
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	intcode
  1092  000008                     __pintcode:
  1093                           	callstack 0
  1094  000008                     _service:
  1095                           	callstack 22
  1096                           
  1097                           ;incstack = 0
  1098  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1099  00000A  ED0C  F009         	call	int_func,f	;refresh shadow registers
  1100                           
  1101                           	psect	intcode_body
  1102  001218                     __pintcode_body:
  1103                           	callstack 22
  1104  001218                     int_func:
  1105                           	callstack 22
  1106  001218  0006               	pop		; remove dummy address from shadow register refresh
  1107  00121A                     
  1108                           ;newmain.c: 19:     interruptService();
  1109  00121A  EC32  F009         	call	_interruptService	;wreg free
  1110  00121E  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1111  001220  0011               	retfie		f
  1112  001222                     __end_of_service:
  1113                           	callstack 0
  1114                           
  1115 ;; *************** function _interruptService *****************
  1116 ;; Defined at:
  1117 ;;		line 28 in file "interruptService.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;		None
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;		None
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg, status,2, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;Total ram usage:        0 bytes
  1136 ;; Hardware stack levels used: 1
  1137 ;; Hardware stack levels required when called: 4
  1138 ;; This function calls:
  1139 ;;		_processInterruptService
  1140 ;; This function is called by:
  1141 ;;		_service
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text15
  1146  001264                     __ptext15:
  1147                           	callstack 0
  1148  001264                     _interruptService:
  1149                           	callstack 22
  1150  001264                     
  1151                           ;interruptService.c: 29:     processInterruptService();
  1152  001264  EC29  F008         	call	_processInterruptService	;wreg free
  1153  001268  0012               	return		;funcret
  1154  00126A                     __end_of_interruptService:
  1155                           	callstack 0
  1156                           
  1157 ;; *************** function _processInterruptService *****************
  1158 ;; Defined at:
  1159 ;;		line 13 in file "interruptService.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1177 ;;Total ram usage:        0 bytes
  1178 ;; Hardware stack levels used: 1
  1179 ;; Hardware stack levels required when called: 3
  1180 ;; This function calls:
  1181 ;;		_SPIHandle
  1182 ;;		_buttonHandle
  1183 ;;		_serialHandle
  1184 ;; This function is called by:
  1185 ;;		_interruptService
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           	psect	text16
  1190  001052                     __ptext16:
  1191                           	callstack 0
  1192  001052                     _processInterruptService:
  1193                           	callstack 22
  1194  001052                     
  1195                           ;interruptService.c: 14:     if (SSPIE == 1 && SSPIF == 1) {
  1196  001052  A69D               	btfss	3997,3,c	;volatile
  1197  001054  EF2E  F008         	goto	i2u2_41
  1198  001058  EF30  F008         	goto	i2u2_40
  1199  00105C                     i2u2_41:
  1200  00105C  EF3A  F008         	goto	i2l953
  1201  001060                     i2u2_40:
  1202  001060  A69E               	btfss	3998,3,c	;volatile
  1203  001062  EF35  F008         	goto	i2u3_41
  1204  001066  EF37  F008         	goto	i2u3_40
  1205  00106A                     i2u3_41:
  1206  00106A  EF3A  F008         	goto	i2l953
  1207  00106E                     i2u3_40:
  1208  00106E                     
  1209                           ;interruptService.c: 15:         SPIHandle();
  1210  00106E  EC1E  F009         	call	_SPIHandle	;wreg free
  1211  001072                     
  1212                           ;interruptService.c: 16:         SSPIF = 0;
  1213  001072  969E               	bcf	3998,3,c	;volatile
  1214  001074                     i2l953:
  1215                           
  1216                           ;interruptService.c: 18:     if (RC1IE == 1 && RC1IF == 1 && FLAGS.bits.UART_RECEIVED ==
      +                           0) {
  1217  001074  AA9D               	btfss	3997,5,c	;volatile
  1218  001076  EF3F  F008         	goto	i2u4_41
  1219  00107A  EF41  F008         	goto	i2u4_40
  1220  00107E                     i2u4_41:
  1221  00107E  EF52  F008         	goto	i2l963
  1222  001082                     i2u4_40:
  1223  001082  AA9E               	btfss	3998,5,c	;volatile
  1224  001084  EF46  F008         	goto	i2u5_41
  1225  001088  EF48  F008         	goto	i2u5_40
  1226  00108C                     i2u5_41:
  1227  00108C  EF52  F008         	goto	i2l963
  1228  001090                     i2u5_40:
  1229  001090  B254               	btfsc	_FLAGS^0,1,c
  1230  001092  EF4D  F008         	goto	i2u6_41
  1231  001096  EF4F  F008         	goto	i2u6_40
  1232  00109A                     i2u6_41:
  1233  00109A  EF52  F008         	goto	i2l963
  1234  00109E                     i2u6_40:
  1235  00109E                     
  1236                           ;interruptService.c: 19:         serialHandle();
  1237  00109E  EC11  F009         	call	_serialHandle	;wreg free
  1238  0010A2                     
  1239                           ;interruptService.c: 20:         RC1IF = 0;
  1240  0010A2  9A9E               	bcf	3998,5,c	;volatile
  1241  0010A4                     i2l963:
  1242                           
  1243                           ;interruptService.c: 22:     if (INTEDG0 == 1 && INT0IF == 1) {
  1244  0010A4  ACF1               	btfss	4081,6,c	;volatile
  1245  0010A6  EF57  F008         	goto	i2u7_41
  1246  0010AA  EF59  F008         	goto	i2u7_40
  1247  0010AE                     i2u7_41:
  1248  0010AE  EF63  F008         	goto	i2l156
  1249  0010B2                     i2u7_40:
  1250  0010B2  A2F2               	btfss	4082,1,c	;volatile
  1251  0010B4  EF5E  F008         	goto	i2u8_41
  1252  0010B8  EF60  F008         	goto	i2u8_40
  1253  0010BC                     i2u8_41:
  1254  0010BC  EF63  F008         	goto	i2l156
  1255  0010C0                     i2u8_40:
  1256  0010C0                     
  1257                           ;interruptService.c: 23:         buttonHandle();
  1258  0010C0  EC37  F009         	call	_buttonHandle	;wreg free
  1259  0010C4                     
  1260                           ;interruptService.c: 24:         INT0IF = 0;
  1261  0010C4  92F2               	bcf	4082,1,c	;volatile
  1262  0010C6                     i2l156:
  1263  0010C6  0012               	return		;funcret
  1264  0010C8                     __end_of_processInterruptService:
  1265                           	callstack 0
  1266                           
  1267 ;; *************** function _serialHandle *****************
  1268 ;; Defined at:
  1269 ;;		line 31 in file "serial.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;		None
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;		None
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      void 
  1276 ;; Registers used:
  1277 ;;		wreg, status,2, cstack
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1287 ;;Total ram usage:        0 bytes
  1288 ;; Hardware stack levels used: 1
  1289 ;; Hardware stack levels required when called: 1
  1290 ;; This function calls:
  1291 ;;		_readSerial
  1292 ;; This function is called by:
  1293 ;;		_processInterruptService
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text17
  1298  001222                     __ptext17:
  1299                           	callstack 0
  1300  001222                     _serialHandle:
  1301                           	callstack 23
  1302  001222                     
  1303                           ;serial.c: 32:     FLAGS.bits.UART_RECEIVED = 1;
  1304  001222  8254               	bsf	_FLAGS^0,1,c
  1305  001224                     
  1306                           ;serial.c: 33:     readSerialValue = readSerial();
  1307  001224  EC35  F009         	call	_readSerial	;wreg free
  1308  001228  6E53               	movwf	_readSerialValue^0,c
  1309  00122A  0012               	return		;funcret
  1310  00122C                     __end_of_serialHandle:
  1311                           	callstack 0
  1312                           
  1313 ;; *************** function _readSerial *****************
  1314 ;; Defined at:
  1315 ;;		line 44 in file "serial.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;		None
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;		None
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      unsigned char 
  1322 ;; Registers used:
  1323 ;;		wreg, status,2
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1333 ;;Total ram usage:        0 bytes
  1334 ;; Hardware stack levels used: 1
  1335 ;; This function calls:
  1336 ;;		Nothing
  1337 ;; This function is called by:
  1338 ;;		_serialHandle
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text18
  1343  00126A                     __ptext18:
  1344                           	callstack 0
  1345  00126A                     _readSerial:
  1346                           	callstack 23
  1347  00126A                     
  1348                           ;serial.c: 45:     return RCREG1;
  1349  00126A  50AE               	movf	174,w,c	;volatile
  1350  00126C  0012               	return		;funcret
  1351  00126E                     __end_of_readSerial:
  1352                           	callstack 0
  1353                           
  1354 ;; *************** function _buttonHandle *****************
  1355 ;; Defined at:
  1356 ;;		line 11 in file "button.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;		None
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;		None
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		None
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;Total ram usage:        0 bytes
  1375 ;; Hardware stack levels used: 1
  1376 ;; This function calls:
  1377 ;;		Nothing
  1378 ;; This function is called by:
  1379 ;;		_processInterruptService
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           	psect	text19
  1384  00126E                     __ptext19:
  1385                           	callstack 0
  1386  00126E                     _buttonHandle:
  1387                           	callstack 24
  1388  00126E                     
  1389                           ;button.c: 12:     FLAGS.bits.PUSHED_BUTTON = 1;
  1390  00126E  8654               	bsf	_FLAGS^0,3,c
  1391  001270  0012               	return		;funcret
  1392  001272                     __end_of_buttonHandle:
  1393                           	callstack 0
  1394                           
  1395 ;; *************** function _SPIHandle *****************
  1396 ;; Defined at:
  1397 ;;		line 54 in file "spi.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;		None
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;		None
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      void 
  1404 ;; Registers used:
  1405 ;;		wreg, status,2, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;Total ram usage:        0 bytes
  1416 ;; Hardware stack levels used: 1
  1417 ;; Hardware stack levels required when called: 2
  1418 ;; This function calls:
  1419 ;;		_spiRead
  1420 ;; This function is called by:
  1421 ;;		_processInterruptService
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text20
  1426  00123C                     __ptext20:
  1427                           	callstack 0
  1428  00123C                     _SPIHandle:
  1429                           	callstack 22
  1430  00123C                     
  1431                           ;spi.c: 55:     readSPIValue = spiRead();
  1432  00123C  EC22  F009         	call	_spiRead	;wreg free
  1433  001240  6E55               	movwf	_readSPIValue^0,c
  1434  001242  0012               	return		;funcret
  1435  001244                     __end_of_SPIHandle:
  1436                           	callstack 0
  1437                           
  1438 ;; *************** function _spiRead *****************
  1439 ;; Defined at:
  1440 ;;		line 48 in file "spi.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;		None
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;		None
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      unsigned char 
  1447 ;; Registers used:
  1448 ;;		wreg, status,2, cstack
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1458 ;;Total ram usage:        0 bytes
  1459 ;; Hardware stack levels used: 1
  1460 ;; Hardware stack levels required when called: 1
  1461 ;; This function calls:
  1462 ;;		_spiReceiveWait
  1463 ;; This function is called by:
  1464 ;;		_SPIHandle
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	text21
  1469  001244                     __ptext21:
  1470                           	callstack 0
  1471  001244                     _spiRead:
  1472                           	callstack 22
  1473  001244                     
  1474                           ;spi.c: 50:     spiReceiveWait();
  1475  001244  ECF5  F008         	call	_spiReceiveWait	;wreg free
  1476  001248                     
  1477                           ;spi.c: 51:     return (SSPBUF);
  1478  001248  50C9               	movf	201,w,c	;volatile
  1479  00124A  0012               	return		;funcret
  1480  00124C                     __end_of_spiRead:
  1481                           	callstack 0
  1482                           
  1483 ;; *************** function _spiReceiveWait *****************
  1484 ;; Defined at:
  1485 ;;		line 31 in file "spi.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		None
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;Total ram usage:        0 bytes
  1504 ;; Hardware stack levels used: 1
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_spiRead
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	text22
  1513  0011EA                     __ptext22:
  1514                           	callstack 0
  1515  0011EA                     _spiReceiveWait:
  1516                           	callstack 22
  1517  0011EA                     i2l79:
  1518  0011EA  A0C7               	btfss	199,0,c	;volatile
  1519  0011EC  EFFA  F008         	goto	i2u1_41
  1520  0011F0  EFFC  F008         	goto	i2u1_40
  1521  0011F4                     i2u1_41:
  1522  0011F4  EFF5  F008         	goto	i2l79
  1523  0011F8                     i2u1_40:
  1524  0011F8  0012               	return		;funcret
  1525  0011FA                     __end_of_spiReceiveWait:
  1526                           	callstack 0
  1527                           
  1528                           	psect	rparam
  1529  0000                     
  1530                           	psect	temp
  1531  000056                     btemp:
  1532                           	callstack 0
  1533  000056                     	ds	1
  1534  0000                     int$flags	set	btemp
  1535  0000                     wtemp8	set	btemp+1
  1536  0000                     ttemp5	set	btemp+1
  1537  0000                     ttemp6	set	btemp+4
  1538  0000                     ttemp7	set	btemp+8
  1539                           
  1540                           	psect	idloc
  1541                           
  1542                           ;Config register IDLOC0 @ 0x200000
  1543                           ;	unspecified, using default values
  1544  200000                     	org	2097152
  1545  200000  FF                 	db	255
  1546                           
  1547                           ;Config register IDLOC1 @ 0x200001
  1548                           ;	unspecified, using default values
  1549  200001                     	org	2097153
  1550  200001  FF                 	db	255
  1551                           
  1552                           ;Config register IDLOC2 @ 0x200002
  1553                           ;	unspecified, using default values
  1554  200002                     	org	2097154
  1555  200002  FF                 	db	255
  1556                           
  1557                           ;Config register IDLOC3 @ 0x200003
  1558                           ;	unspecified, using default values
  1559  200003                     	org	2097155
  1560  200003  FF                 	db	255
  1561                           
  1562                           ;Config register IDLOC4 @ 0x200004
  1563                           ;	unspecified, using default values
  1564  200004                     	org	2097156
  1565  200004  FF                 	db	255
  1566                           
  1567                           ;Config register IDLOC5 @ 0x200005
  1568                           ;	unspecified, using default values
  1569  200005                     	org	2097157
  1570  200005  FF                 	db	255
  1571                           
  1572                           ;Config register IDLOC6 @ 0x200006
  1573                           ;	unspecified, using default values
  1574  200006                     	org	2097158
  1575  200006  FF                 	db	255
  1576                           
  1577                           ;Config register IDLOC7 @ 0x200007
  1578                           ;	unspecified, using default values
  1579  200007                     	org	2097159
  1580  200007  FF                 	db	255
  1581                           
  1582                           	psect	config
  1583                           
  1584                           ; Padding undefined space
  1585  300000                     	org	3145728
  1586  300000  FF                 	db	255
  1587                           
  1588                           ;Config register CONFIG1H @ 0x300001
  1589                           ;	Oscillator Selection bits
  1590                           ;	OSC = XT, XT oscillator
  1591                           ;	Fail-Safe Clock Monitor Enable bit
  1592                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1593                           ;	Internal/External Oscillator Switchover bit
  1594                           ;	IESO = OFF, Two-Speed Start-up disabled
  1595  300001                     	org	3145729
  1596  300001  01                 	db	1
  1597                           
  1598                           ;Config register CONFIG2L @ 0x300002
  1599                           ;	Power-up Timer Enable bit
  1600                           ;	PWRT = OFF, PWRT disabled
  1601                           ;	Brown-out Reset Enable bits
  1602                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1603                           ;	Brown-out Voltage bits
  1604                           ;	BORV = 3, Minimum setting
  1605  300002                     	org	3145730
  1606  300002  19                 	db	25
  1607                           
  1608                           ;Config register CONFIG2H @ 0x300003
  1609                           ;	Watchdog Timer
  1610                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1611                           ;	Watchdog Timer Postscale Select bits
  1612                           ;	WDTPS = 32768, 1:32768
  1613  300003                     	org	3145731
  1614  300003  1E                 	db	30
  1615                           
  1616                           ;Config register CONFIG3L @ 0x300004
  1617                           ;	Processor Data Memory Mode Select bits
  1618                           ;	MODE = MC, Microcontroller mode
  1619                           ;	Address Bus Width Select bits
  1620                           ;	ADDRBW = ADDR20BIT, 20-bit Address Bus
  1621                           ;	Data Bus Width Select bit
  1622                           ;	DATABW = DATA16BIT, 16-bit External Bus mode
  1623                           ;	External Bus Data Wait Enable bit
  1624                           ;	WAIT = OFF, Wait selections are unavailable for table reads and table writes
  1625  300004                     	org	3145732
  1626  300004  F3                 	db	243
  1627                           
  1628                           ;Config register CONFIG3H @ 0x300005
  1629                           ;	CCP2 MUX bit
  1630                           ;	CCP2MX = PORTC, ECCP2 input/output is multiplexed with RC1
  1631                           ;	ECCP MUX bit
  1632                           ;	ECCPMX = PORTE, ECCP1/3 (P1B/P1C/P3B/P3C) are multiplexed onto RE6, RE5, RE4 and RE3 r
      +                          espectively
  1633                           ;	Low-Power Timer1 Oscillator Enable bit
  1634                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1635                           ;	MCLR Pin Enable bit
  1636                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
  1637  300005                     	org	3145733
  1638  300005  83                 	db	131
  1639                           
  1640                           ;Config register CONFIG4L @ 0x300006
  1641                           ;	Stack Full/Underflow Reset Enable bit
  1642                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1643                           ;	Single-Supply ICSP Enable bit
  1644                           ;	LVP = OFF, Single-Supply ICSP disabled
  1645                           ;	Boot Block Size Select bits
  1646                           ;	BBSIZ = BB2K, 1K word (2 Kbytes) Boot Block size
  1647                           ;	Extended Instruction Set Enable bit
  1648                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1649                           ;	Background Debugger Enable bit
  1650                           ;	DEBUG = 0x1, unprogrammed default
  1651  300006                     	org	3145734
  1652  300006  81                 	db	129
  1653                           
  1654                           ; Padding undefined space
  1655  300007                     	org	3145735
  1656  300007  FF                 	db	255
  1657                           
  1658                           ;Config register CONFIG5L @ 0x300008
  1659                           ;	Code Protection bit Block 0
  1660                           ;	CP0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not code-protected
  1661                           ;	Code Protection bit Block 1
  1662                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1663                           ;	Code Protection bit Block 2
  1664                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1665                           ;	Code Protection bit Block 3
  1666                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1667                           ;	Code Protection bit Block 4
  1668                           ;	CP4 = OFF, Block 4 (010000-013FFFh) not code-protected
  1669                           ;	Code Protection bit Block 5
  1670                           ;	CP5 = OFF, Block 5 (014000-017FFFh) not code-protected
  1671                           ;	Code Protection bit Block 6
  1672                           ;	CP6 = OFF, Block 6 (01BFFF-018000h) not code-protected
  1673                           ;	Code Protection bit Block 7
  1674                           ;	CP7 = OFF, Block 7 (01C000-01FFFFh) not code-protected
  1675  300008                     	org	3145736
  1676  300008  FF                 	db	255
  1677                           
  1678                           ;Config register CONFIG5H @ 0x300009
  1679                           ;	Boot Block Code Protection bit
  1680                           ;	CPB = OFF, Boot Block (000000-0007FFh) not code-protected
  1681                           ;	Data EEPROM Code Protection bit
  1682                           ;	CPD = OFF, Data EEPROM not code-protected
  1683  300009                     	org	3145737
  1684  300009  C0                 	db	192
  1685                           
  1686                           ;Config register CONFIG6L @ 0x30000A
  1687                           ;	Write Protection bit Block 0
  1688                           ;	WRT0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not write-protected
  1689                           ;	Write Protection bit Block 1
  1690                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1691                           ;	Write Protection bit Block 2
  1692                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1693                           ;	Write Protection bit Block 3
  1694                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1695                           ;	Write Protection bit Block 4
  1696                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  1697                           ;	Write Protection bit Block 5
  1698                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  1699                           ;	Write Protection bit Block 6
  1700                           ;	WRT6 = OFF, Block 6 (01BFFF-018000h) not write-protected
  1701                           ;	Write Protection bit Block 7
  1702                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  1703  30000A                     	org	3145738
  1704  30000A  FF                 	db	255
  1705                           
  1706                           ;Config register CONFIG6H @ 0x30000B
  1707                           ;	Configuration Register Write Protection bit
  1708                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1709                           ;	Boot Block Write Protection bit
  1710                           ;	WRTB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not write-protected
  1711                           ;	Data EEPROM Write Protection bit
  1712                           ;	WRTD = OFF, Data EEPROM not write-protected
  1713  30000B                     	org	3145739
  1714  30000B  E0                 	db	224
  1715                           
  1716                           ;Config register CONFIG7L @ 0x30000C
  1717                           ;	Table Read Protection bit Block 0
  1718                           ;	EBTR0 = OFF, Block 0 (000800, 001000 or 002000-003FFFh) not protected from table reads
      +                           executed in other blocks
  1719                           ;	Table Read Protection bit Block 1
  1720                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1721                           ;	Table Read Protection bit Block 2
  1722                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1723                           ;	Table Read Protection bit Block 3
  1724                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1725                           ;	Table Read Protection bit Block 4
  1726                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  1727                           ;	Table Read Protection bit Block 5
  1728                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  1729                           ;	Table Read Protection bit Block 6
  1730                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  1731                           ;	Table Read Protection bit Block 7
  1732                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  1733  30000C                     	org	3145740
  1734  30000C  FF                 	db	255
  1735                           
  1736                           ;Config register CONFIG7H @ 0x30000D
  1737                           ;	Boot Block Table Read Protection bit
  1738                           ;	EBTRB = OFF, Boot Block (000000-007FFF, 000FFF or 001FFFh) not protected from table re
      +                          ads executed in other blocks
  1739  30000D                     	org	3145741
  1740  30000D  40                 	db	64
  1741                           tosu	equ	0xFFF
  1742                           tosh	equ	0xFFE
  1743                           tosl	equ	0xFFD
  1744                           stkptr	equ	0xFFC
  1745                           pclatu	equ	0xFFB
  1746                           pclath	equ	0xFFA
  1747                           pcl	equ	0xFF9
  1748                           tblptru	equ	0xFF8
  1749                           tblptrh	equ	0xFF7
  1750                           tblptrl	equ	0xFF6
  1751                           tablat	equ	0xFF5
  1752                           prodh	equ	0xFF4
  1753                           prodl	equ	0xFF3
  1754                           indf0	equ	0xFEF
  1755                           postinc0	equ	0xFEE
  1756                           postdec0	equ	0xFED
  1757                           preinc0	equ	0xFEC
  1758                           plusw0	equ	0xFEB
  1759                           fsr0h	equ	0xFEA
  1760                           fsr0l	equ	0xFE9
  1761                           wreg	equ	0xFE8
  1762                           indf1	equ	0xFE7
  1763                           postinc1	equ	0xFE6
  1764                           postdec1	equ	0xFE5
  1765                           preinc1	equ	0xFE4
  1766                           plusw1	equ	0xFE3
  1767                           fsr1h	equ	0xFE2
  1768                           fsr1l	equ	0xFE1
  1769                           bsr	equ	0xFE0
  1770                           indf2	equ	0xFDF
  1771                           postinc2	equ	0xFDE
  1772                           postdec2	equ	0xFDD
  1773                           preinc2	equ	0xFDC
  1774                           plusw2	equ	0xFDB
  1775                           fsr2h	equ	0xFDA
  1776                           fsr2l	equ	0xFD9
  1777                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    80
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      85
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_buttonCallback
    _transmittRead->_writeSerial

Critical Paths under _service in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _service in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _service in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _service in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _service in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _service in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _service in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _service in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _service in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _service in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _service in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _service in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _service in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _service in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _service in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _service in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _service in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                80    80      0      15
                                              1 COMRAM    80    80      0
                     _buttonCallback
               _displayRequestHandle
                     _serialCallback
                      _setInterrupts
                              _setIo
                    _setSPIInterrupt
                          _setSerial
                 _setSwitchInterrput
 ---------------------------------------------------------------------------------
 (1) _setSwitchInterrput                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSerial                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setSPIInterrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setIo                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setInterrupts                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _serialCallback                                       0     0      0      15
                      _transmittRead
 ---------------------------------------------------------------------------------
 (2) _transmittRead                                        0     0      0      15
                        _writeSerial
 ---------------------------------------------------------------------------------
 (3) _writeSerial                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _displayRequestHandle                                 0     0      0       0
                         _displaySPI
                      _displaySerial
 ---------------------------------------------------------------------------------
 (2) _displaySerial                                        0     0      0       0
                    _displayCallback
 ---------------------------------------------------------------------------------
 (2) _displaySPI                                           0     0      0       0
                    _displayCallback
 ---------------------------------------------------------------------------------
 (3) _displayCallback                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttonCallback                                       1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _service                                              0     0      0       0
                   _interruptService
 ---------------------------------------------------------------------------------
 (5) _interruptService                                     0     0      0       0
            _processInterruptService
 ---------------------------------------------------------------------------------
 (6) _processInterruptService                              0     0      0       0
                          _SPIHandle
                       _buttonHandle
                       _serialHandle
 ---------------------------------------------------------------------------------
 (7) _serialHandle                                         0     0      0       0
                         _readSerial
 ---------------------------------------------------------------------------------
 (8) _readSerial                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _buttonHandle                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _SPIHandle                                            0     0      0       0
                            _spiRead
 ---------------------------------------------------------------------------------
 (8) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (9) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _buttonCallback
   _displayRequestHandle
     _displaySPI
       _displayCallback
     _displaySerial
       _displayCallback
   _serialCallback
     _transmittRead
       _writeSerial
   _setInterrupts
   _setIo
   _setSPIInterrupt
   _setSerial
   _setSwitchInterrput

 _service (ROOT)
   _interruptService
     _processInterruptService
       _SPIHandle
         _spiRead
           _spiReceiveWait
       _buttonHandle
       _serialHandle
         _readSerial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      55       1       90.4%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      55       6        0.0%
DATA                 0      0      55       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jun 27 16:36:26 2021

        ?_processInterruptService 0001                       _SSPSTATbits 000FC7  
                              l71 1256                                u90 1188  
                              u91 1184                               l120 11E8  
                             l201 1232                               l123 125C  
                             l204 123A                               l126 1250  
                             l215 1178                               l233 120C  
                             l242 11A6                               l236 1216  
                             l245 1262                               l239 1192  
                             l192 11D8                               l195 1202  
                             l941 1236                               l943 125E  
                             l971 122C                               l973 1204  
                             l975 1208                               l983 11DA  
                             l991 1252                               l977 120E  
                             l985 11E2                               l993 11C2  
                             l979 1212                               l987 11E4  
                             l995 11C4                               _GIE 007F97  
                             l989 11E6                               l997 11C8  
                             l999 11CA                               u100 11A0  
                             u101 119C                               u110 1144  
                             u111 113E                               u120 1158  
                             u112 1146                               u121 1152  
                             u130 116A                               u122 115A  
                             u131 1166                               u150 10E6  
                             u160 10FE                               u145 1172  
                             u161 10FA                               u170 1112  
                             u147 1174                               u171 110E  
                             u180 1126                               u181 1122  
                             wreg 000FE8                    ?_displaySerial 0001  
          ??_displayRequestHandle 0001                              l1001 11CC  
                            l1011 1258                              l1003 11CE  
                            l1021 11A4                              l1013 117A  
                            l1005 11D0                              l1031 1174  
                            l1015 1188                              l1023 11FA  
                            l1007 11D2                              l1017 118C  
                            l1025 11FE                              l1009 124C  
                            l1041 10DC                              l1027 1134  
                            l1019 11A0                              l1051 1112  
                            l1043 10F0                              l1035 10C8  
                            l1029 116A                              l1053 1116  
                            l1045 10FE                              l1037 10CC  
                            l1055 1118                              l1047 1102  
                            l1039 10D0                              l1057 1126  
                            l1049 1104                              l1059 112A  
                            _PEIE 007F96                              i2l31 121E  
                            i2l82 11F8                              i2l93 124A  
                            i2l79 11EA                              i2l96 1242  
                            _main 10C8                              btemp 0056  
                            start 000E                      ___param_bank 000000  
        __end_of_interruptService 126A                _setSwitchInterrput 124C  
                           ?_main 0001                             _BRGH1 007D62  
                           _CREN1 007D5C                             _FLAGS 0054  
                           _LATC0 007C58                             _RC1IE 007CED  
                           _RC1IF 007CF5               ?_setSwitchInterrput 0001  
                           i2l207 126C                             i2l218 1270  
                           i2l156 10C6                             i2l159 1268  
                           i2l198 122A                             i2l921 11EA  
                           i2l923 1244                             i2l925 1248  
                           i2l933 123C                             i2l935 1222  
                           i2l951 1072                             i2l929 126A  
                           i2l937 1224                             i2l961 10A2  
                           i2l953 1074                             i2l945 1052  
                           i2l939 126E                             i2l955 1082  
                           i2l963 10A4                             i2l947 1060  
                           i2l965 10B2                             i2l957 1090  
                           i2l949 106E                             i2l981 1264  
                           i2l967 10C0                             i2l959 109E  
                           i2l969 10C4                       _writeSerial 1234  
                           _SPEN1 007D5F                             _SPBRG 000FAF  
                           _PORTD 000F83                             _TRISD 000F95  
                           _SSPIE 007CEB                             _SSPIF 007CF3  
                           _TXEN1 007D65                             _SYNC1 007D64  
                   _transmittRead 122C                             _setIo 11DA  
                ?_displayCallback 0001                __size_of_SPIHandle 0008  
                 __end_of_spiRead 124C                             tablat 000FF5  
                 __end_of_service 1222                             ttemp5 0057  
                           ttemp6 005A                             ttemp7 005E  
                           status 000FD8             __end_of_setInterrupts 125E  
                           wtemp8 0057              ??_setSwitchInterrput 0001  
                 __initialization 11A8                      __end_of_main 1134  
                 _readSerialValue 0053                            ??_main 0002  
                   __activetblptr 000001                    ?_transmittRead 0001  
                 ??_displaySerial 0001                            ?_setIo 0001  
                   ?_buttonHandle 0001                            _INT0IE 007F94  
                          _INT0IF 007F91                            i2l1033 121A  
                          _RCREG1 000FAE                            i2u1_40 11F8  
                          i2u1_41 11F4                            i2u2_40 1060  
                          i2u2_41 105C                            i2u3_40 106E  
                          i2u3_41 106A                            i2u4_40 1082  
                          i2u4_41 107E                            i2u5_40 1090  
                          i2u5_41 108C                            i2u6_40 109E  
                          i2u6_41 109A                            i2u7_40 10B2  
                          i2u7_41 10AE                            i2u8_40 10C0  
                          i2u8_41 10BC                            _TRISB0 007C98  
                          _TRISC2 007CA2                            _TRISC3 007CA3  
                          _TRISC4 007CA4                            _TRISC5 007CA5  
                          _TRISC6 007CA6                            _TRISC7 007CA7  
                          _SSPBUF 000FC9                            _TXREG1 000FAD  
               __end_of_SPIHandle 1244           __size_of_serialCallback 000A  
                          isa$std 000001                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                         ??_spiRead 0001  
                       ??_service 0001                    ??_buttonHandle 0001  
                      __accesstop 0060           __end_of__initialization 11B0  
                   ___rparam_used 000001                    __pcstackCOMRAM 0001  
                   __end_of_setIo 11EA                   ??_transmittRead 0002  
        __size_of_setSPIInterrupt 0006  __size_of_processInterruptService 0076  
                         ??_setIo 0001                 ?_interruptService 0001  
         __size_of_spiReceiveWait 0010                __size_of_setSerial 0018  
              ??_interruptService 0001                      ?_writeSerial 0001  
                         _INTEDG0 007F8E                        _displaySPI 120E  
                         _SSPSTAT 000FC7           __size_of_buttonCallback 0046  
   __size_of_displayRequestHandle 002E                     ?_serialHandle 0001  
                         __Hparam 0000                           __Lparam 0000  
                      _readSerial 126A              __end_of_buttonHandle 1272  
                    __psmallconst 1000                    _serialCallback 11FA  
                         __pcinit 11A8                           __ramtop 1000  
                         __ptext0 10C8                           __ptext1 124C  
                         __ptext2 11C2                           __ptext3 1252  
                         __ptext4 11DA                           __ptext5 1258  
                         __ptext6 11FA                           __ptext7 122C  
                         __ptext8 1234                           __ptext9 117A  
                         _spiRead 1244                           _service 0008  
                  __pintcode_body 1218              end_of_initialization 11B0  
               __end_of_setSerial 11DA                    ??_serialHandle 0001  
                         int_func 1218                 ??_setSPIInterrupt 0001  
     __size_of_setSwitchInterrput 0006                 __end_ofmain@F4611 1051  
        __size_of_displayCallback 0006            __end_of_serialCallback 1204  
                         postinc2 000FDE            __size_of_setInterrupts 0006  
                       _SPIHandle 123C           _processInterruptService 1052  
                     ?_displaySPI 0001             __end_of_displaySerial 120E  
                 ?_serialCallback 0001                    _spiReceiveWait 11EA  
                     ?_readSerial 0001                        ?_SPIHandle 0001  
             start_initialization 11A8              __size_of_writeSerial 0008  
                  _buttonCallback 1134                     _setInterrupts 1258  
                    _readSPIValue 0055             __size_of_buttonHandle 0004  
          __end_of_spiReceiveWait 11FA               __size_of_displaySPI 000A  
               ??_displayCallback 0001              __end_of_serialHandle 122C  
       ??_processInterruptService 0001             __end_of_transmittRead 1234  
                     __pbssCOMRAM 0052            __end_of_buttonCallback 117A  
       __size_of_interruptService 0006                      _buttonHandle 126E  
             __size_of_readSerial 0004                    ?_setInterrupts 0001  
                 ?_spiReceiveWait 0001                         __pintcode 0008  
    __end_of_displayRequestHandle 11A8                       __smallconst 1000  
                     ??_SPIHandle 0001                   _setSPIInterrupt 1252  
                        ?_spiRead 0001                   ?_buttonCallback 0001  
                        ?_service 0001                    __size_of_setIo 0010  
 __end_of_processInterruptService 10C8                         _setSerial 11C2  
                       main@F4611 1001                          _SSP1CON1 000FC6  
                    ??_displaySPI 0001                   ??_setInterrupts 0001  
      __end_of_setSwitchInterrput 1252                  ??_serialCallback 0002  
                      ?_setSerial 0001                          __Hrparam 0000  
                        __Lrparam 0000                      __Lsmallconst 1000  
           __size_of_serialHandle 000A                      ??_readSerial 0001  
              __end_of_displaySPI 1218           __end_of_setSPIInterrupt 1258  
                _interruptService 1264                          __ptext10 1204  
                        __ptext11 120E                          __ptext20 123C  
                        __ptext12 125E                          __ptext21 1244  
                        __ptext13 1134                          __ptext22 11EA  
                        __ptext15 1264                          __ptext16 1052  
                        __ptext17 1222                          __ptext18 126A  
                        __ptext19 126E                  __size_of_spiRead 0008  
                __size_of_service 121A              _displayRequestHandle 117A  
              __end_of_readSerial 126E                     __size_of_main 006C  
                    _serialHandle 1222                   _displayCallback 125E  
                        isa$xinst 000000                          _outValue 0052  
                        int$flags 0056            __size_of_displaySerial 000A  
                        main@test 0002                     ??_writeSerial 0001  
                        intlevel2 0000             ?_displayRequestHandle 0001  
                ??_spiReceiveWait 0001                       ??_setSerial 0001  
                ?_setSPIInterrupt 0001                  ??_buttonCallback 0001  
             __end_of_writeSerial 123C                     _displaySerial 1204  
         __end_of_displayCallback 1264            __size_of_transmittRead 0008  
                writeSerial@value 0001  
